// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace eqproto {

namespace {

const ::google::protobuf::Descriptor* ChannelMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChannelMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommandMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommandMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* Entity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Entity_reflection_ = NULL;
const ::google::protobuf::Descriptor* Entities_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Entities_reflection_ = NULL;
const ::google::protobuf::Descriptor* Position_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Position_reflection_ = NULL;
const ::google::protobuf::Descriptor* TextureProfile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TextureProfile_reflection_ = NULL;
const ::google::protobuf::Descriptor* Texture_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Texture_reflection_ = NULL;
const ::google::protobuf::Descriptor* TintProfile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TintProfile_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tint_reflection_ = NULL;
const ::google::protobuf::Descriptor* Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Event_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeathEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeathEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* DamageEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DamageEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChannelMessageEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChannelMessageEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpecialMessageEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpecialMessageEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewZoneEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewZoneEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* WearChangeEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WearChangeEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSpawnEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSpawnEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* HPEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HPEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerPositionUpdateEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerPositionUpdateEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnimationEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnimationEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpawnEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpawnEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* AlternateAdvancementStatsEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AlternateAdvancementStatsEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZoneCompleteEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZoneCompleteEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseAAEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseAAEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EntityType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DeityType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* DeityTypeBit_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BodyType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GenderType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OpCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  ChannelMessage_descriptor_ = file->message_type(0);
  static const int ChannelMessage_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, guilddbid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, deliverto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, minstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, fromadmin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, noreply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, is_emote_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, queued_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, from_entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, from_entity_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, skip_sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, response_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, response_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, response_error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, response_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, response_payload_),
  };
  ChannelMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChannelMessage_descriptor_,
      ChannelMessage::internal_default_instance(),
      ChannelMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChannelMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessage, _internal_metadata_));
  CommandMessage_descriptor_ = file->message_type(1);
  static const int CommandMessage_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, author_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, response_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, response_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, response_error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, response_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, response_payload_),
  };
  CommandMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommandMessage_descriptor_,
      CommandMessage::internal_default_instance(),
      CommandMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommandMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandMessage, _internal_metadata_));
  Entity_descriptor_ = file->message_type(2);
  static const int Entity_offsets_[49] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, race_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, max_hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, spawn_timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, lastname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, deity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, npctype_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, runspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, texture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, helmtexture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, ac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, sta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, dex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, agi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, int__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, wis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, cha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, haircolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, beardcolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, eyecolor1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, eyecolor2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_db_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_incline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_opentype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_guild_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_lockpick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_keyitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_nokeyring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_trigger_door_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_trigger_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_invert_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_disable_timer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_is_open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_is_ldon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, door_client_version_mask_),
  };
  Entity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Entity_descriptor_,
      Entity::internal_default_instance(),
      Entity_offsets_,
      -1,
      -1,
      -1,
      sizeof(Entity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, _internal_metadata_));
  Entities_descriptor_ = file->message_type(3);
  static const int Entities_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, entities_),
  };
  Entities_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Entities_descriptor_,
      Entities::internal_default_instance(),
      Entities_offsets_,
      -1,
      -1,
      -1,
      sizeof(Entities),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entities, _internal_metadata_));
  Position_descriptor_ = file->message_type(4);
  static const int Position_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, h_),
  };
  Position_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Position_descriptor_,
      Position::internal_default_instance(),
      Position_offsets_,
      -1,
      -1,
      -1,
      sizeof(Position),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _internal_metadata_));
  TextureProfile_descriptor_ = file->message_type(5);
  static const int TextureProfile_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, chest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, arms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, wrist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, hands_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, legs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, feet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, primary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, secondary_),
  };
  TextureProfile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TextureProfile_descriptor_,
      TextureProfile::internal_default_instance(),
      TextureProfile_offsets_,
      -1,
      -1,
      -1,
      sizeof(TextureProfile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextureProfile, _internal_metadata_));
  Texture_descriptor_ = file->message_type(6);
  static const int Texture_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, unknown1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, elitemodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, herosforgemodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, unknown2_),
  };
  Texture_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Texture_descriptor_,
      Texture::internal_default_instance(),
      Texture_offsets_,
      -1,
      -1,
      -1,
      sizeof(Texture),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Texture, _internal_metadata_));
  TintProfile_descriptor_ = file->message_type(7);
  static const int TintProfile_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, head_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, chest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, arms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, wrist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, hands_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, legs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, feet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, primary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, secondary_),
  };
  TintProfile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TintProfile_descriptor_,
      TintProfile::internal_default_instance(),
      TintProfile_offsets_,
      -1,
      -1,
      -1,
      sizeof(TintProfile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TintProfile, _internal_metadata_));
  Tint_descriptor_ = file->message_type(8);
  static const int Tint_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, blue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, usetint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, color_),
  };
  Tint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Tint_descriptor_,
      Tint::internal_default_instance(),
      Tint_offsets_,
      -1,
      -1,
      -1,
      sizeof(Tint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tint, _internal_metadata_));
  Event_descriptor_ = file->message_type(9);
  static const int Event_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, entity_id_),
  };
  Event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Event_descriptor_,
      Event::internal_default_instance(),
      Event_offsets_,
      -1,
      -1,
      -1,
      sizeof(Event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_));
  DeathEvent_descriptor_ = file->message_type(10);
  static const int DeathEvent_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, killer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, corpse_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, bind_zone_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, spell_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, attack_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, unknown028_),
  };
  DeathEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeathEvent_descriptor_,
      DeathEvent::internal_default_instance(),
      DeathEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeathEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeathEvent, _internal_metadata_));
  DamageEvent_descriptor_ = file->message_type(11);
  static const int DamageEvent_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, spellid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, meleepush_xy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, meleepush_z_),
  };
  DamageEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DamageEvent_descriptor_,
      DamageEvent::internal_default_instance(),
      DamageEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(DamageEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DamageEvent, _internal_metadata_));
  EntityEvent_descriptor_ = file->message_type(12);
  static const int EntityEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, entity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, target_id_),
  };
  EntityEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityEvent_descriptor_,
      EntityEvent::internal_default_instance(),
      EntityEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(EntityEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityEvent, _internal_metadata_));
  ChannelMessageEvent_descriptor_ = file->message_type(13);
  static const int ChannelMessageEvent_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, target_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, cm_unknown4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, skill_in_language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, message_),
  };
  ChannelMessageEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChannelMessageEvent_descriptor_,
      ChannelMessageEvent::internal_default_instance(),
      ChannelMessageEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChannelMessageEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChannelMessageEvent, _internal_metadata_));
  SpecialMessageEvent_descriptor_ = file->message_type(14);
  static const int SpecialMessageEvent_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, target_spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, sayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, unknown12_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, message_),
  };
  SpecialMessageEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpecialMessageEvent_descriptor_,
      SpecialMessageEvent::internal_default_instance(),
      SpecialMessageEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(SpecialMessageEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecialMessageEvent, _internal_metadata_));
  NewZoneEvent_descriptor_ = file->message_type(15);
  static const int NewZoneEvent_offsets_[36] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, char_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_short_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_long_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, ztype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_blue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown323_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_minclip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_maxclip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, gravity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, time_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, rain_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, rain_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, snow_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, snow_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown360_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, sky_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown331_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_exp_multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, safe_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, safe_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, safe_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, max_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, underworld_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, minclip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, maxclip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_short_name2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown672_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, zone_instance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown688_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, unknown692_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, fog_density_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, suspend_buffs_),
  };
  NewZoneEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewZoneEvent_descriptor_,
      NewZoneEvent::internal_default_instance(),
      NewZoneEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(NewZoneEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewZoneEvent, _internal_metadata_));
  WearChangeEvent_descriptor_ = file->message_type(16);
  static const int WearChangeEvent_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, unknown06_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, elite_material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, hero_forge_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, unknown18_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, wear_slot_id_),
  };
  WearChangeEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WearChangeEvent_descriptor_,
      WearChangeEvent::internal_default_instance(),
      WearChangeEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(WearChangeEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WearChangeEvent, _internal_metadata_));
  DeleteSpawnEvent_descriptor_ = file->message_type(17);
  static const int DeleteSpawnEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSpawnEvent, spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSpawnEvent, decay_),
  };
  DeleteSpawnEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteSpawnEvent_descriptor_,
      DeleteSpawnEvent::internal_default_instance(),
      DeleteSpawnEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteSpawnEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSpawnEvent, _internal_metadata_));
  HPEvent_descriptor_ = file->message_type(18);
  static const int HPEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HPEvent, spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HPEvent, cur_hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HPEvent, max_hp_),
  };
  HPEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HPEvent_descriptor_,
      HPEvent::internal_default_instance(),
      HPEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(HPEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HPEvent, _internal_metadata_));
  PlayerPositionUpdateEvent_descriptor_ = file->message_type(19);
  static const int PlayerPositionUpdateEvent_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, spawn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, delta_heading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, x_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, padding0002_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, y_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, padding0006_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, z_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, delta_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, delta_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, heading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, padding0014_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, delta_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, padding0018_),
  };
  PlayerPositionUpdateEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerPositionUpdateEvent_descriptor_,
      PlayerPositionUpdateEvent::internal_default_instance(),
      PlayerPositionUpdateEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerPositionUpdateEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPositionUpdateEvent, _internal_metadata_));
  AnimationEvent_descriptor_ = file->message_type(20);
  static const int AnimationEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimationEvent, spawnid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimationEvent, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimationEvent, action_),
  };
  AnimationEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AnimationEvent_descriptor_,
      AnimationEvent::internal_default_instance(),
      AnimationEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(AnimationEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimationEvent, _internal_metadata_));
  SpawnEvent_descriptor_ = file->message_type(21);
  static const int SpawnEvent_offsets_[99] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0000_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, gm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0003_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, aaitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0004_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, anon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, face_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, deity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0073_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0079_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, invis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, haircolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, max_hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, findable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0089_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, deltaheading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, padding0054_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, animation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, padding0058_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, deltay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, deltax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, heading_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, padding0066_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, deltaz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, padding0070_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, eyecolor1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0115_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, standstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, drakkin_heritage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, drakkin_tattoo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, drakkin_details_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, showhelm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0140_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, is_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, hairstyle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, beard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0147_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, playerstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, beardcolor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, suffix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, petownerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, guildrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0194_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, equipment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, runspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, afk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, guildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0274_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, set_to_0xff_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, helm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, race_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0288_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, lastname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, walkspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0328_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, is_pet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, light_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, eyecolor2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, flymode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, bodytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0336_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, equip_chest2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, mount_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, spawnid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, unknown0344_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, ismercenary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, equipment_tint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, lfg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleobject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructiblemodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructiblename2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructiblestring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleappearance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleid1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleid2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleid3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleid4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, destructibleunk9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, targetable_with_hotkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, show_name_),
  };
  SpawnEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpawnEvent_descriptor_,
      SpawnEvent::internal_default_instance(),
      SpawnEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(SpawnEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEvent, _internal_metadata_));
  AlternateAdvancementStatsEvent_descriptor_ = file->message_type(22);
  static const int AlternateAdvancementStatsEvent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, unspent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, unknown006_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, percentage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, unknown009_),
  };
  AlternateAdvancementStatsEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AlternateAdvancementStatsEvent_descriptor_,
      AlternateAdvancementStatsEvent::internal_default_instance(),
      AlternateAdvancementStatsEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(AlternateAdvancementStatsEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlternateAdvancementStatsEvent, _internal_metadata_));
  ZoneCompleteEvent_descriptor_ = file->message_type(23);
  static const int ZoneCompleteEvent_offsets_[1] = {
  };
  ZoneCompleteEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZoneCompleteEvent_descriptor_,
      ZoneCompleteEvent::internal_default_instance(),
      ZoneCompleteEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZoneCompleteEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneCompleteEvent, _internal_metadata_));
  UseAAEvent_descriptor_ = file->message_type(24);
  static const int UseAAEvent_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, exp_value_),
  };
  UseAAEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseAAEvent_descriptor_,
      UseAAEvent::internal_default_instance(),
      UseAAEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseAAEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseAAEvent, _internal_metadata_));
  ErrorType_descriptor_ = file->enum_type(0);
  EntityType_descriptor_ = file->enum_type(1);
  DeityType_descriptor_ = file->enum_type(2);
  DeityTypeBit_descriptor_ = file->enum_type(3);
  MessageType_descriptor_ = file->enum_type(4);
  BodyType_descriptor_ = file->enum_type(5);
  GenderType_descriptor_ = file->enum_type(6);
  OpCode_descriptor_ = file->enum_type(7);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChannelMessage_descriptor_, ChannelMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommandMessage_descriptor_, CommandMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Entity_descriptor_, Entity::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Entities_descriptor_, Entities::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Position_descriptor_, Position::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TextureProfile_descriptor_, TextureProfile::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Texture_descriptor_, Texture::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TintProfile_descriptor_, TintProfile::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Tint_descriptor_, Tint::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Event_descriptor_, Event::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeathEvent_descriptor_, DeathEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DamageEvent_descriptor_, DamageEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityEvent_descriptor_, EntityEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChannelMessageEvent_descriptor_, ChannelMessageEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpecialMessageEvent_descriptor_, SpecialMessageEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewZoneEvent_descriptor_, NewZoneEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WearChangeEvent_descriptor_, WearChangeEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteSpawnEvent_descriptor_, DeleteSpawnEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HPEvent_descriptor_, HPEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerPositionUpdateEvent_descriptor_, PlayerPositionUpdateEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AnimationEvent_descriptor_, AnimationEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpawnEvent_descriptor_, SpawnEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AlternateAdvancementStatsEvent_descriptor_, AlternateAdvancementStatsEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZoneCompleteEvent_descriptor_, ZoneCompleteEvent::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseAAEvent_descriptor_, UseAAEvent::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  ChannelMessage_default_instance_.Shutdown();
  delete ChannelMessage_reflection_;
  CommandMessage_default_instance_.Shutdown();
  delete CommandMessage_reflection_;
  Entity_default_instance_.Shutdown();
  delete Entity_reflection_;
  Entities_default_instance_.Shutdown();
  delete Entities_reflection_;
  Position_default_instance_.Shutdown();
  delete Position_reflection_;
  TextureProfile_default_instance_.Shutdown();
  delete TextureProfile_reflection_;
  Texture_default_instance_.Shutdown();
  delete Texture_reflection_;
  TintProfile_default_instance_.Shutdown();
  delete TintProfile_reflection_;
  Tint_default_instance_.Shutdown();
  delete Tint_reflection_;
  Event_default_instance_.Shutdown();
  delete Event_reflection_;
  DeathEvent_default_instance_.Shutdown();
  delete DeathEvent_reflection_;
  DamageEvent_default_instance_.Shutdown();
  delete DamageEvent_reflection_;
  EntityEvent_default_instance_.Shutdown();
  delete EntityEvent_reflection_;
  ChannelMessageEvent_default_instance_.Shutdown();
  delete ChannelMessageEvent_reflection_;
  SpecialMessageEvent_default_instance_.Shutdown();
  delete SpecialMessageEvent_reflection_;
  NewZoneEvent_default_instance_.Shutdown();
  delete NewZoneEvent_reflection_;
  WearChangeEvent_default_instance_.Shutdown();
  delete WearChangeEvent_reflection_;
  DeleteSpawnEvent_default_instance_.Shutdown();
  delete DeleteSpawnEvent_reflection_;
  HPEvent_default_instance_.Shutdown();
  delete HPEvent_reflection_;
  PlayerPositionUpdateEvent_default_instance_.Shutdown();
  delete PlayerPositionUpdateEvent_reflection_;
  AnimationEvent_default_instance_.Shutdown();
  delete AnimationEvent_reflection_;
  SpawnEvent_default_instance_.Shutdown();
  delete SpawnEvent_reflection_;
  AlternateAdvancementStatsEvent_default_instance_.Shutdown();
  delete AlternateAdvancementStatsEvent_reflection_;
  ZoneCompleteEvent_default_instance_.Shutdown();
  delete ZoneCompleteEvent_reflection_;
  UseAAEvent_default_instance_.Shutdown();
  delete UseAAEvent_reflection_;
}

void protobuf_InitDefaults_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ChannelMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CommandMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Entity_default_instance_.DefaultConstruct();
  Entities_default_instance_.DefaultConstruct();
  Position_default_instance_.DefaultConstruct();
  TextureProfile_default_instance_.DefaultConstruct();
  Texture_default_instance_.DefaultConstruct();
  TintProfile_default_instance_.DefaultConstruct();
  Tint_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Event_default_instance_.DefaultConstruct();
  DeathEvent_default_instance_.DefaultConstruct();
  DamageEvent_default_instance_.DefaultConstruct();
  EntityEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ChannelMessageEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SpecialMessageEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  NewZoneEvent_default_instance_.DefaultConstruct();
  WearChangeEvent_default_instance_.DefaultConstruct();
  DeleteSpawnEvent_default_instance_.DefaultConstruct();
  HPEvent_default_instance_.DefaultConstruct();
  PlayerPositionUpdateEvent_default_instance_.DefaultConstruct();
  AnimationEvent_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SpawnEvent_default_instance_.DefaultConstruct();
  AlternateAdvancementStatsEvent_default_instance_.DefaultConstruct();
  ZoneCompleteEvent_default_instance_.DefaultConstruct();
  UseAAEvent_default_instance_.DefaultConstruct();
  ChannelMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  CommandMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  Entity_default_instance_.get_mutable()->InitAsDefaultInstance();
  Entities_default_instance_.get_mutable()->InitAsDefaultInstance();
  Position_default_instance_.get_mutable()->InitAsDefaultInstance();
  TextureProfile_default_instance_.get_mutable()->InitAsDefaultInstance();
  Texture_default_instance_.get_mutable()->InitAsDefaultInstance();
  TintProfile_default_instance_.get_mutable()->InitAsDefaultInstance();
  Tint_default_instance_.get_mutable()->InitAsDefaultInstance();
  Event_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeathEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  DamageEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  EntityEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  ChannelMessageEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  SpecialMessageEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  NewZoneEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  WearChangeEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  DeleteSpawnEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  HPEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerPositionUpdateEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  AnimationEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  SpawnEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  AlternateAdvancementStatsEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  ZoneCompleteEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
  UseAAEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_message_2eproto_once_);
void protobuf_InitDefaults_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_message_2eproto_once_,
                 &protobuf_InitDefaults_message_2eproto_impl);
}
void protobuf_AddDesc_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_message_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\007eqproto\"\375\003\n\016ChannelMess"
    "age\022$\n\006number\030\001 \001(\0162\024.eqproto.MessageTyp"
    "e\022\020\n\010language\030\002 \001(\005\022\014\n\004from\030\003 \001(\t\022\n\n\002to\030"
    "\004 \001(\t\022\017\n\007message\030\005 \001(\t\022\021\n\tguilddbid\030\006 \001("
    "\005\022\021\n\tdeliverto\030\007 \001(\t\022\014\n\004type\030\010 \001(\005\022\021\n\tmi"
    "nstatus\030\t \001(\005\022\021\n\tfromadmin\030\n \001(\005\022\017\n\007nore"
    "ply\030\013 \001(\010\022\020\n\010is_emote\030\014 \001(\010\022\016\n\006queued\030\r "
    "\001(\005\022\026\n\016from_entity_id\030\020 \001(\005\022-\n\020from_enti"
    "ty_type\030\021 \001(\0162\023.eqproto.EntityType\022\020\n\010di"
    "stance\030\022 \001(\002\022\023\n\013skip_sender\030\023 \001(\010\022\030\n\020res"
    "ponse_message\030\024 \001(\t\022\026\n\016response_value\030\025 "
    "\001(\005\022*\n\016response_error\030\026 \001(\0162\022.eqproto.Er"
    "rorType\022\025\n\rresponse_type\030\027 \001(\t\022\030\n\020respon"
    "se_payload\030\030 \001(\014\"\320\001\n\016CommandMessage\022\016\n\006a"
    "uthor\030\001 \001(\t\022\017\n\007command\030\002 \001(\t\022\016\n\006params\030\003"
    " \003(\t\022\030\n\020response_message\030\004 \001(\t\022\026\n\016respon"
    "se_value\030\005 \001(\005\022*\n\016response_error\030\006 \001(\0162\022"
    ".eqproto.ErrorType\022\025\n\rresponse_type\030\007 \001("
    "\t\022\030\n\020response_payload\030\010 \001(\014\"\370\007\n\006Entity\022\n"
    "\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022!\n\004type\030\003 \001(\0162\023"
    ".eqproto.EntityType\022\n\n\002hp\030\004 \001(\005\022\r\n\005level"
    "\030\005 \001(\005\022#\n\010position\030\006 \001(\0132\021.eqproto.Posit"
    "ion\022\014\n\004race\030\007 \001(\005\022\r\n\005class\030\010 \001(\005\022\016\n\006max_"
    "hp\030\t \001(\005\022\027\n\017spawn_timestamp\030\n \001(\003\022\020\n\010las"
    "tname\030\r \001(\t\022#\n\006gender\030\016 \001(\0162\023.eqproto.Ge"
    "nderType\022#\n\010bodytype\030\017 \001(\0162\021.eqproto.Bod"
    "yType\022!\n\005deity\030\020 \001(\0162\022.eqproto.DeityType"
    "\022\022\n\nnpctype_id\030\021 \001(\r\022\014\n\004size\030\022 \001(\002\022\020\n\010ru"
    "nspeed\030\023 \001(\002\022\017\n\007texture\030\025 \001(\005\022\023\n\013helmtex"
    "ture\030\026 \001(\005\022\n\n\002ac\030\027 \001(\005\022\013\n\003atk\030\030 \001(\005\022\013\n\003s"
    "tr\030\031 \001(\005\022\013\n\003sta\030\032 \001(\005\022\013\n\003dex\030\033 \001(\005\022\013\n\003ag"
    "i\030\034 \001(\005\022\013\n\003int\030\035 \001(\005\022\013\n\003wis\030\036 \001(\005\022\013\n\003cha"
    "\030\037 \001(\005\022\021\n\thaircolor\030  \001(\005\022\022\n\nbeardcolor\030"
    "! \001(\005\022\021\n\teyecolor1\030\" \001(\005\022\021\n\teyecolor2\030# "
    "\001(\005\022\022\n\ndoor_db_id\030d \001(\r\022\017\n\007door_id\030e \001(\r"
    "\022\021\n\tdoor_name\030g \001(\t\022\024\n\014door_incline\030h \001("
    "\005\022\025\n\rdoor_opentype\030i \001(\r\022\025\n\rdoor_guild_i"
    "d\030j \001(\r\022\025\n\rdoor_lockpick\030k \001(\r\022\024\n\014door_k"
    "eyitem\030l \001(\r\022\026\n\016door_nokeyring\030m \001(\r\022\034\n\024"
    "door_trigger_door_id\030n \001(\r\022\031\n\021door_trigg"
    "er_type\030o \001(\r\022\022\n\ndoor_param\030p \001(\r\022\031\n\021doo"
    "r_invert_state\030q \001(\005\022\032\n\022door_disable_tim"
    "er\030r \001(\010\022\024\n\014door_is_open\030s \001(\010\022\024\n\014door_i"
    "s_ldon\030w \001(\r\022 \n\030door_client_version_mask"
    "\030x \001(\r\"-\n\010Entities\022!\n\010entities\030\001 \003(\0132\017.e"
    "qproto.Entity\"6\n\010Position\022\t\n\001x\030\001 \001(\002\022\t\n\001"
    "y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\t\n\001h\030\004 \001(\002\"\273\002\n\016Textur"
    "eProfile\022\036\n\004Head\030\001 \001(\0132\020.eqproto.Texture"
    "\022\037\n\005Chest\030\002 \001(\0132\020.eqproto.Texture\022\036\n\004Arm"
    "s\030\003 \001(\0132\020.eqproto.Texture\022\037\n\005Wrist\030\004 \001(\013"
    "2\020.eqproto.Texture\022\037\n\005Hands\030\005 \001(\0132\020.eqpr"
    "oto.Texture\022\036\n\004Legs\030\006 \001(\0132\020.eqproto.Text"
    "ure\022\036\n\004Feet\030\007 \001(\0132\020.eqproto.Texture\022!\n\007P"
    "rimary\030\010 \001(\0132\020.eqproto.Texture\022#\n\tSecond"
    "ary\030\t \001(\0132\020.eqproto.Texture\"l\n\007Texture\022\020"
    "\n\010material\030\001 \001(\r\022\020\n\010unknown1\030\002 \001(\r\022\022\n\nEl"
    "iteModel\030\003 \001(\r\022\027\n\017HerosForgeModel\030\004 \001(\r\022"
    "\020\n\010Unknown2\030\005 \001(\r\"\235\002\n\013TintProfile\022\033\n\004Hea"
    "d\030\001 \001(\0132\r.eqproto.Tint\022\034\n\005Chest\030\002 \001(\0132\r."
    "eqproto.Tint\022\033\n\004Arms\030\003 \001(\0132\r.eqproto.Tin"
    "t\022\034\n\005Wrist\030\004 \001(\0132\r.eqproto.Tint\022\034\n\005Hands"
    "\030\005 \001(\0132\r.eqproto.Tint\022\033\n\004Legs\030\006 \001(\0132\r.eq"
    "proto.Tint\022\033\n\004Feet\030\007 \001(\0132\r.eqproto.Tint\022"
    "\036\n\007Primary\030\010 \001(\0132\r.eqproto.Tint\022 \n\tSecon"
    "dary\030\t \001(\0132\r.eqproto.Tint\"P\n\004Tint\022\014\n\004Blu"
    "e\030\001 \001(\r\022\r\n\005Green\030\002 \001(\r\022\013\n\003Red\030\003 \001(\r\022\017\n\007U"
    "seTint\030\004 \001(\r\022\r\n\005Color\030\005 \001(\r\"H\n\005Event\022\033\n\002"
    "op\030\001 \001(\0162\017.eqproto.OpCode\022\017\n\007payload\030\002 \001"
    "(\014\022\021\n\tentity_id\030\003 \001(\r\"\251\001\n\nDeathEvent\022\020\n\010"
    "spawn_id\030\001 \001(\r\022\021\n\tkiller_id\030\002 \001(\r\022\021\n\tcor"
    "pse_id\030\003 \001(\r\022\024\n\014bind_zone_id\030\004 \001(\r\022\020\n\010sp"
    "ell_id\030\005 \001(\r\022\027\n\017attack_skill_id\030\006 \001(\r\022\016\n"
    "\006damage\030\007 \001(\r\022\022\n\nunknown028\030\010 \001(\r\"\226\001\n\013Da"
    "mageEvent\022\016\n\006target\030\001 \001(\r\022\016\n\006source\030\002 \001("
    "\r\022\014\n\004type\030\003 \001(\r\022\017\n\007spellid\030\004 \001(\r\022\016\n\006dama"
    "ge\030\005 \001(\r\022\r\n\005force\030\006 \001(\002\022\024\n\014meleepush_xy\030"
    "\007 \001(\002\022\023\n\013meleepush_z\030\010 \001(\002\"3\n\013EntityEven"
    "t\022\021\n\tentity_id\030\001 \001(\r\022\021\n\ttarget_id\030\002 \001(\r\""
    "\263\001\n\023ChannelMessageEvent\022\023\n\013target_name\030\001"
    " \001(\t\022\016\n\006sender\030\002 \001(\t\022\020\n\010language\030\003 \001(\r\022$"
    "\n\006number\030\004 \001(\0162\024.eqproto.MessageType\022\023\n\013"
    "cm_unknown4\030\005 \001(\r\022\031\n\021skill_in_language\030\006"
    " \001(\r\022\017\n\007message\030\007 \001(\t\"\227\001\n\023SpecialMessage"
    "Event\022\016\n\006header\030\001 \001(\t\022$\n\006number\030\002 \001(\0162\024."
    "eqproto.MessageType\022\027\n\017target_spawn_id\030\003"
    " \001(\r\022\r\n\005sayer\030\004 \001(\t\022\021\n\tunknown12\030\005 \001(\r\022\017"
    "\n\007message\030\006 \001(\t\"\327\005\n\014NewZoneEvent\022\021\n\tchar"
    "_name\030\001 \001(\t\022\027\n\017zone_short_name\030\002 \001(\t\022\026\n\016"
    "zone_long_name\030\003 \001(\t\022\r\n\005ztype\030\004 \001(\r\022\017\n\007f"
    "og_red\030\005 \001(\r\022\021\n\tfog_green\030\006 \001(\r\022\020\n\010fog_b"
    "lue\030\007 \001(\r\022\022\n\nunknown323\030\010 \001(\r\022\023\n\013fog_min"
    "clip\030\t \001(\002\022\023\n\013fog_maxclip\030\n \001(\002\022\017\n\007gravi"
    "ty\030\013 \001(\002\022\021\n\ttime_type\030\014 \001(\r\022\023\n\013rain_chan"
    "ce\030\r \001(\r\022\025\n\rrain_duration\030\016 \001(\r\022\023\n\013snow_"
    "chance\030\017 \001(\r\022\025\n\rsnow_duration\030\020 \001(\r\022\022\n\nu"
    "nknown360\030\021 \001(\r\022\013\n\003sky\030\022 \001(\r\022\022\n\nunknown3"
    "31\030\023 \001(\r\022\033\n\023zone_exp_multiplier\030\024 \001(\002\022\016\n"
    "\006safe_y\030\025 \001(\002\022\016\n\006safe_x\030\026 \001(\002\022\016\n\006safe_z\030"
    "\027 \001(\002\022\r\n\005max_z\030\030 \001(\002\022\022\n\nunderworld\030\031 \001(\002"
    "\022\017\n\007minclip\030\032 \001(\002\022\017\n\007maxclip\030\033 \001(\002\022\023\n\013un"
    "known_end\030\034 \001(\r\022\030\n\020zone_short_name2\030\035 \001("
    "\t\022\022\n\nunknown672\030\036 \001(\t\022\017\n\007zone_id\030\037 \001(\r\022\025"
    "\n\rzone_instance\030  \001(\r\022\022\n\nunknown688\030! \001("
    "\r\022\022\n\nunknown692\030\" \001(\r\022\023\n\013fog_density\030# \001"
    "(\002\022\025\n\rsuspend_buffs\030$ \001(\r\"\301\001\n\017WearChange"
    "Event\022\020\n\010spawn_id\030\001 \001(\r\022\020\n\010material\030\002 \001("
    "\r\022\021\n\tunknown06\030\003 \001(\r\022\026\n\016elite_material\030\004"
    " \001(\r\022\030\n\020hero_forge_model\030\005 \001(\r\022\021\n\tunknow"
    "n18\030\006 \001(\r\022\034\n\005color\030\007 \001(\0132\r.eqproto.Tint\022"
    "\024\n\014wear_slot_id\030\010 \001(\r\"3\n\020DeleteSpawnEven"
    "t\022\020\n\010spawn_id\030\001 \001(\r\022\r\n\005decay\030\002 \001(\r\";\n\007HP"
    "Event\022\020\n\010spawn_id\030\001 \001(\r\022\016\n\006cur_hp\030\002 \001(\r\022"
    "\016\n\006max_hp\030\003 \001(\r\"\234\002\n\031PlayerPositionUpdate"
    "Event\022\020\n\010spawn_id\030\001 \001(\r\022\025\n\rdelta_heading"
    "\030\002 \001(\005\022\r\n\005x_pos\030\003 \001(\005\022\023\n\013padding0002\030\004 \001"
    "(\005\022\r\n\005y_pos\030\005 \001(\005\022\021\n\tanimation\030\006 \001(\005\022\023\n\013"
    "padding0006\030\007 \001(\005\022\r\n\005z_pos\030\010 \001(\005\022\017\n\007delt"
    "a_y\030\t \001(\005\022\017\n\007delta_x\030\n \001(\005\022\017\n\007heading\030\013 "
    "\001(\005\022\023\n\013padding0014\030\014 \001(\005\022\017\n\007delta_z\030\r \001("
    "\005\022\023\n\013padding0018\030\016 \001(\005\"@\n\016AnimationEvent"
    "\022\017\n\007spawnid\030\001 \001(\r\022\r\n\005speed\030\002 \001(\r\022\016\n\006acti"
    "on\030\003 \001(\r\"\337\017\n\nSpawnEvent\022\023\n\013unknown0000\030\001"
    " \001(\r\022\n\n\002gm\030\002 \001(\r\022\023\n\013unknown0003\030\003 \001(\r\022\016\n"
    "\006aaitle\030\004 \001(\r\022\023\n\013unknown0004\030\005 \001(\r\022\014\n\004an"
    "on\030\006 \001(\r\022\014\n\004face\030\007 \001(\r\022\014\n\004name\030\010 \001(\t\022\r\n\005"
    "deity\030\t \001(\r\022\023\n\013unknown0073\030\n \001(\r\022\014\n\004size"
    "\030\013 \001(\002\022\023\n\013unknown0079\030\014 \001(\r\022\013\n\003NPC\030\r \001(\r"
    "\022\r\n\005invis\030\016 \001(\r\022\021\n\thaircolor\030\017 \001(\r\022\r\n\005cu"
    "rHp\030\020 \001(\r\022\016\n\006max_hp\030\021 \001(\r\022\020\n\010findable\030\022 "
    "\001(\r\022\023\n\013unknown0089\030\023 \001(\r\022\024\n\014deltaHeading"
    "\030\024 \001(\005\022\t\n\001x\030\025 \001(\005\022\023\n\013padding0054\030\026 \001(\005\022\t"
    "\n\001y\030\027 \001(\005\022\021\n\tanimation\030\030 \001(\005\022\023\n\013padding0"
    "058\030\031 \001(\005\022\t\n\001z\030\032 \001(\005\022\016\n\006deltaY\030\033 \001(\005\022\016\n\006"
    "deltaX\030\034 \001(\005\022\017\n\007heading\030\035 \001(\r\022\023\n\013padding"
    "0066\030\036 \001(\005\022\016\n\006deltaZ\030\037 \001(\005\022\023\n\013padding007"
    "0\030  \001(\005\022\021\n\teyecolor1\030! \001(\r\022\023\n\013unknown011"
    "5\030\" \001(\r\022\022\n\nStandState\030# \001(\r\022\030\n\020drakkin_h"
    "eritage\030$ \001(\r\022\026\n\016drakkin_tattoo\030% \001(\r\022\027\n"
    "\017drakkin_details\030& \001(\r\022\020\n\010showhelm\030\' \001(\r"
    "\022\023\n\013unknown0140\030( \001(\r\022\016\n\006is_npc\030) \001(\r\022\021\n"
    "\thairstyle\030* \001(\r\022\r\n\005beard\030+ \001(\r\022\023\n\013unkno"
    "wn0147\030, \001(\r\022\r\n\005level\030- \001(\r\022\023\n\013PlayerSta"
    "te\030. \001(\r\022\022\n\nbeardcolor\030/ \001(\r\022\016\n\006suffix\0300"
    " \001(\t\022\022\n\npetOwnerId\0301 \001(\r\022\021\n\tguildrank\0302 "
    "\001(\r\022\023\n\013unknown0194\0303 \001(\r\022*\n\tequipment\0304 "
    "\001(\0132\027.eqproto.TextureProfile\022\020\n\010runspeed"
    "\0305 \001(\002\022\013\n\003afk\0306 \001(\r\022\017\n\007guildID\0307 \001(\r\022\r\n\005"
    "title\0308 \001(\t\022\023\n\013unknown0274\0309 \001(\r\022\023\n\013set_"
    "to_0xFF\030: \001(\r\022\014\n\004helm\030; \001(\r\022\014\n\004race\030< \001("
    "\r\022\023\n\013unknown0288\030= \001(\r\022\020\n\010lastName\030> \001(\t"
    "\022\021\n\twalkspeed\030\? \001(\002\022\023\n\013unknown0328\030@ \001(\r"
    "\022\016\n\006is_pet\030A \001(\r\022\r\n\005light\030B \001(\r\022\016\n\006class"
    "_\030C \001(\r\022\021\n\teyecolor2\030D \001(\r\022\017\n\007flymode\030E "
    "\001(\r\022\016\n\006gender\030F \001(\r\022\020\n\010bodytype\030G \001(\r\022\023\n"
    "\013unknown0336\030H \001(\r\022\024\n\014equip_chest2\030I \001(\r"
    "\022\023\n\013mount_color\030J \001(\r\022\017\n\007spawnId\030K \001(\r\022\023"
    "\n\013unknown0344\030L \001(\r\022\023\n\013IsMercenary\030M \001(\r"
    "\022,\n\016equipment_tint\030N \001(\0132\024.eqproto.TintP"
    "rofile\022\013\n\003lfg\030O \001(\r\022\032\n\022DestructibleObjec"
    "t\030P \001(\010\022\031\n\021DestructibleModel\030R \001(\t\022\031\n\021De"
    "structibleName2\030S \001(\t\022\032\n\022DestructibleStr"
    "ing\030T \001(\t\022\036\n\026DestructibleAppearance\030U \001("
    "\r\022\030\n\020DestructibleUnk1\030V \001(\r\022\027\n\017Destructi"
    "bleID1\030W \001(\r\022\027\n\017DestructibleID2\030X \001(\r\022\027\n"
    "\017DestructibleID3\030Y \001(\r\022\027\n\017DestructibleID"
    "4\030Z \001(\r\022\030\n\020DestructibleUnk2\030[ \001(\r\022\030\n\020Des"
    "tructibleUnk3\030\\ \001(\r\022\030\n\020DestructibleUnk4\030"
    "] \001(\r\022\030\n\020DestructibleUnk5\030^ \001(\r\022\030\n\020Destr"
    "uctibleUnk6\030_ \001(\r\022\030\n\020DestructibleUnk7\030` "
    "\001(\r\022\030\n\020DestructibleUnk8\030a \001(\r\022\030\n\020Destruc"
    "tibleUnk9\030b \001(\r\022\036\n\026targetable_with_hotke"
    "y\030c \001(\010\022\021\n\tshow_name\030d \001(\010\"\201\001\n\036Alternate"
    "AdvancementStatsEvent\022\022\n\nexperience\030\001 \001("
    "\r\022\017\n\007unspent\030\002 \001(\r\022\022\n\nunknown006\030\003 \001(\r\022\022"
    "\n\npercentage\030\004 \001(\r\022\022\n\nunknown009\030\005 \001(\r\"\023"
    "\n\021ZoneCompleteEvent\"o\n\nUseAAEvent\022\r\n\005beg"
    "in\030\001 \001(\r\022\017\n\007ability\030\002 \001(\r\022\013\n\003end\030\003 \001(\r\022\016"
    "\n\006action\030\004 \001(\r\022\021\n\ttarget_id\030\005 \001(\r\022\021\n\texp"
    "_value\030\006 \001(\r*J\n\tErrorType\022\n\n\006ERR_OK\020\000\022\017\n"
    "\013ERR_Request\020\001\022\020\n\014ERR_Internal\020\002\022\016\n\nERR_"
    "Failed\020\003*\200\001\n\nEntityType\022\007\n\003NPC\020\000\022\n\n\006Clie"
    "nt\020\001\022\007\n\003Mob\020\002\022\r\n\tMercenary\020\003\022\n\n\006Corpse\020\004"
    "\022\010\n\004Door\020\005\022\n\n\006Object\020\006\022\010\n\004Trap\020\007\022\n\n\006Beac"
    "on\020\t\022\r\n\tEncounter\020\n*\300\002\n\tDeityType\022\013\n\007Unk"
    "nown\020\000\022\020\n\013Agnostic_LB\020\214\001\022\021\n\014Bertoxxulous"
    "\020\311\001\022\021\n\014BrellSirilis\020\312\001\022\017\n\nCazicThule\020\313\001\022"
    "\021\n\014ErollisiMarr\020\314\001\022\020\n\013Bristlebane\020\315\001\022\r\n\010"
    "Innoruuk\020\316\001\022\013\n\006Karana\020\317\001\022\022\n\rMithanielMar"
    "r\020\320\001\022\013\n\006Prexus\020\321\001\022\016\n\tQuellious\020\322\001\022\016\n\tRal"
    "losZek\020\323\001\022\017\n\nRodcetNife\020\324\001\022\016\n\tSolusekRo\020"
    "\325\001\022\020\n\013TheTribunal\020\326\001\022\013\n\006Tunare\020\327\001\022\014\n\007Vee"
    "shan\020\330\001\022\r\n\010Agnostic\020\214\003*\341\003\n\014DeityTypeBit\022"
    "\021\n\rbit_DeityNone\020\000\022\025\n\021bit_DeityAgnostic\020"
    "\001\022\031\n\025bit_DeityBertoxxulous\020\002\022\031\n\025bit_Deit"
    "yBrellSirilis\020\004\022\027\n\023bit_DeityCazicThule\020\010"
    "\022\031\n\025bit_DeityErollisiMarr\020\020\022\030\n\024bit_Deity"
    "Bristlebane\020 \022\025\n\021bit_DeityInnoruuk\020@\022\024\n\017"
    "bit_DeityKarana\020\200\001\022\033\n\026bit_DeityMithaniel"
    "Marr\020\200\002\022\024\n\017bit_DeityPrexus\020\200\004\022\027\n\022bit_Dei"
    "tyQuellious\020\200\010\022\027\n\022bit_DeityRallosZek\020\200\020\022"
    "\030\n\023bit_DeityRodcetNife\020\200 \022\027\n\022bit_DeitySo"
    "lusekRo\020\200@\022\032\n\024bit_DeityTheTribunal\020\200\200\001\022\025"
    "\n\017bit_DeityTunare\020\200\200\002\022\026\n\020bit_DeityVeesha"
    "n\020\200\200\004\022\023\n\014bit_DeityAll\020\377\377\377\177*\215\014\n\013MessageTy"
    "pe\022\016\n\nWhiteSmoke\020\000\022\013\n\007DimGray\020\001\022\t\n\005Green"
    "\020\002\022\016\n\nBrightBlue\020\003\022\013\n\007Magenta\020\005\022\010\n\004Gray\020"
    "\006\022\r\n\tLightGray\020\007\022\014\n\010SayLocal\020\010\022\017\n\013WhiteS"
    "moke2\020\n\022\014\n\010DarkGray\020\014\022\007\n\003Red\020\r\022\010\n\004Lime\020\016"
    "\022\n\n\006Yellow\020\017\022\010\n\004Blue\020\020\022\r\n\tLightNavy\020\021\022\010\n"
    "\004Cyan\020\022\022\t\n\005Black\020\024\022\010\n\003Say\020\200\002\022\t\n\004Tell\020\201\002\022"
    "\n\n\005Group\020\202\002\022\n\n\005Guild\020\203\002\022\010\n\003OOC\020\204\002\022\014\n\007Auc"
    "tion\020\205\002\022\n\n\005Shout\020\206\002\022\n\n\005Emote\020\207\002\022\013\n\006Spell"
    "s\020\210\002\022\020\n\013YouHitOther\020\211\002\022\021\n\014OtherHitsYou\020\212"
    "\002\022\021\n\014YouMissOther\020\213\002\022\023\n\016OtherMissesYou\020\214"
    "\002\022\017\n\nBroadcasts\020\215\002\022\013\n\006Skills\020\216\002\022\020\n\013Disci"
    "plines\020\217\002\022\014\n\007Unused1\020\220\002\022\020\n\013DefaultText\020\221"
    "\002\022\014\n\007Unused2\020\222\002\022\022\n\rMerchantOffer\020\223\002\022\024\n\017M"
    "erchantBuySell\020\224\002\022\016\n\tYourDeath\020\225\002\022\017\n\nOth"
    "erDeath\020\226\002\022\016\n\tOtherHits\020\227\002\022\020\n\013OtherMisse"
    "s\020\230\002\022\010\n\003Who\020\231\002\022\020\n\013YellForHelp\020\232\002\022\r\n\010NonM"
    "elee\020\233\002\022\014\n\007WornOff\020\234\002\022\017\n\nMoneySplit\020\235\002\022\021"
    "\n\014LootMessages\020\236\002\022\r\n\010DiceRoll\020\237\002\022\020\n\013Othe"
    "rSpells\020\240\002\022\021\n\014SpellFailure\020\241\002\022\t\n\004Chat\020\242\002"
    "\022\r\n\010Channel1\020\243\002\022\r\n\010Channel2\020\244\002\022\r\n\010Channe"
    "l3\020\245\002\022\r\n\010Channel4\020\246\002\022\r\n\010Channel5\020\247\002\022\r\n\010C"
    "hannel6\020\250\002\022\r\n\010Channel7\020\251\002\022\r\n\010Channel8\020\252\002"
    "\022\r\n\010Channel9\020\253\002\022\016\n\tChannel10\020\254\002\022\016\n\tCritM"
    "elee\020\255\002\022\017\n\nSpellCrits\020\256\002\022\017\n\nTooFarAway\020\257"
    "\002\022\017\n\nNPCRampage\020\260\002\022\016\n\tNPCFlurry\020\261\002\022\016\n\tNP"
    "CEnrage\020\262\002\022\014\n\007SayEcho\020\263\002\022\r\n\010TellEcho\020\264\002\022"
    "\016\n\tGroupEcho\020\265\002\022\016\n\tGuildEcho\020\266\002\022\014\n\007OOCEc"
    "ho\020\267\002\022\020\n\013AuctionEcho\020\270\002\022\016\n\tShoutECho\020\271\002\022"
    "\016\n\tEmoteEcho\020\272\002\022\016\n\tChat1Echo\020\273\002\022\016\n\tChat2"
    "Echo\020\274\002\022\016\n\tChat3Echo\020\275\002\022\016\n\tChat4Echo\020\276\002\022"
    "\016\n\tChat5Echo\020\277\002\022\016\n\tChat6Echo\020\300\002\022\016\n\tChat7"
    "Echo\020\301\002\022\016\n\tChat8Echo\020\302\002\022\016\n\tChat9Echo\020\303\002\022"
    "\017\n\nChat10Echo\020\304\002\022\016\n\tDoTDamage\020\305\002\022\r\n\010Item"
    "Link\020\306\002\022\014\n\007RaidSay\020\307\002\022\n\n\005MyPet\020\310\002\022\007\n\002DS\020"
    "\311\002\022\017\n\nLeadership\020\312\002\022\016\n\tPetFlurry\020\313\002\022\014\n\007P"
    "etCrit\020\314\002\022\020\n\013FocusEffect\020\315\002\022\017\n\nExperienc"
    "e\020\316\002\022\013\n\006System\020\317\002\022\r\n\010PetSpell\020\320\002\022\020\n\013PetR"
    "esponse\020\321\002\022\017\n\nItemSpeech\020\322\002\022\022\n\rStrikeThr"
    "ough\020\323\002\022\t\n\004Stun\020\324\002*\335\004\n\010BodyType\022\016\n\nBT_Un"
    "known\020\000\022\017\n\013BT_Humanoid\020\001\022\022\n\016BT_Lycanthro"
    "pe\020\002\022\r\n\tBT_Undead\020\003\022\014\n\010BT_Giant\020\004\022\020\n\014BT_"
    "Construct\020\005\022\022\n\016BT_Extraplanar\020\006\022\016\n\nBT_Ma"
    "gical\020\007\022\025\n\021BT_SummonedUndead\020\010\022\020\n\014BT_Rai"
    "dGiant\020\t\022\017\n\013BT_NoTarget\020\013\022\016\n\nBT_Vampire\020"
    "\014\022\020\n\014BT_Atenha_Ra\020\r\022\025\n\021BT_Greater_Akheva"
    "\020\016\022\020\n\014BT_Khati_Sha\020\017\022\013\n\007BT_Seru\020\020\022\022\n\016BT_"
    "Draz_Nurakk\020\022\022\n\n\006BT_Zek\020\023\022\016\n\nBT_Luggald\020"
    "\024\022\r\n\tBT_Animal\020\025\022\r\n\tBT_Insect\020\026\022\016\n\nBT_Mo"
    "nster\020\027\022\017\n\013BT_Summoned\020\030\022\014\n\010BT_Plant\020\031\022\r"
    "\n\tBT_Dragon\020\032\022\020\n\014BT_Summoned2\020\033\022\020\n\014BT_Su"
    "mmoned3\020\034\022\024\n\020BT_VeliousDragon\020\036\022\016\n\nBT_Dr"
    "agon3\020 \022\014\n\010BT_Boxes\020!\022\017\n\013BT_Muramite\020\"\022\020"
    "\n\014BT_NoTarget2\020<\022\017\n\013BT_SwarmPet\020\?\022\017\n\013BT_"
    "InvisMan\020B\022\016\n\nBT_Special\020C*/\n\nGenderType"
    "\022\010\n\004Male\020\000\022\n\n\006Female\020\001\022\013\n\007Neutral\020\002*\302e\n\006"
    "OpCode\022\016\n\nOP_Unknown\020\000\022\025\n\021OP_ExploreUnkn"
    "own\020\001\022\r\n\tOP_0x0193\020\002\022\024\n\020OP_ZoneCompleted"
    "\020\003\022\017\n\013OP_AAAction\020\004\022\022\n\016OP_AAExpUpdate\020\005\022"
    "\024\n\020OP_AcceptNewTask\020\006\022\020\n\014OP_AckPacket\020\007\022"
    "\r\n\tOP_Action\020\010\022\016\n\nOP_Action2\020\t\022\026\n\022OP_Add"
    "NimbusEffect\020\n\022\024\n\020OP_AdventureData\020\013\022\027\n\023"
    "OP_AdventureDetails\020\014\022\026\n\022OP_AdventureFin"
    "ish\020\r\022\024\n\020OP_AdventureInfo\020\016\022\033\n\027OP_Advent"
    "ureInfoRequest\020\017\022 \n\034OP_AdventureLeaderbo"
    "ardReply\020\020\022\"\n\036OP_AdventureLeaderboardReq"
    "uest\020\021\022 \n\034OP_AdventureMerchantPurchase\020\022"
    "\022\037\n\033OP_AdventureMerchantRequest\020\023\022 \n\034OP_"
    "AdventureMerchantResponse\020\024\022\034\n\030OP_Advent"
    "ureMerchantSell\020\025\022\034\n\030OP_AdventurePointsU"
    "pdate\020\026\022\027\n\023OP_AdventureRequest\020\027\022\032\n\026OP_A"
    "dventureStatsReply\020\030\022\034\n\030OP_AdventureStat"
    "sRequest\020\031\022\026\n\022OP_AdventureUpdate\020\032\022\033\n\027OP"
    "_AggroMeterLockTarget\020\033\022\033\n\027OP_AggroMeter"
    "TargetInfo\020\034\022\027\n\023OP_AggroMeterUpdate\020\035\022\022\n"
    "\016OP_AltCurrency\020\036\022\037\n\033OP_AltCurrencyMerch"
    "antReply\020\037\022!\n\035OP_AltCurrencyMerchantRequ"
    "est\020 \022\032\n\026OP_AltCurrencyPurchase\020!\022\031\n\025OP_"
    "AltCurrencyReclaim\020\"\022\026\n\022OP_AltCurrencySe"
    "ll\020#\022\037\n\033OP_AltCurrencySellSelection\020$\022\020\n"
    "\014OP_Animation\020%\022\032\n\026OP_AnnoyingZoneUnknow"
    "n\020&\022\022\n\016OP_ApplyPoison\020\'\022\022\n\016OP_ApproveNam"
    "e\020(\022\023\n\017OP_ApproveWorld\020)\022\022\n\016OP_ApproveZo"
    "ne\020*\022\r\n\tOP_Assist\020+\022\022\n\016OP_AssistGroup\020,\022"
    "\022\n\016OP_AugmentInfo\020-\022\022\n\016OP_AugmentItem\020.\022"
    "\021\n\rOP_AutoAttack\020/\022\022\n\016OP_AutoAttack2\0200\022\017"
    "\n\013OP_AutoFire\0201\022\020\n\014OP_Bandolier\0202\022\023\n\017OP_"
    "BankerChange\0203\022\r\n\tOP_Barter\0204\022\r\n\tOP_Baza"
    "ar\0205\022\024\n\020OP_BazaarInspect\0206\022\023\n\017OP_BazaarS"
    "earch\0207\022\023\n\017OP_BecomeCorpse\0208\022\023\n\017OP_Becom"
    "eTrader\0209\022\016\n\nOP_Begging\020:\022\020\n\014OP_BeginCas"
    "t\020;\022\021\n\rOP_Bind_Wound\020<\022\023\n\017OP_BlockedBuff"
    "s\020=\022\020\n\014OP_BoardBoat\020>\022\013\n\007OP_Buff\020\?\022\021\n\rOP"
    "_BuffCreate\020@\022\030\n\024OP_BuffRemoveRequest\020A\022"
    "\n\n\006OP_Bug\020B\022\023\n\017OP_CameraEffect\020C\022\013\n\007OP_C"
    "amp\020D\022\026\n\022OP_CancelSneakHide\020E\022\021\n\rOP_Canc"
    "elTask\020F\022\022\n\016OP_CancelTrade\020G\022\020\n\014OP_CastS"
    "pell\020H\022\021\n\rOP_ChangeSize\020I\022\025\n\021OP_ChannelM"
    "essage\020J\022\026\n\022OP_CharacterCreate\020K\022\035\n\031OP_C"
    "haracterCreateRequest\020L\022\024\n\020OP_CharInvent"
    "ory\020M\022\014\n\010OP_Charm\020N\022\022\n\016OP_ChatMessage\020O\022"
    "\016\n\nOP_ClearAA\020P\022\030\n\024OP_ClearBlockedBuffs\020"
    "Q\022\037\n\033OP_ClearLeadershipAbilities\020R\022\024\n\020OP"
    "_ClearNPCMarks\020S\022\022\n\016OP_ClearObject\020T\022\023\n\017"
    "OP_ClearSurname\020U\022\020\n\014OP_ClickDoor\020V\022\022\n\016O"
    "P_ClickObject\020W\022\030\n\024OP_ClickObjectAction\020"
    "X\022\022\n\016OP_ClientError\020Y\022\022\n\016OP_ClientReady\020"
    "Z\022\026\n\022OP_ClientTimeStamp\020[\022\023\n\017OP_ClientUp"
    "date\020\\\022\025\n\021OP_CloseContainer\020]\022\031\n\025OP_Clos"
    "eTributeMaster\020^\022\022\n\016OP_ColoredText\020_\022\024\n\020"
    "OP_CombatAbility\020`\022\016\n\nOP_Command\020a\022\025\n\021OP"
    "_CompletedTasks\020b\022\024\n\020OP_ConfirmDelete\020c\022"
    "\016\n\nOP_Consent\020d\022\022\n\016OP_ConsentDeny\020e\022\026\n\022O"
    "P_ConsentResponse\020f\022\017\n\013OP_Consider\020g\022\025\n\021"
    "OP_ConsiderCorpse\020h\022\016\n\nOP_Consume\020i\022\022\n\016O"
    "P_ControlBoat\020j\022\021\n\rOP_CorpseDrag\020k\022\021\n\rOP"
    "_CorpseDrop\020l\022\020\n\014OP_CrashDump\020m\022\031\n\025OP_Cr"
    "ystalCountUpdate\020n\022\024\n\020OP_CrystalCreate\020o"
    "\022\025\n\021OP_CrystalReclaim\020p\022\023\n\017OP_CustomTitl"
    "es\020q\022\r\n\tOP_Damage\020r\022\014\n\010OP_Death\020s\022\026\n\022OP_"
    "DelegateAbility\020t\022\026\n\022OP_DeleteCharacter\020"
    "u\022\023\n\017OP_DeleteCharge\020v\022\021\n\rOP_DeleteItem\020"
    "w\022\025\n\021OP_DeletePetition\020x\022\022\n\016OP_DeleteSpa"
    "wn\020y\022\022\n\016OP_DeleteSpell\020z\022\023\n\017OP_DenyRespo"
    "nse\020{\022\r\n\tOP_Disarm\020|\022\022\n\016OP_DisarmTraps\020}"
    "\022\026\n\022OP_DisciplineTimer\020~\022\027\n\023OP_Disciplin"
    "eUpdate\020\177\022 \n\033OP_DiscordMerchantInventory"
    "\020\200\001\022 \n\033OP_DoGroupLeadershipAbility\020\201\001\022\024\n"
    "\017OP_DuelResponse\020\202\001\022\025\n\020OP_DuelResponse2\020"
    "\203\001\022\020\n\013OP_DumpName\020\204\001\022\013\n\006OP_Dye\020\205\001\022\023\n\016OP_"
    "DynamicWall\020\206\001\022\023\n\016OP_DzAddPlayer\020\207\001\022\024\n\017O"
    "P_DzChooseZone\020\210\001\022\021\n\014OP_DzCompass\020\211\001\022\037\n\032"
    "OP_DzExpeditionEndsWarning\020\212\001\022\030\n\023OP_DzEx"
    "peditionInfo\020\213\001\022\030\n\023OP_DzExpeditionList\020\214"
    "\001\022\037\n\032OP_DzJoinExpeditionConfirm\020\215\001\022\035\n\030OP"
    "_DzJoinExpeditionReply\020\216\001\022\026\n\021OP_DzLeader"
    "Status\020\217\001\022\024\n\017OP_DzListTimers\020\220\001\022\024\n\017OP_Dz"
    "MakeLeader\020\221\001\022\024\n\017OP_DzMemberList\020\222\001\022\026\n\021O"
    "P_DzMemberStatus\020\223\001\022\024\n\017OP_DzPlayerList\020\224"
    "\001\022\016\n\tOP_DzQuit\020\225\001\022\026\n\021OP_DzRemovePlayer\020\226"
    "\001\022\024\n\017OP_DzSwapPlayer\020\227\001\022\r\n\010OP_Emote\020\230\001\022\026"
    "\n\021OP_EndLootRequest\020\231\001\022\027\n\022OP_EnduranceUp"
    "date\020\232\001\022\021\n\014OP_EnterChat\020\233\001\022\022\n\rOP_EnterWo"
    "rld\020\234\001\022\021\n\014OP_EnvDamage\020\235\001\022\025\n\020OP_Expansio"
    "nInfo\020\236\001\022\021\n\014OP_ExpUpdate\020\237\001\022\022\n\rOP_FaceCh"
    "ange\020\240\001\022\020\n\013OP_Feedback\020\241\001\022\022\n\rOP_FeignDea"
    "th\020\242\001\022\030\n\023OP_FellowshipUpdate\020\243\001\022\027\n\022OP_Fi"
    "ndPersonReply\020\244\001\022\031\n\024OP_FindPersonRequest"
    "\020\245\001\022\023\n\016OP_FinishTrade\020\246\001\022\024\n\017OP_FinishWin"
    "dow\020\247\001\022\025\n\020OP_FinishWindow2\020\250\001\022\017\n\nOP_Fish"
    "ing\020\251\001\022\r\n\010OP_Fling\020\252\001\022\026\n\021OP_FloatListThi"
    "ng\020\253\001\022\016\n\tOP_Forage\020\254\001\022\027\n\022OP_ForceFindPer"
    "son\020\255\001\022\030\n\023OP_FormattedMessage\020\256\001\022\022\n\rOP_F"
    "riendsWho\020\257\001\022\024\n\017OP_GetGuildMOTD\020\260\001\022\031\n\024OP"
    "_GetGuildMOTDReply\020\261\001\022\025\n\020OP_GetGuildsLis"
    "t\020\262\001\022\021\n\014OP_GiveMoney\020\263\001\022\022\n\rOP_GMApproval"
    "\020\264\001\022\023\n\016OP_GMBecomeNPC\020\265\001\022\023\n\016OP_GMDelCorp"
    "se\020\266\001\022\023\n\016OP_GMEmoteZone\020\267\001\022\025\n\020OP_GMEndTr"
    "aining\020\270\001\022\035\n\030OP_GMEndTrainingResponse\020\271\001"
    "\022\016\n\tOP_GMFind\020\272\001\022\016\n\tOP_GMGoto\020\273\001\022\020\n\013OP_G"
    "MHideMe\020\274\001\022\016\n\tOP_GMKick\020\275\001\022\016\n\tOP_GMKill\020"
    "\276\001\022\022\n\rOP_GMLastName\020\277\001\022\024\n\017OP_GMNameChang"
    "e\020\300\001\022\026\n\021OP_GMSearchCorpse\020\301\001\022\021\n\014OP_GMSer"
    "vers\020\302\001\022\020\n\013OP_GMSummon\020\303\001\022\020\n\013OP_GMToggle"
    "\020\304\001\022\022\n\rOP_GMTraining\020\305\001\022\024\n\017OP_GMTrainSki"
    "ll\020\306\001\022\033\n\026OP_GMTrainSkillConfirm\020\307\001\022\025\n\020OP"
    "_GMZoneRequest\020\310\001\022\026\n\021OP_GMZoneRequest2\020\311"
    "\001\022\023\n\016OP_GroundSpawn\020\312\001\022\030\n\023OP_GroupAcknow"
    "ledge\020\313\001\022\031\n\024OP_GroupCancelInvite\020\314\001\022\023\n\016O"
    "P_GroupDelete\020\315\001\022\024\n\017OP_GroupDisband\020\316\001\022\031"
    "\n\024OP_GroupDisbandOther\020\317\001\022\027\n\022OP_GroupDis"
    "bandYou\020\320\001\022\023\n\016OP_GroupFollow\020\321\001\022\024\n\017OP_Gr"
    "oupFollow2\020\322\001\022\023\n\016OP_GroupInvite\020\323\001\022\024\n\017OP"
    "_GroupInvite2\020\324\001\022\031\n\024OP_GroupLeaderChange"
    "\020\325\001\022\037\n\032OP_GroupLeadershipAAUpdate\020\326\001\022\027\n\022"
    "OP_GroupMakeLeader\020\327\001\022\023\n\016OP_GroupMentor\020"
    "\330\001\022\022\n\rOP_GroupRoles\020\331\001\022\023\n\016OP_GroupUpdate"
    "\020\332\001\022\024\n\017OP_GroupUpdateB\020\333\001\022\033\n\026OP_GroupUpd"
    "ateLeaderAA\020\334\001\022\021\n\014OP_GuildBank\020\335\001\022\031\n\024OP_"
    "GuildBankItemList\020\336\001\022\023\n\016OP_GuildCreate\020\337"
    "\001\022\023\n\016OP_GuildDelete\020\340\001\022\023\n\016OP_GuildDemote"
    "\020\341\001\022\023\n\016OP_GuildInvite\020\342\001\022\031\n\024OP_GuildInvi"
    "teAccept\020\343\001\022\023\n\016OP_GuildLeader\020\344\001\022\026\n\021OP_G"
    "uildManageAdd\020\345\001\022\031\n\024OP_GuildManageBanker"
    "\020\346\001\022\031\n\024OP_GuildManageRemove\020\347\001\022\031\n\024OP_Gui"
    "ldManageStatus\020\350\001\022\036\n\031OP_GuildMemberLevel"
    "Update\020\351\001\022\027\n\022OP_GuildMemberList\020\352\001\022\031\n\024OP"
    "_GuildMemberUpdate\020\353\001\022\021\n\014OP_GuildMOTD\020\354\001"
    "\022\022\n\rOP_GuildPeace\020\355\001\022\024\n\017OP_GuildPromote\020"
    "\356\001\022\027\n\022OP_GuildPublicNote\020\357\001\022\023\n\016OP_GuildR"
    "emove\020\360\001\022\022\n\rOP_GuildsList\020\361\001\022\023\n\016OP_Guild"
    "Status\020\362\001\022\030\n\023OP_GuildTributeInfo\020\363\001\022 \n\033O"
    "P_GuildUpdateURLAndChannel\020\364\001\022\020\n\013OP_Guil"
    "dWar\020\365\001\022\021\n\014OP_Heartbeat\020\366\001\022\014\n\007OP_Hide\020\367\001"
    "\022\022\n\rOP_HideCorpse\020\370\001\022\020\n\013OP_HPUpdate\020\371\001\022\020"
    "\n\013OP_Illusion\020\372\001\022\025\n\020OP_IncreaseStats\020\373\001\022"
    "\027\n\022OP_InitialHPUpdate\020\374\001\022\030\n\023OP_InitialMo"
    "bHealth\020\375\001\022\025\n\020OP_InspectAnswer\020\376\001\022\024\n\017OP_"
    "InspectBuffs\020\377\001\022\034\n\027OP_InspectMessageUpda"
    "te\020\200\002\022\026\n\021OP_InspectRequest\020\201\002\022\024\n\017OP_Inst"
    "illDoubt\020\202\002\022\025\n\020OP_InterruptCast\020\203\002\022\025\n\020OP"
    "_ItemLinkClick\020\204\002\022\030\n\023OP_ItemLinkResponse"
    "\020\205\002\022\024\n\017OP_ItemLinkText\020\206\002\022\020\n\013OP_ItemName"
    "\020\207\002\022\022\n\rOP_ItemPacket\020\210\002\022\023\n\016OP_ItemPrevie"
    "w\020\211\002\022\027\n\022OP_ItemRecastDelay\020\212\002\022\027\n\022OP_Item"
    "VerifyReply\020\213\002\022\031\n\024OP_ItemVerifyRequest\020\214"
    "\002\022\027\n\022OP_ItemViewUnknown\020\215\002\022\014\n\007OP_Jump\020\216\002"
    "\022\017\n\nOP_KeyRing\020\217\002\022\025\n\020OP_KnowledgeBase\020\220\002"
    "\022\022\n\rOP_LDoNButton\020\221\002\022\027\n\022OP_LDoNDisarmTra"
    "ps\020\222\002\022\023\n\016OP_LDoNInspect\020\223\002\022\020\n\013OP_LDoNOpe"
    "n\020\224\002\022\024\n\017OP_LDoNPickLock\020\225\002\022\026\n\021OP_LDoNSen"
    "seTraps\020\226\002\022\033\n\026OP_LeadershipExpToggle\020\227\002\022"
    "\033\n\026OP_LeadershipExpUpdate\020\230\002\022\026\n\021OP_Leave"
    "Adventure\020\231\002\022\021\n\014OP_LeaveBoat\020\232\002\022\027\n\022OP_Le"
    "velAppearance\020\233\002\022\023\n\016OP_LevelUpdate\020\234\002\022\025\n"
    "\020OP_LFGAppearance\020\235\002\022\022\n\rOP_LFGCommand\020\236\002"
    "\022\034\n\027OP_LFGGetMatchesRequest\020\237\002\022\035\n\030OP_LFG"
    "GetMatchesResponse\020\240\002\022\023\n\016OP_LFGResponse\020"
    "\241\002\022\017\n\nOP_LFGuild\020\242\002\022\022\n\rOP_LFPCommand\020\243\002\022"
    "\034\n\027OP_LFPGetMatchesRequest\020\244\002\022\035\n\030OP_LFPG"
    "etMatchesResponse\020\245\002\022\023\n\016OP_LinkedReuse\020\246"
    "\002\022\024\n\017OP_LoadSpellSet\020\247\002\022\017\n\nOP_LocInfo\020\250\002"
    "\022\030\n\023OP_LockoutTimerInfo\020\251\002\022\r\n\010OP_Login\020\252"
    "\002\022\025\n\020OP_LoginAccepted\020\253\002\022\025\n\020OP_LoginComp"
    "lete\020\254\002\022\025\n\020OP_LoginUnknown1\020\255\002\022\025\n\020OP_Log"
    "inUnknown2\020\256\002\022\016\n\tOP_Logout\020\257\002\022\023\n\016OP_Logo"
    "utReply\020\260\002\022\021\n\014OP_LogServer\020\261\002\022\024\n\017OP_Loot"
    "Complete\020\262\002\022\020\n\013OP_LootItem\020\263\002\022\023\n\016OP_Loot"
    "Request\020\264\002\022\022\n\rOP_ManaChange\020\265\002\022\022\n\rOP_Man"
    "aUpdate\020\266\002\022\017\n\nOP_MarkNPC\020\267\002\022\017\n\nOP_Marque"
    "e\020\270\002\022\025\n\020OP_MemorizeSpell\020\271\002\022\014\n\007OP_Mend\020\272"
    "\002\022\024\n\017OP_MendHPUpdate\020\273\002\022\027\n\022OP_MercenaryA"
    "ssign\020\274\002\022\030\n\023OP_MercenaryCommand\020\275\002\022\034\n\027OP"
    "_MercenaryDataRequest\020\276\002\022\035\n\030OP_Mercenary"
    "DataResponse\020\277\002\022\033\n\026OP_MercenaryDataUpdat"
    "e\020\300\002\022\"\n\035OP_MercenaryDataUpdateRequest\020\301\002"
    "\022\030\n\023OP_MercenaryDismiss\020\302\002\022\025\n\020OP_Mercena"
    "ryHire\020\303\002\022\037\n\032OP_MercenarySuspendRequest\020"
    "\304\002\022 \n\033OP_MercenarySuspendResponse\020\305\002\022\026\n\021"
    "OP_MercenaryTimer\020\306\002\022\035\n\030OP_MercenaryTime"
    "rRequest\020\307\002\022\031\n\024OP_MercenaryUnknown1\020\310\002\022\""
    "\n\035OP_MercenaryUnsuspendResponse\020\311\002\022\032\n\025OP"
    "_MobEnduranceUpdate\020\312\002\022\021\n\014OP_MobHealth\020\313"
    "\002\022\025\n\020OP_MobManaUpdate\020\314\002\022\021\n\014OP_MobRename"
    "\020\315\002\022\021\n\014OP_MobUpdate\020\316\002\022\025\n\020OP_MoneyOnCorp"
    "se\020\317\002\022\023\n\016OP_MoneyUpdate\020\320\002\022\014\n\007OP_MOTD\020\321\002"
    "\022\020\n\013OP_MoveCoin\020\322\002\022\020\n\013OP_MoveDoor\020\323\002\022\020\n\013"
    "OP_MoveItem\020\324\002\022\030\n\023OP_MoveLogDisregard\020\325\002"
    "\022\026\n\021OP_MoveLogRequest\020\326\002\022\024\n\017OP_MultiLine"
    "Msg\020\327\002\022\020\n\013OP_NewSpawn\020\330\002\022\032\n\025OP_NewTitles"
    "Available\020\331\002\022\017\n\nOP_NewZone\020\332\002\022\026\n\021OP_OnLe"
    "velMessage\020\333\002\022\025\n\020OP_OpenContainer\020\334\002\022\033\n\026"
    "OP_OpenDiscordMerchant\020\335\002\022\036\n\031OP_OpenGuil"
    "dTributeMaster\020\336\002\022\025\n\020OP_OpenInventory\020\337\002"
    "\022\032\n\025OP_OpenNewTasksWindow\020\340\002\022\031\n\024OP_OpenT"
    "ributeMaster\020\341\002\022\027\n\022OP_PDeletePetition\020\342\002"
    "\022\025\n\020OP_PetBuffWindow\020\343\002\022\023\n\016OP_PetCommand"
    "s\020\344\002\022\027\n\022OP_PetCommandState\020\345\002\022\017\n\nOP_PetH"
    "oTT\020\346\002\022\020\n\013OP_Petition\020\347\002\022\023\n\016OP_PetitionB"
    "ug\020\350\002\022\027\n\022OP_PetitionCheckIn\020\351\002\022\030\n\023OP_Pet"
    "itionCheckout\020\352\002\022\031\n\024OP_PetitionCheckout2"
    "\020\353\002\022\026\n\021OP_PetitionDelete\020\354\002\022\023\n\016OP_Petiti"
    "onQue\020\355\002\022\027\n\022OP_PetitionRefresh\020\356\002\022\027\n\022OP_"
    "PetitionResolve\020\357\002\022\026\n\021OP_PetitionSearch\020"
    "\360\002\022\035\n\030OP_PetitionSearchResults\020\361\002\022\032\n\025OP_"
    "PetitionSearchText\020\362\002\022\032\n\025OP_PetitionUnCh"
    "eckout\020\363\002\022\026\n\021OP_PetitionUpdate\020\364\002\022\022\n\rOP_"
    "PickPocket\020\365\002\022\025\n\020OP_PlayerProfile\020\366\002\022\026\n\021"
    "OP_PlayerStateAdd\020\367\002\022\031\n\024OP_PlayerStateRe"
    "move\020\370\002\022\034\n\027OP_PlayEverquestRequest\020\371\002\022\035\n"
    "\030OP_PlayEverquestResponse\020\372\002\022\017\n\nOP_PlayM"
    "P3\020\373\002\022\014\n\007OP_Poll\020\374\002\022\024\n\017OP_PollResponse\020\375"
    "\002\022\025\n\020OP_PopupResponse\020\376\002\022\026\n\021OP_PostEnter"
    "World\020\377\002\022\022\n\rOP_PotionBelt\020\200\003\022\026\n\021OP_PreLo"
    "goutReply\020\201\003\022\034\n\027OP_PurchaseLeadershipAA\020"
    "\202\003\022\"\n\035OP_PVPLeaderBoardDetailsReply\020\203\003\022$"
    "\n\037OP_PVPLeaderBoardDetailsRequest\020\204\003\022\033\n\026"
    "OP_PVPLeaderBoardReply\020\205\003\022\035\n\030OP_PVPLeade"
    "rBoardRequest\020\206\003\022\020\n\013OP_PVPStats\020\207\003\022\032\n\025OP"
    "_QueryResponseThing\020\210\003\022\022\n\rOP_RaidInvite\020"
    "\211\003\022\020\n\013OP_RaidJoin\020\212\003\022\022\n\rOP_RaidUpdate\020\213\003"
    "\022\033\n\026OP_RandomNameGenerator\020\214\003\022\023\n\016OP_Rand"
    "omReply\020\215\003\022\021\n\014OP_RandomReq\020\216\003\022\020\n\013OP_Read"
    "Book\020\217\003\022\031\n\024OP_RecipeAutoCombine\020\220\003\022\025\n\020OP"
    "_RecipeDetails\020\221\003\022\023\n\016OP_RecipeReply\020\222\003\022\027"
    "\n\022OP_RecipesFavorite\020\223\003\022\025\n\020OP_RecipesSea"
    "rch\020\224\003\022\027\n\022OP_ReclaimCrystals\020\225\003\022\020\n\013OP_Re"
    "loadUI\020\226\003\022\026\n\021OP_RemoveAllDoors\020\227\003\022\032\n\025OP_"
    "RemoveBlockedBuffs\020\230\003\022\032\n\025OP_RemoveNimbus"
    "Effect\020\231\003\022\022\n\rOP_RemoveTrap\020\232\003\022\016\n\tOP_Repo"
    "rt\020\233\003\022\026\n\021OP_ReqClientSpawn\020\234\003\022\022\n\rOP_ReqN"
    "ewZone\020\235\003\022\037\n\032OP_RequestClientZoneChange\020"
    "\236\003\022\023\n\016OP_RequestDuel\020\237\003\022\034\n\027OP_RequestKno"
    "wledgeBase\020\240\003\022\025\n\020OP_RequestTitles\020\241\003\022\025\n\020"
    "OP_RespawnWindow\020\242\003\022\021\n\014OP_RespondAA\020\243\003\022\021"
    "\n\014OP_RestState\020\244\003\022\016\n\tOP_Rewind\020\245\003\022\022\n\rOP_"
    "RezzAnswer\020\246\003\022\024\n\017OP_RezzComplete\020\247\003\022\023\n\016O"
    "P_RezzRequest\020\250\003\022\021\n\014OP_Sacrifice\020\251\003\022\027\n\022O"
    "P_SafeFallSuccess\020\252\003\022\021\n\014OP_SafePoint\020\253\003\022"
    "\014\n\007OP_Save\020\254\003\022\025\n\020OP_SaveOnZoneReq\020\255\003\022\025\n\020"
    "OP_SelectTribute\020\256\003\022\023\n\016OP_SendAAStats\020\257\003"
    "\022\023\n\016OP_SendAATable\020\260\003\022\024\n\017OP_SendCharInfo"
    "\020\261\003\022\025\n\020OP_SendExpZonein\020\262\003\022\030\n\023OP_SendFin"
    "dableNPCs\020\263\003\022\031\n\024OP_SendGuildTributes\020\264\003\022"
    "\025\n\020OP_SendLoginInfo\020\265\003\022\031\n\024OP_SendMaxChar"
    "acters\020\266\003\022\026\n\021OP_SendMembership\020\267\003\022\035\n\030OP_"
    "SendMembershipDetails\020\270\003\022\027\n\022OP_SendSyste"
    "mStats\020\271\003\022\025\n\020OP_SendTitleList\020\272\003\022\024\n\017OP_S"
    "endTributes\020\273\003\022\026\n\021OP_SendZonepoints\020\274\003\022\024"
    "\n\017OP_SenseHeading\020\275\003\022\022\n\rOP_SenseTraps\020\276\003"
    "\022\031\n\024OP_ServerListRequest\020\277\003\022\032\n\025OP_Server"
    "ListResponse\020\300\003\022\024\n\017OP_SessionReady\020\301\003\022\025\n"
    "\020OP_SetChatServer\020\302\003\022\026\n\021OP_SetChatServer"
    "2\020\303\003\022\026\n\021OP_SetGroupTarget\020\304\003\022\024\n\017OP_SetGu"
    "ildMOTD\020\305\003\022\024\n\017OP_SetGuildRank\020\306\003\022\022\n\rOP_S"
    "etRunMode\020\307\003\022\027\n\022OP_SetServerFilter\020\310\003\022\024\n"
    "\017OP_SetStartCity\020\311\003\022\020\n\013OP_SetTitle\020\312\003\022\025\n"
    "\020OP_SetTitleReply\020\313\003\022\021\n\014OP_Shielding\020\314\003\022"
    "\023\n\016OP_ShopDelItem\020\315\003\022\017\n\nOP_ShopEnd\020\316\003\022\026\n"
    "\021OP_ShopEndConfirm\020\317\003\022\020\n\013OP_ShopItem\020\320\003\022"
    "\025\n\020OP_ShopPlayerBuy\020\321\003\022\026\n\021OP_ShopPlayerS"
    "ell\020\322\003\022\023\n\016OP_ShopRequest\020\323\003\022\025\n\020OP_Simple"
    "Message\020\324\003\022\023\n\016OP_SkillUpdate\020\325\003\022\r\n\010OP_Sn"
    "eak\020\326\003\022\031\n\024OP_Some3ByteHPUpdate\020\327\003\022\031\n\024OP_"
    "Some6ByteHPUpdate\020\330\003\022\033\n\026OP_SomeItemPacke"
    "tMaybe\020\331\003\022\r\n\010OP_Sound\020\332\003\022\027\n\022OP_SpawnAppe"
    "arance\020\333\003\022\021\n\014OP_SpawnDoor\020\334\003\022\033\n\026OP_Spawn"
    "PositionUpdate\020\335\003\022\023\n\016OP_SpecialMesg\020\336\003\022\023"
    "\n\016OP_SpellEffect\020\337\003\022\r\n\010OP_Split\020\340\003\022\017\n\nOP"
    "_Stamina\020\341\003\022\014\n\007OP_Stun\020\342\003\022\017\n\nOP_Surname\020"
    "\343\003\022\021\n\014OP_SwapSpell\020\344\003\022\023\n\016OP_TargetBuffs\020"
    "\345\003\022\025\n\020OP_TargetCommand\020\346\003\022\022\n\rOP_TargetHo"
    "TT\020\347\003\022\023\n\016OP_TargetMouse\020\350\003\022\024\n\017OP_TargetR"
    "eject\020\351\003\022\024\n\017OP_TaskActivity\020\352\003\022\034\n\027OP_Tas"
    "kActivityComplete\020\353\003\022\027\n\022OP_TaskDescripti"
    "on\020\354\003\022\030\n\023OP_TaskHistoryReply\020\355\003\022\032\n\025OP_Ta"
    "skHistoryRequest\020\356\003\022\026\n\021OP_TaskMemberList"
    "\020\357\003\022\r\n\010OP_Taunt\020\360\003\022\020\n\013OP_TestBuff\020\361\003\022\013\n\006"
    "OP_TGB\020\362\003\022\021\n\014OP_TimeOfDay\020\363\003\022\r\n\010OP_Track"
    "\020\364\003\022\023\n\016OP_TrackTarget\020\365\003\022\024\n\017OP_TrackUnkn"
    "own\020\366\003\022\030\n\023OP_TradeAcceptClick\020\367\003\022\021\n\014OP_T"
    "radeBusy\020\370\003\022\022\n\rOP_TradeCoins\020\371\003\022\030\n\023OP_Tr"
    "adeMoneyUpdate\020\372\003\022\016\n\tOP_Trader\020\373\003\022\021\n\014OP_"
    "TraderBuy\020\374\003\022\025\n\020OP_TraderDelItem\020\375\003\022\024\n\017O"
    "P_TradeRequest\020\376\003\022\027\n\022OP_TradeRequestAck\020"
    "\377\003\022\030\n\023OP_TraderItemUpdate\020\200\004\022\022\n\rOP_Trade"
    "rShop\020\201\004\022\031\n\024OP_TradeSkillCombine\020\202\004\022\023\n\016O"
    "P_Translocate\020\203\004\022\023\n\016OP_TributeInfo\020\204\004\022\023\n"
    "\016OP_TributeItem\020\205\004\022\024\n\017OP_TributeMoney\020\206\004"
    "\022\022\n\rOP_TributeNPC\020\207\004\022\032\n\025OP_TributePointU"
    "pdate\020\210\004\022\024\n\017OP_TributeTimer\020\211\004\022\025\n\020OP_Tri"
    "buteToggle\020\212\004\022\025\n\020OP_TributeUpdate\020\213\004\022\024\n\017"
    "OP_Untargetable\020\214\004\022\020\n\013OP_UpdateAA\020\215\004\022\022\n\r"
    "OP_UpdateAura\020\216\004\022\032\n\025OP_UpdateLeadershipA"
    "A\020\217\004\022\025\n\020OP_VetClaimReply\020\220\004\022\027\n\022OP_VetCla"
    "imRequest\020\221\004\022\033\n\026OP_VetRewardsAvaliable\020\222"
    "\004\022\024\n\017OP_VoiceMacroIn\020\223\004\022\025\n\020OP_VoiceMacro"
    "Out\020\224\004\022\024\n\017OP_WeaponEquip1\020\225\004\022\022\n\rOP_WearC"
    "hange\020\226\004\022\017\n\nOP_Weather\020\227\004\022\017\n\nOP_Weblink\020"
    "\230\004\022\025\n\020OP_WhoAllRequest\020\231\004\022\026\n\021OP_WhoAllRe"
    "sponse\020\232\004\022\031\n\024OP_World_Client_CRC1\020\233\004\022\031\n\024"
    "OP_World_Client_CRC2\020\234\004\022\030\n\023OP_WorldClien"
    "tReady\020\235\004\022\025\n\020OP_WorldComplete\020\236\004\022\023\n\016OP_W"
    "orldLogout\020\237\004\022\030\n\023OP_WorldObjectsSent\020\240\004\022"
    "\027\n\022OP_WorldUnknown001\020\241\004\022\034\n\027OP_XTargetAu"
    "toAddHaters\020\242\004\022\023\n\016OP_XTargetOpen\020\243\004\022\033\n\026O"
    "P_XTargetOpenResponse\020\244\004\022\026\n\021OP_XTargetRe"
    "quest\020\245\004\022\027\n\022OP_XTargetResponse\020\246\004\022\023\n\016OP_"
    "YellForHelp\020\247\004\022\022\n\rOP_ZoneChange\020\250\004\022\024\n\017OP"
    "_ZoneComplete\020\251\004\022\021\n\014OP_ZoneEntry\020\252\004\022\025\n\020O"
    "P_ZoneGuildList\020\253\004\022\025\n\020OP_ZoneInUnknown\020\254"
    "\004\022\030\n\023OP_ZonePlayerToBind\020\255\004\022\026\n\021OP_ZoneSe"
    "rverInfo\020\256\004\022\027\n\022OP_ZoneServerReady\020\257\004\022\022\n\r"
    "OP_ZoneSpawns\020\260\004\022\023\n\016OP_ZoneUnavail\020\261\004\022\017\n"
    "\nOP_ResetAA\020\262\004\022\r\n\010OP_Buddy\020\263\004\022\033\n\026OP_Chan"
    "nelAnnounceJoin\020\264\004\022\034\n\027OP_ChannelAnnounce"
    "Leave\020\265\004\022\016\n\tOP_Ignore\020\266\004\022\014\n\007OP_Mail\020\267\004\022\025"
    "\n\020OP_MailboxChange\020\270\004\022\032\n\025OP_MailDelivery"
    "Status\020\271\004\022\022\n\rOP_MailHeader\020\272\004\022\027\n\022OP_Mail"
    "HeaderCount\020\273\004\022\021\n\014OP_MailLogin\020\274\004\022\017\n\nOP_"
    "MailNew\020\275\004\022\024\n\017OP_MailSendBody\020\276\004B\005H\001\370\001\001b"
    "\006proto3", 23367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_message_2eproto_once_);
void protobuf_AddDesc_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_message_2eproto_once_,
                 &protobuf_AddDesc_message_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorType_descriptor_;
}
bool ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EntityType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityType_descriptor_;
}
bool EntityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeityType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeityType_descriptor_;
}
bool DeityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 140:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 396:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DeityTypeBit_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeityTypeBit_descriptor_;
}
bool DeityTypeBit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 268435455:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 10:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 20:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 288:
    case 289:
    case 290:
    case 291:
    case 292:
    case 293:
    case 294:
    case 295:
    case 296:
    case 297:
    case 298:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BodyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BodyType_descriptor_;
}
bool BodyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 30:
    case 32:
    case 33:
    case 34:
    case 60:
    case 63:
    case 66:
    case 67:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GenderType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenderType_descriptor_;
}
bool GenderType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OpCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpCode_descriptor_;
}
bool OpCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 285:
    case 286:
    case 287:
    case 288:
    case 289:
    case 290:
    case 291:
    case 292:
    case 293:
    case 294:
    case 295:
    case 296:
    case 297:
    case 298:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 341:
    case 342:
    case 343:
    case 344:
    case 345:
    case 346:
    case 347:
    case 348:
    case 349:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 368:
    case 369:
    case 370:
    case 371:
    case 372:
    case 373:
    case 374:
    case 375:
    case 376:
    case 377:
    case 378:
    case 379:
    case 380:
    case 381:
    case 382:
    case 383:
    case 384:
    case 385:
    case 386:
    case 387:
    case 388:
    case 389:
    case 390:
    case 391:
    case 392:
    case 393:
    case 394:
    case 395:
    case 396:
    case 397:
    case 398:
    case 399:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 409:
    case 410:
    case 411:
    case 412:
    case 413:
    case 414:
    case 415:
    case 416:
    case 417:
    case 418:
    case 419:
    case 420:
    case 421:
    case 422:
    case 423:
    case 424:
    case 425:
    case 426:
    case 427:
    case 428:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 437:
    case 438:
    case 439:
    case 440:
    case 441:
    case 442:
    case 443:
    case 444:
    case 445:
    case 446:
    case 447:
    case 448:
    case 449:
    case 450:
    case 451:
    case 452:
    case 453:
    case 454:
    case 455:
    case 456:
    case 457:
    case 458:
    case 459:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 470:
    case 471:
    case 472:
    case 473:
    case 474:
    case 475:
    case 476:
    case 477:
    case 478:
    case 479:
    case 480:
    case 481:
    case 482:
    case 483:
    case 484:
    case 485:
    case 486:
    case 487:
    case 488:
    case 489:
    case 490:
    case 491:
    case 492:
    case 493:
    case 494:
    case 495:
    case 496:
    case 497:
    case 498:
    case 499:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 543:
    case 544:
    case 545:
    case 546:
    case 547:
    case 548:
    case 549:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 558:
    case 559:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMessage::kNumberFieldNumber;
const int ChannelMessage::kLanguageFieldNumber;
const int ChannelMessage::kFromFieldNumber;
const int ChannelMessage::kToFieldNumber;
const int ChannelMessage::kMessageFieldNumber;
const int ChannelMessage::kGuilddbidFieldNumber;
const int ChannelMessage::kDelivertoFieldNumber;
const int ChannelMessage::kTypeFieldNumber;
const int ChannelMessage::kMinstatusFieldNumber;
const int ChannelMessage::kFromadminFieldNumber;
const int ChannelMessage::kNoreplyFieldNumber;
const int ChannelMessage::kIsEmoteFieldNumber;
const int ChannelMessage::kQueuedFieldNumber;
const int ChannelMessage::kFromEntityIdFieldNumber;
const int ChannelMessage::kFromEntityTypeFieldNumber;
const int ChannelMessage::kDistanceFieldNumber;
const int ChannelMessage::kSkipSenderFieldNumber;
const int ChannelMessage::kResponseMessageFieldNumber;
const int ChannelMessage::kResponseValueFieldNumber;
const int ChannelMessage::kResponseErrorFieldNumber;
const int ChannelMessage::kResponseTypeFieldNumber;
const int ChannelMessage::kResponsePayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMessage::ChannelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.ChannelMessage)
}
ChannelMessage::ChannelMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.ChannelMessage)
}

void ChannelMessage::InitAsDefaultInstance() {
}

ChannelMessage::ChannelMessage(const ChannelMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.ChannelMessage)
}

void ChannelMessage::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deliverto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, reinterpret_cast<char*>(&response_error_) -
    reinterpret_cast<char*>(&number_) + sizeof(response_error_));
  _cached_size_ = 0;
}

ChannelMessage::~ChannelMessage() {
  // @@protoc_insertion_point(destructor:eqproto.ChannelMessage)
  SharedDtor();
}

void ChannelMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  from_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  to_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  message_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  deliverto_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_message_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_payload_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ChannelMessage::ArenaDtor(void* object) {
  ChannelMessage* _this = reinterpret_cast< ChannelMessage* >(object);
  (void)_this;
}
void ChannelMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ChannelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChannelMessage_descriptor_;
}

const ChannelMessage& ChannelMessage::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChannelMessage> ChannelMessage_default_instance_;

ChannelMessage* ChannelMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ChannelMessage>(arena);
}

void ChannelMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.ChannelMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChannelMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChannelMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_, type_);
  from_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  to_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  deliverto_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(minstatus_, is_emote_);
  ZR_(from_entity_id_, distance_);
  ZR_(response_value_, response_error_);
  skip_sender_ = false;
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

}

bool ChannelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.ChannelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eqproto.MessageType number = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::eqproto::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_language;
        break;
      }

      // optional int32 language = 2;
      case 2: {
        if (tag == 16) {
         parse_language:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_from;
        break;
      }

      // optional string from = 3;
      case 3: {
        if (tag == 26) {
         parse_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), this->from().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.from"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_to;
        break;
      }

      // optional string to = 4;
      case 4: {
        if (tag == 34) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.to"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_message;
        break;
      }

      // optional string message = 5;
      case 5: {
        if (tag == 42) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_guilddbid;
        break;
      }

      // optional int32 guilddbid = 6;
      case 6: {
        if (tag == 48) {
         parse_guilddbid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guilddbid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_deliverto;
        break;
      }

      // optional string deliverto = 7;
      case 7: {
        if (tag == 58) {
         parse_deliverto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliverto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deliverto().data(), this->deliverto().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.deliverto"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_type;
        break;
      }

      // optional int32 type = 8;
      case 8: {
        if (tag == 64) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_minstatus;
        break;
      }

      // optional int32 minstatus = 9;
      case 9: {
        if (tag == 72) {
         parse_minstatus:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minstatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_fromadmin;
        break;
      }

      // optional int32 fromadmin = 10;
      case 10: {
        if (tag == 80) {
         parse_fromadmin:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fromadmin_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_noreply;
        break;
      }

      // optional bool noreply = 11;
      case 11: {
        if (tag == 88) {
         parse_noreply:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noreply_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_is_emote;
        break;
      }

      // optional bool is_emote = 12;
      case 12: {
        if (tag == 96) {
         parse_is_emote:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_emote_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_queued;
        break;
      }

      // optional int32 queued = 13;
      case 13: {
        if (tag == 104) {
         parse_queued:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queued_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_from_entity_id;
        break;
      }

      // optional int32 from_entity_id = 16;
      case 16: {
        if (tag == 128) {
         parse_from_entity_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_entity_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_from_entity_type;
        break;
      }

      // optional .eqproto.EntityType from_entity_type = 17;
      case 17: {
        if (tag == 136) {
         parse_from_entity_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_entity_type(static_cast< ::eqproto::EntityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_distance;
        break;
      }

      // optional float distance = 18;
      case 18: {
        if (tag == 149) {
         parse_distance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_skip_sender;
        break;
      }

      // optional bool skip_sender = 19;
      case 19: {
        if (tag == 152) {
         parse_skip_sender:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_sender_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_response_message;
        break;
      }

      // optional string response_message = 20;
      case 20: {
        if (tag == 162) {
         parse_response_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_message().data(), this->response_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.response_message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_response_value;
        break;
      }

      // optional int32 response_value = 21;
      case 21: {
        if (tag == 168) {
         parse_response_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_response_error;
        break;
      }

      // optional .eqproto.ErrorType response_error = 22;
      case 22: {
        if (tag == 176) {
         parse_response_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_error(static_cast< ::eqproto::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_response_type;
        break;
      }

      // optional string response_type = 23;
      case 23: {
        if (tag == 186) {
         parse_response_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_type().data(), this->response_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessage.response_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_response_payload;
        break;
      }

      // optional bytes response_payload = 24;
      case 24: {
        if (tag == 194) {
         parse_response_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.ChannelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.ChannelMessage)
  return false;
#undef DO_
}

void ChannelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.ChannelMessage)
  // optional .eqproto.MessageType number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->number(), output);
  }

  // optional int32 language = 2;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->language(), output);
  }

  // optional string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from(), output);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to(), output);
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // optional int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guilddbid(), output);
  }

  // optional string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), this->deliverto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.deliverto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->deliverto(), output);
  }

  // optional int32 type = 8;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }

  // optional int32 minstatus = 9;
  if (this->minstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->minstatus(), output);
  }

  // optional int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->fromadmin(), output);
  }

  // optional bool noreply = 11;
  if (this->noreply() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->noreply(), output);
  }

  // optional bool is_emote = 12;
  if (this->is_emote() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_emote(), output);
  }

  // optional int32 queued = 13;
  if (this->queued() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->queued(), output);
  }

  // optional int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->from_entity_id(), output);
  }

  // optional .eqproto.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->from_entity_type(), output);
  }

  // optional float distance = 18;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->distance(), output);
  }

  // optional bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->skip_sender(), output);
  }

  // optional string response_message = 20;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), this->response_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.response_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->response_message(), output);
  }

  // optional int32 response_value = 21;
  if (this->response_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->response_value(), output);
  }

  // optional .eqproto.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->response_error(), output);
  }

  // optional string response_type = 23;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), this->response_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.response_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->response_type(), output);
  }

  // optional bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      24, this->response_payload(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.ChannelMessage)
}

::google::protobuf::uint8* ChannelMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.ChannelMessage)
  // optional .eqproto.MessageType number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->number(), target);
  }

  // optional int32 language = 2;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->language(), target);
  }

  // optional string from = 3;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from(), target);
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to(), target);
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // optional int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guilddbid(), target);
  }

  // optional string deliverto = 7;
  if (this->deliverto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deliverto().data(), this->deliverto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.deliverto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->deliverto(), target);
  }

  // optional int32 type = 8;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }

  // optional int32 minstatus = 9;
  if (this->minstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->minstatus(), target);
  }

  // optional int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->fromadmin(), target);
  }

  // optional bool noreply = 11;
  if (this->noreply() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->noreply(), target);
  }

  // optional bool is_emote = 12;
  if (this->is_emote() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_emote(), target);
  }

  // optional int32 queued = 13;
  if (this->queued() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->queued(), target);
  }

  // optional int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->from_entity_id(), target);
  }

  // optional .eqproto.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->from_entity_type(), target);
  }

  // optional float distance = 18;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->distance(), target);
  }

  // optional bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->skip_sender(), target);
  }

  // optional string response_message = 20;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), this->response_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.response_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->response_message(), target);
  }

  // optional int32 response_value = 21;
  if (this->response_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->response_value(), target);
  }

  // optional .eqproto.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->response_error(), target);
  }

  // optional string response_type = 23;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), this->response_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessage.response_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->response_type(), target);
  }

  // optional bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        24, this->response_payload(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.ChannelMessage)
  return target;
}

size_t ChannelMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.ChannelMessage)
  size_t total_size = 0;

  // optional .eqproto.MessageType number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // optional int32 language = 2;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->language());
  }

  // optional string from = 3;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // optional string to = 4;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // optional string message = 5;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // optional int32 guilddbid = 6;
  if (this->guilddbid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guilddbid());
  }

  // optional string deliverto = 7;
  if (this->deliverto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deliverto());
  }

  // optional int32 type = 8;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 minstatus = 9;
  if (this->minstatus() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minstatus());
  }

  // optional int32 fromadmin = 10;
  if (this->fromadmin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fromadmin());
  }

  // optional bool noreply = 11;
  if (this->noreply() != 0) {
    total_size += 1 + 1;
  }

  // optional bool is_emote = 12;
  if (this->is_emote() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 queued = 13;
  if (this->queued() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queued());
  }

  // optional int32 from_entity_id = 16;
  if (this->from_entity_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->from_entity_id());
  }

  // optional .eqproto.EntityType from_entity_type = 17;
  if (this->from_entity_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_entity_type());
  }

  // optional float distance = 18;
  if (this->distance() != 0) {
    total_size += 2 + 4;
  }

  // optional bool skip_sender = 19;
  if (this->skip_sender() != 0) {
    total_size += 2 + 1;
  }

  // optional string response_message = 20;
  if (this->response_message().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_message());
  }

  // optional int32 response_value = 21;
  if (this->response_value() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_value());
  }

  // optional .eqproto.ErrorType response_error = 22;
  if (this->response_error() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_error());
  }

  // optional string response_type = 23;
  if (this->response_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_type());
  }

  // optional bytes response_payload = 24;
  if (this->response_payload().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response_payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.ChannelMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChannelMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.ChannelMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.ChannelMessage)
    UnsafeMergeFrom(*source);
  }
}

void ChannelMessage::MergeFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.ChannelMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChannelMessage::UnsafeMergeFrom(const ChannelMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
  if (from.from().size() > 0) {
    set_from(from.from());
  }
  if (from.to().size() > 0) {
    set_to(from.to());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
  if (from.guilddbid() != 0) {
    set_guilddbid(from.guilddbid());
  }
  if (from.deliverto().size() > 0) {
    set_deliverto(from.deliverto());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.minstatus() != 0) {
    set_minstatus(from.minstatus());
  }
  if (from.fromadmin() != 0) {
    set_fromadmin(from.fromadmin());
  }
  if (from.noreply() != 0) {
    set_noreply(from.noreply());
  }
  if (from.is_emote() != 0) {
    set_is_emote(from.is_emote());
  }
  if (from.queued() != 0) {
    set_queued(from.queued());
  }
  if (from.from_entity_id() != 0) {
    set_from_entity_id(from.from_entity_id());
  }
  if (from.from_entity_type() != 0) {
    set_from_entity_type(from.from_entity_type());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
  if (from.skip_sender() != 0) {
    set_skip_sender(from.skip_sender());
  }
  if (from.response_message().size() > 0) {
    set_response_message(from.response_message());
  }
  if (from.response_value() != 0) {
    set_response_value(from.response_value());
  }
  if (from.response_error() != 0) {
    set_response_error(from.response_error());
  }
  if (from.response_type().size() > 0) {
    set_response_type(from.response_type());
  }
  if (from.response_payload().size() > 0) {
    set_response_payload(from.response_payload());
  }
}

void ChannelMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.ChannelMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMessage::CopyFrom(const ChannelMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.ChannelMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChannelMessage::IsInitialized() const {

  return true;
}

void ChannelMessage::Swap(ChannelMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ChannelMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ChannelMessage::UnsafeArenaSwap(ChannelMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ChannelMessage::InternalSwap(ChannelMessage* other) {
  std::swap(number_, other->number_);
  std::swap(language_, other->language_);
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  message_.Swap(&other->message_);
  std::swap(guilddbid_, other->guilddbid_);
  deliverto_.Swap(&other->deliverto_);
  std::swap(type_, other->type_);
  std::swap(minstatus_, other->minstatus_);
  std::swap(fromadmin_, other->fromadmin_);
  std::swap(noreply_, other->noreply_);
  std::swap(is_emote_, other->is_emote_);
  std::swap(queued_, other->queued_);
  std::swap(from_entity_id_, other->from_entity_id_);
  std::swap(from_entity_type_, other->from_entity_type_);
  std::swap(distance_, other->distance_);
  std::swap(skip_sender_, other->skip_sender_);
  response_message_.Swap(&other->response_message_);
  std::swap(response_value_, other->response_value_);
  std::swap(response_error_, other->response_error_);
  response_type_.Swap(&other->response_type_);
  response_payload_.Swap(&other->response_payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChannelMessage_descriptor_;
  metadata.reflection = ChannelMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelMessage

// optional .eqproto.MessageType number = 1;
void ChannelMessage::clear_number() {
  number_ = 0;
}
::eqproto::MessageType ChannelMessage::number() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.number)
  return static_cast< ::eqproto::MessageType >(number_);
}
void ChannelMessage::set_number(::eqproto::MessageType value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.number)
}

// optional int32 language = 2;
void ChannelMessage::clear_language() {
  language_ = 0;
}
::google::protobuf::int32 ChannelMessage::language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.language)
  return language_;
}
void ChannelMessage::set_language(::google::protobuf::int32 value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.language)
}

// optional string from = 3;
void ChannelMessage::clear_from() {
  from_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::from() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.from)
  return from_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_from(const ::std::string& value) {
  
  from_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.from)
}
void ChannelMessage::set_from(const char* value) {
  
  from_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.from)
}
void ChannelMessage::set_from(const char* value,
    size_t size) {
  
  from_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.from)
}
::std::string* ChannelMessage::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.from)
  return from_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_from() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.from)
  
  return from_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_from() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.from)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return from_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.from)
}
void ChannelMessage::unsafe_arena_set_allocated_from(
    ::std::string* from) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (from != NULL) {
    
  } else {
    
  }
  from_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      from, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.from)
}

// optional string to = 4;
void ChannelMessage::clear_to() {
  to_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::to() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.to)
  return to_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_to(const ::std::string& value) {
  
  to_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.to)
}
void ChannelMessage::set_to(const char* value) {
  
  to_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.to)
}
void ChannelMessage::set_to(const char* value,
    size_t size) {
  
  to_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.to)
}
::std::string* ChannelMessage::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.to)
  return to_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_to() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.to)
  
  return to_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_to() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.to)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return to_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.to)
}
void ChannelMessage::unsafe_arena_set_allocated_to(
    ::std::string* to) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (to != NULL) {
    
  } else {
    
  }
  to_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      to, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.to)
}

// optional string message = 5;
void ChannelMessage::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.message)
  return message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_message(const ::std::string& value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.message)
}
void ChannelMessage::set_message(const char* value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.message)
}
void ChannelMessage::set_message(const char* value,
    size_t size) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.message)
}
::std::string* ChannelMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.message)
}
void ChannelMessage::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (message != NULL) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.message)
}

// optional int32 guilddbid = 6;
void ChannelMessage::clear_guilddbid() {
  guilddbid_ = 0;
}
::google::protobuf::int32 ChannelMessage::guilddbid() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.guilddbid)
  return guilddbid_;
}
void ChannelMessage::set_guilddbid(::google::protobuf::int32 value) {
  
  guilddbid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.guilddbid)
}

// optional string deliverto = 7;
void ChannelMessage::clear_deliverto() {
  deliverto_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::deliverto() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.deliverto)
  return deliverto_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_deliverto(const ::std::string& value) {
  
  deliverto_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.deliverto)
}
void ChannelMessage::set_deliverto(const char* value) {
  
  deliverto_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.deliverto)
}
void ChannelMessage::set_deliverto(const char* value,
    size_t size) {
  
  deliverto_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.deliverto)
}
::std::string* ChannelMessage::mutable_deliverto() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.deliverto)
  return deliverto_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_deliverto() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.deliverto)
  
  return deliverto_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_deliverto() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.deliverto)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return deliverto_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_deliverto(::std::string* deliverto) {
  if (deliverto != NULL) {
    
  } else {
    
  }
  deliverto_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deliverto,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.deliverto)
}
void ChannelMessage::unsafe_arena_set_allocated_deliverto(
    ::std::string* deliverto) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (deliverto != NULL) {
    
  } else {
    
  }
  deliverto_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      deliverto, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.deliverto)
}

// optional int32 type = 8;
void ChannelMessage::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ChannelMessage::type() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.type)
  return type_;
}
void ChannelMessage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.type)
}

// optional int32 minstatus = 9;
void ChannelMessage::clear_minstatus() {
  minstatus_ = 0;
}
::google::protobuf::int32 ChannelMessage::minstatus() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.minstatus)
  return minstatus_;
}
void ChannelMessage::set_minstatus(::google::protobuf::int32 value) {
  
  minstatus_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.minstatus)
}

// optional int32 fromadmin = 10;
void ChannelMessage::clear_fromadmin() {
  fromadmin_ = 0;
}
::google::protobuf::int32 ChannelMessage::fromadmin() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.fromadmin)
  return fromadmin_;
}
void ChannelMessage::set_fromadmin(::google::protobuf::int32 value) {
  
  fromadmin_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.fromadmin)
}

// optional bool noreply = 11;
void ChannelMessage::clear_noreply() {
  noreply_ = false;
}
bool ChannelMessage::noreply() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.noreply)
  return noreply_;
}
void ChannelMessage::set_noreply(bool value) {
  
  noreply_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.noreply)
}

// optional bool is_emote = 12;
void ChannelMessage::clear_is_emote() {
  is_emote_ = false;
}
bool ChannelMessage::is_emote() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.is_emote)
  return is_emote_;
}
void ChannelMessage::set_is_emote(bool value) {
  
  is_emote_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.is_emote)
}

// optional int32 queued = 13;
void ChannelMessage::clear_queued() {
  queued_ = 0;
}
::google::protobuf::int32 ChannelMessage::queued() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.queued)
  return queued_;
}
void ChannelMessage::set_queued(::google::protobuf::int32 value) {
  
  queued_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.queued)
}

// optional int32 from_entity_id = 16;
void ChannelMessage::clear_from_entity_id() {
  from_entity_id_ = 0;
}
::google::protobuf::int32 ChannelMessage::from_entity_id() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.from_entity_id)
  return from_entity_id_;
}
void ChannelMessage::set_from_entity_id(::google::protobuf::int32 value) {
  
  from_entity_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.from_entity_id)
}

// optional .eqproto.EntityType from_entity_type = 17;
void ChannelMessage::clear_from_entity_type() {
  from_entity_type_ = 0;
}
::eqproto::EntityType ChannelMessage::from_entity_type() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.from_entity_type)
  return static_cast< ::eqproto::EntityType >(from_entity_type_);
}
void ChannelMessage::set_from_entity_type(::eqproto::EntityType value) {
  
  from_entity_type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.from_entity_type)
}

// optional float distance = 18;
void ChannelMessage::clear_distance() {
  distance_ = 0;
}
float ChannelMessage::distance() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.distance)
  return distance_;
}
void ChannelMessage::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.distance)
}

// optional bool skip_sender = 19;
void ChannelMessage::clear_skip_sender() {
  skip_sender_ = false;
}
bool ChannelMessage::skip_sender() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.skip_sender)
  return skip_sender_;
}
void ChannelMessage::set_skip_sender(bool value) {
  
  skip_sender_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.skip_sender)
}

// optional string response_message = 20;
void ChannelMessage::clear_response_message() {
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::response_message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.response_message)
  return response_message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_response_message(const ::std::string& value) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.response_message)
}
void ChannelMessage::set_response_message(const char* value) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.response_message)
}
void ChannelMessage::set_response_message(const char* value,
    size_t size) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.response_message)
}
::std::string* ChannelMessage::mutable_response_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.response_message)
  return response_message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_response_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.response_message)
  
  return response_message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_response_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.response_message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_response_message(::std::string* response_message) {
  if (response_message != NULL) {
    
  } else {
    
  }
  response_message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.response_message)
}
void ChannelMessage::unsafe_arena_set_allocated_response_message(
    ::std::string* response_message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_message != NULL) {
    
  } else {
    
  }
  response_message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.response_message)
}

// optional int32 response_value = 21;
void ChannelMessage::clear_response_value() {
  response_value_ = 0;
}
::google::protobuf::int32 ChannelMessage::response_value() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.response_value)
  return response_value_;
}
void ChannelMessage::set_response_value(::google::protobuf::int32 value) {
  
  response_value_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.response_value)
}

// optional .eqproto.ErrorType response_error = 22;
void ChannelMessage::clear_response_error() {
  response_error_ = 0;
}
::eqproto::ErrorType ChannelMessage::response_error() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.response_error)
  return static_cast< ::eqproto::ErrorType >(response_error_);
}
void ChannelMessage::set_response_error(::eqproto::ErrorType value) {
  
  response_error_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.response_error)
}

// optional string response_type = 23;
void ChannelMessage::clear_response_type() {
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::response_type() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.response_type)
  return response_type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_response_type(const ::std::string& value) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.response_type)
}
void ChannelMessage::set_response_type(const char* value) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.response_type)
}
void ChannelMessage::set_response_type(const char* value,
    size_t size) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.response_type)
}
::std::string* ChannelMessage::mutable_response_type() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.response_type)
  return response_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_response_type() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.response_type)
  
  return response_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_response_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.response_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_response_type(::std::string* response_type) {
  if (response_type != NULL) {
    
  } else {
    
  }
  response_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.response_type)
}
void ChannelMessage::unsafe_arena_set_allocated_response_type(
    ::std::string* response_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_type != NULL) {
    
  } else {
    
  }
  response_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.response_type)
}

// optional bytes response_payload = 24;
void ChannelMessage::clear_response_payload() {
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessage::response_payload() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessage.response_payload)
  return response_payload_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessage::set_response_payload(const ::std::string& value) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessage.response_payload)
}
void ChannelMessage::set_response_payload(const char* value) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessage.response_payload)
}
void ChannelMessage::set_response_payload(const void* value,
    size_t size) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessage.response_payload)
}
::std::string* ChannelMessage::mutable_response_payload() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessage.response_payload)
  return response_payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::release_response_payload() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessage.response_payload)
  
  return response_payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessage::unsafe_arena_release_response_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessage.response_payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessage::set_allocated_response_payload(::std::string* response_payload) {
  if (response_payload != NULL) {
    
  } else {
    
  }
  response_payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessage.response_payload)
}
void ChannelMessage::unsafe_arena_set_allocated_response_payload(
    ::std::string* response_payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_payload != NULL) {
    
  } else {
    
  }
  response_payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessage.response_payload)
}

inline const ChannelMessage* ChannelMessage::internal_default_instance() {
  return &ChannelMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandMessage::kAuthorFieldNumber;
const int CommandMessage::kCommandFieldNumber;
const int CommandMessage::kParamsFieldNumber;
const int CommandMessage::kResponseMessageFieldNumber;
const int CommandMessage::kResponseValueFieldNumber;
const int CommandMessage::kResponseErrorFieldNumber;
const int CommandMessage::kResponseTypeFieldNumber;
const int CommandMessage::kResponsePayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandMessage::CommandMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.CommandMessage)
}
CommandMessage::CommandMessage(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  params_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.CommandMessage)
}

void CommandMessage::InitAsDefaultInstance() {
}

CommandMessage::CommandMessage(const CommandMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.CommandMessage)
}

void CommandMessage::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_value_, 0, reinterpret_cast<char*>(&response_error_) -
    reinterpret_cast<char*>(&response_value_) + sizeof(response_error_));
  _cached_size_ = 0;
}

CommandMessage::~CommandMessage() {
  // @@protoc_insertion_point(destructor:eqproto.CommandMessage)
  SharedDtor();
}

void CommandMessage::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  author_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  command_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_message_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  response_payload_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CommandMessage::ArenaDtor(void* object) {
  CommandMessage* _this = reinterpret_cast< CommandMessage* >(object);
  (void)_this;
}
void CommandMessage::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CommandMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandMessage_descriptor_;
}

const CommandMessage& CommandMessage::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CommandMessage> CommandMessage_default_instance_;

CommandMessage* CommandMessage::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CommandMessage>(arena);
}

void CommandMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.CommandMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CommandMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CommandMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(response_value_, response_error_);
  author_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  command_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

  params_.Clear();
}

bool CommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.CommandMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string author = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), this->author().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.author"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_command;
        break;
      }

      // optional string command = 2;
      case 2: {
        if (tag == 18) {
         parse_command:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.command"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_params;
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (tag == 26) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params(this->params_size() - 1).data(),
            this->params(this->params_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.params"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_params;
        if (input->ExpectTag(34)) goto parse_response_message;
        break;
      }

      // optional string response_message = 4;
      case 4: {
        if (tag == 34) {
         parse_response_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_message().data(), this->response_message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.response_message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_response_value;
        break;
      }

      // optional int32 response_value = 5;
      case 5: {
        if (tag == 40) {
         parse_response_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_response_error;
        break;
      }

      // optional .eqproto.ErrorType response_error = 6;
      case 6: {
        if (tag == 48) {
         parse_response_error:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_response_error(static_cast< ::eqproto::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_response_type;
        break;
      }

      // optional string response_type = 7;
      case 7: {
        if (tag == 58) {
         parse_response_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_type().data(), this->response_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.CommandMessage.response_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_response_payload;
        break;
      }

      // optional bytes response_payload = 8;
      case 8: {
        if (tag == 66) {
         parse_response_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.CommandMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.CommandMessage)
  return false;
#undef DO_
}

void CommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.CommandMessage)
  // optional string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), this->author().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // optional string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command(), output);
  }

  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  // optional string response_message = 4;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), this->response_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.response_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_message(), output);
  }

  // optional int32 response_value = 5;
  if (this->response_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->response_value(), output);
  }

  // optional .eqproto.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->response_error(), output);
  }

  // optional string response_type = 7;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), this->response_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.response_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->response_type(), output);
  }

  // optional bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->response_payload(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.CommandMessage)
}

::google::protobuf::uint8* CommandMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.CommandMessage)
  // optional string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), this->author().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // optional string command = 2;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command(), target);
  }

  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  // optional string response_message = 4;
  if (this->response_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_message().data(), this->response_message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.response_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_message(), target);
  }

  // optional int32 response_value = 5;
  if (this->response_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->response_value(), target);
  }

  // optional .eqproto.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->response_error(), target);
  }

  // optional string response_type = 7;
  if (this->response_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type().data(), this->response_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.CommandMessage.response_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->response_type(), target);
  }

  // optional bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->response_payload(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.CommandMessage)
  return target;
}

size_t CommandMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.CommandMessage)
  size_t total_size = 0;

  // optional string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // optional string command = 2;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // optional string response_message = 4;
  if (this->response_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_message());
  }

  // optional int32 response_value = 5;
  if (this->response_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_value());
  }

  // optional .eqproto.ErrorType response_error = 6;
  if (this->response_error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response_error());
  }

  // optional string response_type = 7;
  if (this->response_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_type());
  }

  // optional bytes response_payload = 8;
  if (this->response_payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response_payload());
  }

  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.CommandMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommandMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.CommandMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.CommandMessage)
    UnsafeMergeFrom(*source);
  }
}

void CommandMessage::MergeFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.CommandMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CommandMessage::UnsafeMergeFrom(const CommandMessage& from) {
  GOOGLE_DCHECK(&from != this);
  params_.UnsafeMergeFrom(from.params_);
  if (from.author().size() > 0) {
    set_author(from.author());
  }
  if (from.command().size() > 0) {
    set_command(from.command());
  }
  if (from.response_message().size() > 0) {
    set_response_message(from.response_message());
  }
  if (from.response_value() != 0) {
    set_response_value(from.response_value());
  }
  if (from.response_error() != 0) {
    set_response_error(from.response_error());
  }
  if (from.response_type().size() > 0) {
    set_response_type(from.response_type());
  }
  if (from.response_payload().size() > 0) {
    set_response_payload(from.response_payload());
  }
}

void CommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.CommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandMessage::CopyFrom(const CommandMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.CommandMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CommandMessage::IsInitialized() const {

  return true;
}

void CommandMessage::Swap(CommandMessage* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CommandMessage temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void CommandMessage::UnsafeArenaSwap(CommandMessage* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CommandMessage::InternalSwap(CommandMessage* other) {
  author_.Swap(&other->author_);
  command_.Swap(&other->command_);
  params_.UnsafeArenaSwap(&other->params_);
  response_message_.Swap(&other->response_message_);
  std::swap(response_value_, other->response_value_);
  std::swap(response_error_, other->response_error_);
  response_type_.Swap(&other->response_type_);
  response_payload_.Swap(&other->response_payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommandMessage_descriptor_;
  metadata.reflection = CommandMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandMessage

// optional string author = 1;
void CommandMessage::clear_author() {
  author_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CommandMessage::author() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.author)
  return author_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_author(const ::std::string& value) {
  
  author_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.author)
}
void CommandMessage::set_author(const char* value) {
  
  author_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.author)
}
void CommandMessage::set_author(const char* value,
    size_t size) {
  
  author_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.author)
}
::std::string* CommandMessage::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.author)
  return author_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::release_author() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.author)
  
  return author_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::unsafe_arena_release_author() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.CommandMessage.author)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return author_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CommandMessage::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.author)
}
void CommandMessage::unsafe_arena_set_allocated_author(
    ::std::string* author) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (author != NULL) {
    
  } else {
    
  }
  author_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      author, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.CommandMessage.author)
}

// optional string command = 2;
void CommandMessage::clear_command() {
  command_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CommandMessage::command() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.command)
  return command_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_command(const ::std::string& value) {
  
  command_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.command)
}
void CommandMessage::set_command(const char* value) {
  
  command_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.command)
}
void CommandMessage::set_command(const char* value,
    size_t size) {
  
  command_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.command)
}
::std::string* CommandMessage::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.command)
  return command_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::release_command() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.command)
  
  return command_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::unsafe_arena_release_command() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.CommandMessage.command)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return command_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CommandMessage::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.command)
}
void CommandMessage::unsafe_arena_set_allocated_command(
    ::std::string* command) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (command != NULL) {
    
  } else {
    
  }
  command_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      command, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.CommandMessage.command)
}

// repeated string params = 3;
int CommandMessage::params_size() const {
  return params_.size();
}
void CommandMessage::clear_params() {
  params_.Clear();
}
const ::std::string& CommandMessage::params(int index) const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.params)
  return params_.Get(index);
}
::std::string* CommandMessage::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.params)
  return params_.Mutable(index);
}
void CommandMessage::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.params)
  params_.Mutable(index)->assign(value);
}
void CommandMessage::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.params)
}
void CommandMessage::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.params)
}
::std::string* CommandMessage::add_params() {
  // @@protoc_insertion_point(field_add_mutable:eqproto.CommandMessage.params)
  return params_.Add();
}
void CommandMessage::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:eqproto.CommandMessage.params)
}
void CommandMessage::add_params(const char* value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:eqproto.CommandMessage.params)
}
void CommandMessage::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:eqproto.CommandMessage.params)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CommandMessage::params() const {
  // @@protoc_insertion_point(field_list:eqproto.CommandMessage.params)
  return params_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CommandMessage::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:eqproto.CommandMessage.params)
  return &params_;
}

// optional string response_message = 4;
void CommandMessage::clear_response_message() {
  response_message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CommandMessage::response_message() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.response_message)
  return response_message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_response_message(const ::std::string& value) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.response_message)
}
void CommandMessage::set_response_message(const char* value) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.response_message)
}
void CommandMessage::set_response_message(const char* value,
    size_t size) {
  
  response_message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.response_message)
}
::std::string* CommandMessage::mutable_response_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.response_message)
  return response_message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::release_response_message() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.response_message)
  
  return response_message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::unsafe_arena_release_response_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.CommandMessage.response_message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CommandMessage::set_allocated_response_message(::std::string* response_message) {
  if (response_message != NULL) {
    
  } else {
    
  }
  response_message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.response_message)
}
void CommandMessage::unsafe_arena_set_allocated_response_message(
    ::std::string* response_message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_message != NULL) {
    
  } else {
    
  }
  response_message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.CommandMessage.response_message)
}

// optional int32 response_value = 5;
void CommandMessage::clear_response_value() {
  response_value_ = 0;
}
::google::protobuf::int32 CommandMessage::response_value() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.response_value)
  return response_value_;
}
void CommandMessage::set_response_value(::google::protobuf::int32 value) {
  
  response_value_ = value;
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.response_value)
}

// optional .eqproto.ErrorType response_error = 6;
void CommandMessage::clear_response_error() {
  response_error_ = 0;
}
::eqproto::ErrorType CommandMessage::response_error() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.response_error)
  return static_cast< ::eqproto::ErrorType >(response_error_);
}
void CommandMessage::set_response_error(::eqproto::ErrorType value) {
  
  response_error_ = value;
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.response_error)
}

// optional string response_type = 7;
void CommandMessage::clear_response_type() {
  response_type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CommandMessage::response_type() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.response_type)
  return response_type_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_response_type(const ::std::string& value) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.response_type)
}
void CommandMessage::set_response_type(const char* value) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.response_type)
}
void CommandMessage::set_response_type(const char* value,
    size_t size) {
  
  response_type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.response_type)
}
::std::string* CommandMessage::mutable_response_type() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.response_type)
  return response_type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::release_response_type() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.response_type)
  
  return response_type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::unsafe_arena_release_response_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.CommandMessage.response_type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CommandMessage::set_allocated_response_type(::std::string* response_type) {
  if (response_type != NULL) {
    
  } else {
    
  }
  response_type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.response_type)
}
void CommandMessage::unsafe_arena_set_allocated_response_type(
    ::std::string* response_type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_type != NULL) {
    
  } else {
    
  }
  response_type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.CommandMessage.response_type)
}

// optional bytes response_payload = 8;
void CommandMessage::clear_response_payload() {
  response_payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CommandMessage::response_payload() const {
  // @@protoc_insertion_point(field_get:eqproto.CommandMessage.response_payload)
  return response_payload_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandMessage::set_response_payload(const ::std::string& value) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.CommandMessage.response_payload)
}
void CommandMessage::set_response_payload(const char* value) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.CommandMessage.response_payload)
}
void CommandMessage::set_response_payload(const void* value,
    size_t size) {
  
  response_payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.CommandMessage.response_payload)
}
::std::string* CommandMessage::mutable_response_payload() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.CommandMessage.response_payload)
  return response_payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::release_response_payload() {
  // @@protoc_insertion_point(field_release:eqproto.CommandMessage.response_payload)
  
  return response_payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CommandMessage::unsafe_arena_release_response_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.CommandMessage.response_payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return response_payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CommandMessage::set_allocated_response_payload(::std::string* response_payload) {
  if (response_payload != NULL) {
    
  } else {
    
  }
  response_payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.CommandMessage.response_payload)
}
void CommandMessage::unsafe_arena_set_allocated_response_payload(
    ::std::string* response_payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (response_payload != NULL) {
    
  } else {
    
  }
  response_payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      response_payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.CommandMessage.response_payload)
}

inline const CommandMessage* CommandMessage::internal_default_instance() {
  return &CommandMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void Entity::_slow_mutable_position() {
  position_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Position >(
      GetArenaNoVirtual());
}
::eqproto::Position* Entity::_slow_release_position() {
  if (position_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Position* temp = new ::eqproto::Position(*position_);
    position_ = NULL;
    return temp;
  }
}
::eqproto::Position* Entity::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.Entity.position)
  
  ::eqproto::Position* temp = position_;
  position_ = NULL;
  return temp;
}
void Entity::_slow_set_allocated_position(
    ::google::protobuf::Arena* message_arena, ::eqproto::Position** position) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*position) == NULL) {
      message_arena->Own(*position);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*position)) {
      ::eqproto::Position* new_position = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Position >(
            message_arena);
      new_position->CopyFrom(**position);
      *position = new_position;
    }
}
void Entity::unsafe_arena_set_allocated_position(
    ::eqproto::Position* position) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.Entity.position)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entity::kIdFieldNumber;
const int Entity::kNameFieldNumber;
const int Entity::kTypeFieldNumber;
const int Entity::kHpFieldNumber;
const int Entity::kLevelFieldNumber;
const int Entity::kPositionFieldNumber;
const int Entity::kRaceFieldNumber;
const int Entity::kClassFieldNumber;
const int Entity::kMaxHpFieldNumber;
const int Entity::kSpawnTimestampFieldNumber;
const int Entity::kLastnameFieldNumber;
const int Entity::kGenderFieldNumber;
const int Entity::kBodytypeFieldNumber;
const int Entity::kDeityFieldNumber;
const int Entity::kNpctypeIdFieldNumber;
const int Entity::kSizeFieldNumber;
const int Entity::kRunspeedFieldNumber;
const int Entity::kTextureFieldNumber;
const int Entity::kHelmtextureFieldNumber;
const int Entity::kAcFieldNumber;
const int Entity::kAtkFieldNumber;
const int Entity::kStrFieldNumber;
const int Entity::kStaFieldNumber;
const int Entity::kDexFieldNumber;
const int Entity::kAgiFieldNumber;
const int Entity::kIntFieldNumber;
const int Entity::kWisFieldNumber;
const int Entity::kChaFieldNumber;
const int Entity::kHaircolorFieldNumber;
const int Entity::kBeardcolorFieldNumber;
const int Entity::kEyecolor1FieldNumber;
const int Entity::kEyecolor2FieldNumber;
const int Entity::kDoorDbIdFieldNumber;
const int Entity::kDoorIdFieldNumber;
const int Entity::kDoorNameFieldNumber;
const int Entity::kDoorInclineFieldNumber;
const int Entity::kDoorOpentypeFieldNumber;
const int Entity::kDoorGuildIdFieldNumber;
const int Entity::kDoorLockpickFieldNumber;
const int Entity::kDoorKeyitemFieldNumber;
const int Entity::kDoorNokeyringFieldNumber;
const int Entity::kDoorTriggerDoorIdFieldNumber;
const int Entity::kDoorTriggerTypeFieldNumber;
const int Entity::kDoorParamFieldNumber;
const int Entity::kDoorInvertStateFieldNumber;
const int Entity::kDoorDisableTimerFieldNumber;
const int Entity::kDoorIsOpenFieldNumber;
const int Entity::kDoorIsLdonFieldNumber;
const int Entity::kDoorClientVersionMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entity::Entity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Entity)
}
Entity::Entity(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Entity)
}

void Entity::InitAsDefaultInstance() {
  position_ = const_cast< ::eqproto::Position*>(
      ::eqproto::Position::internal_default_instance());
}

Entity::Entity(const Entity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Entity)
}

void Entity::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  door_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&door_client_version_mask_) -
    reinterpret_cast<char*>(&id_) + sizeof(door_client_version_mask_));
  _cached_size_ = 0;
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:eqproto.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  lastname_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  door_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &Entity_default_instance_.get()) {
    delete position_;
  }
}

void Entity::ArenaDtor(void* object) {
  Entity* _this = reinterpret_cast< Entity* >(object);
  (void)_this;
}
void Entity::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Entity_descriptor_;
}

const Entity& Entity::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Entity> Entity_default_instance_;

Entity* Entity::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Entity>(arena);
}

void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Entity)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Entity, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Entity*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, class__);
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
  ZR_(spawn_timestamp_, size_);
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(runspeed_, dex_);
  ZR_(agi_, eyecolor2_);
  ZR_(door_db_id_, door_keyitem_);
  door_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(door_nokeyring_, door_is_ldon_);
  door_client_version_mask_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.Entity.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .eqproto.EntityType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::eqproto::EntityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_hp;
        break;
      }

      // optional int32 hp = 4;
      case 4: {
        if (tag == 32) {
         parse_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional int32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_position;
        break;
      }

      // optional .eqproto.Position position = 6;
      case 6: {
        if (tag == 50) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_race;
        break;
      }

      // optional int32 race = 7;
      case 7: {
        if (tag == 56) {
         parse_race:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &race_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_class;
        break;
      }

      // optional int32 class = 8;
      case 8: {
        if (tag == 64) {
         parse_class:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_max_hp;
        break;
      }

      // optional int32 max_hp = 9;
      case 9: {
        if (tag == 72) {
         parse_max_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_spawn_timestamp;
        break;
      }

      // optional int64 spawn_timestamp = 10;
      case 10: {
        if (tag == 80) {
         parse_spawn_timestamp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &spawn_timestamp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_lastname;
        break;
      }

      // optional string lastname = 13;
      case 13: {
        if (tag == 106) {
         parse_lastname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), this->lastname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.Entity.lastname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_gender;
        break;
      }

      // optional .eqproto.GenderType gender = 14;
      case 14: {
        if (tag == 112) {
         parse_gender:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gender(static_cast< ::eqproto::GenderType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_bodytype;
        break;
      }

      // optional .eqproto.BodyType bodytype = 15;
      case 15: {
        if (tag == 120) {
         parse_bodytype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bodytype(static_cast< ::eqproto::BodyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_deity;
        break;
      }

      // optional .eqproto.DeityType deity = 16;
      case 16: {
        if (tag == 128) {
         parse_deity:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deity(static_cast< ::eqproto::DeityType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_npctype_id;
        break;
      }

      // optional uint32 npctype_id = 17;
      case 17: {
        if (tag == 136) {
         parse_npctype_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npctype_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_size;
        break;
      }

      // optional float size = 18;
      case 18: {
        if (tag == 149) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(157)) goto parse_runspeed;
        break;
      }

      // optional float runspeed = 19;
      case 19: {
        if (tag == 157) {
         parse_runspeed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &runspeed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_texture;
        break;
      }

      // optional int32 texture = 21;
      case 21: {
        if (tag == 168) {
         parse_texture:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &texture_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_helmtexture;
        break;
      }

      // optional int32 helmtexture = 22;
      case 22: {
        if (tag == 176) {
         parse_helmtexture:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &helmtexture_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_ac;
        break;
      }

      // optional int32 ac = 23;
      case 23: {
        if (tag == 184) {
         parse_ac:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ac_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_atk;
        break;
      }

      // optional int32 atk = 24;
      case 24: {
        if (tag == 192) {
         parse_atk:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atk_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_str;
        break;
      }

      // optional int32 str = 25;
      case 25: {
        if (tag == 200) {
         parse_str:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &str_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_sta;
        break;
      }

      // optional int32 sta = 26;
      case 26: {
        if (tag == 208) {
         parse_sta:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sta_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_dex;
        break;
      }

      // optional int32 dex = 27;
      case 27: {
        if (tag == 216) {
         parse_dex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_agi;
        break;
      }

      // optional int32 agi = 28;
      case 28: {
        if (tag == 224) {
         parse_agi:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &agi_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_int;
        break;
      }

      // optional int32 int = 29;
      case 29: {
        if (tag == 232) {
         parse_int:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int__)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_wis;
        break;
      }

      // optional int32 wis = 30;
      case 30: {
        if (tag == 240) {
         parse_wis:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wis_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_cha;
        break;
      }

      // optional int32 cha = 31;
      case 31: {
        if (tag == 248) {
         parse_cha:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cha_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_haircolor;
        break;
      }

      // optional int32 haircolor = 32;
      case 32: {
        if (tag == 256) {
         parse_haircolor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &haircolor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_beardcolor;
        break;
      }

      // optional int32 beardcolor = 33;
      case 33: {
        if (tag == 264) {
         parse_beardcolor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beardcolor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_eyecolor1;
        break;
      }

      // optional int32 eyecolor1 = 34;
      case 34: {
        if (tag == 272) {
         parse_eyecolor1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eyecolor1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_eyecolor2;
        break;
      }

      // optional int32 eyecolor2 = 35;
      case 35: {
        if (tag == 280) {
         parse_eyecolor2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eyecolor2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_door_db_id;
        break;
      }

      // optional uint32 door_db_id = 100;
      case 100: {
        if (tag == 800) {
         parse_door_db_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_db_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(808)) goto parse_door_id;
        break;
      }

      // optional uint32 door_id = 101;
      case 101: {
        if (tag == 808) {
         parse_door_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_door_name;
        break;
      }

      // optional string door_name = 103;
      case 103: {
        if (tag == 826) {
         parse_door_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_door_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->door_name().data(), this->door_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.Entity.door_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(832)) goto parse_door_incline;
        break;
      }

      // optional int32 door_incline = 104;
      case 104: {
        if (tag == 832) {
         parse_door_incline:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_incline_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(840)) goto parse_door_opentype;
        break;
      }

      // optional uint32 door_opentype = 105;
      case 105: {
        if (tag == 840) {
         parse_door_opentype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_opentype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(848)) goto parse_door_guild_id;
        break;
      }

      // optional uint32 door_guild_id = 106;
      case 106: {
        if (tag == 848) {
         parse_door_guild_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_guild_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(856)) goto parse_door_lockpick;
        break;
      }

      // optional uint32 door_lockpick = 107;
      case 107: {
        if (tag == 856) {
         parse_door_lockpick:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_lockpick_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(864)) goto parse_door_keyitem;
        break;
      }

      // optional uint32 door_keyitem = 108;
      case 108: {
        if (tag == 864) {
         parse_door_keyitem:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_keyitem_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(872)) goto parse_door_nokeyring;
        break;
      }

      // optional uint32 door_nokeyring = 109;
      case 109: {
        if (tag == 872) {
         parse_door_nokeyring:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_nokeyring_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(880)) goto parse_door_trigger_door_id;
        break;
      }

      // optional uint32 door_trigger_door_id = 110;
      case 110: {
        if (tag == 880) {
         parse_door_trigger_door_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_trigger_door_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(888)) goto parse_door_trigger_type;
        break;
      }

      // optional uint32 door_trigger_type = 111;
      case 111: {
        if (tag == 888) {
         parse_door_trigger_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_trigger_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(896)) goto parse_door_param;
        break;
      }

      // optional uint32 door_param = 112;
      case 112: {
        if (tag == 896) {
         parse_door_param:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_param_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(904)) goto parse_door_invert_state;
        break;
      }

      // optional int32 door_invert_state = 113;
      case 113: {
        if (tag == 904) {
         parse_door_invert_state:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_invert_state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(912)) goto parse_door_disable_timer;
        break;
      }

      // optional bool door_disable_timer = 114;
      case 114: {
        if (tag == 912) {
         parse_door_disable_timer:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &door_disable_timer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(920)) goto parse_door_is_open;
        break;
      }

      // optional bool door_is_open = 115;
      case 115: {
        if (tag == 920) {
         parse_door_is_open:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &door_is_open_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(952)) goto parse_door_is_ldon;
        break;
      }

      // optional uint32 door_is_ldon = 119;
      case 119: {
        if (tag == 952) {
         parse_door_is_ldon:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_is_ldon_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(960)) goto parse_door_client_version_mask;
        break;
      }

      // optional uint32 door_client_version_mask = 120;
      case 120: {
        if (tag == 960) {
         parse_door_client_version_mask:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &door_client_version_mask_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Entity)
  // optional int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .eqproto.EntityType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional int32 hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // optional int32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional .eqproto.Position position = 6;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->position_, output);
  }

  // optional int32 race = 7;
  if (this->race() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->race(), output);
  }

  // optional int32 class = 8;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->class_(), output);
  }

  // optional int32 max_hp = 9;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->max_hp(), output);
  }

  // optional int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->spawn_timestamp(), output);
  }

  // optional string lastname = 13;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.lastname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->lastname(), output);
  }

  // optional .eqproto.GenderType gender = 14;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->gender(), output);
  }

  // optional .eqproto.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->bodytype(), output);
  }

  // optional .eqproto.DeityType deity = 16;
  if (this->deity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->deity(), output);
  }

  // optional uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->npctype_id(), output);
  }

  // optional float size = 18;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->size(), output);
  }

  // optional float runspeed = 19;
  if (this->runspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->runspeed(), output);
  }

  // optional int32 texture = 21;
  if (this->texture() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->texture(), output);
  }

  // optional int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->helmtexture(), output);
  }

  // optional int32 ac = 23;
  if (this->ac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->ac(), output);
  }

  // optional int32 atk = 24;
  if (this->atk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->atk(), output);
  }

  // optional int32 str = 25;
  if (this->str() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->str(), output);
  }

  // optional int32 sta = 26;
  if (this->sta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->sta(), output);
  }

  // optional int32 dex = 27;
  if (this->dex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dex(), output);
  }

  // optional int32 agi = 28;
  if (this->agi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->agi(), output);
  }

  // optional int32 int = 29;
  if (this->int_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->int_(), output);
  }

  // optional int32 wis = 30;
  if (this->wis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->wis(), output);
  }

  // optional int32 cha = 31;
  if (this->cha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->cha(), output);
  }

  // optional int32 haircolor = 32;
  if (this->haircolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->haircolor(), output);
  }

  // optional int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->beardcolor(), output);
  }

  // optional int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->eyecolor1(), output);
  }

  // optional int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->eyecolor2(), output);
  }

  // optional uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(100, this->door_db_id(), output);
  }

  // optional uint32 door_id = 101;
  if (this->door_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(101, this->door_id(), output);
  }

  // optional string door_name = 103;
  if (this->door_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->door_name().data(), this->door_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.door_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      103, this->door_name(), output);
  }

  // optional int32 door_incline = 104;
  if (this->door_incline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(104, this->door_incline(), output);
  }

  // optional uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(105, this->door_opentype(), output);
  }

  // optional uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(106, this->door_guild_id(), output);
  }

  // optional uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(107, this->door_lockpick(), output);
  }

  // optional uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(108, this->door_keyitem(), output);
  }

  // optional uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(109, this->door_nokeyring(), output);
  }

  // optional uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(110, this->door_trigger_door_id(), output);
  }

  // optional uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(111, this->door_trigger_type(), output);
  }

  // optional uint32 door_param = 112;
  if (this->door_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(112, this->door_param(), output);
  }

  // optional int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(113, this->door_invert_state(), output);
  }

  // optional bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(114, this->door_disable_timer(), output);
  }

  // optional bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(115, this->door_is_open(), output);
  }

  // optional uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(119, this->door_is_ldon(), output);
  }

  // optional uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(120, this->door_client_version_mask(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Entity)
}

::google::protobuf::uint8* Entity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Entity)
  // optional int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .eqproto.EntityType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional int32 hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // optional int32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional .eqproto.Position position = 6;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->position_, false, target);
  }

  // optional int32 race = 7;
  if (this->race() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->race(), target);
  }

  // optional int32 class = 8;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->class_(), target);
  }

  // optional int32 max_hp = 9;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->max_hp(), target);
  }

  // optional int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->spawn_timestamp(), target);
  }

  // optional string lastname = 13;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.lastname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->lastname(), target);
  }

  // optional .eqproto.GenderType gender = 14;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->gender(), target);
  }

  // optional .eqproto.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->bodytype(), target);
  }

  // optional .eqproto.DeityType deity = 16;
  if (this->deity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->deity(), target);
  }

  // optional uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->npctype_id(), target);
  }

  // optional float size = 18;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->size(), target);
  }

  // optional float runspeed = 19;
  if (this->runspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->runspeed(), target);
  }

  // optional int32 texture = 21;
  if (this->texture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->texture(), target);
  }

  // optional int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->helmtexture(), target);
  }

  // optional int32 ac = 23;
  if (this->ac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->ac(), target);
  }

  // optional int32 atk = 24;
  if (this->atk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->atk(), target);
  }

  // optional int32 str = 25;
  if (this->str() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->str(), target);
  }

  // optional int32 sta = 26;
  if (this->sta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->sta(), target);
  }

  // optional int32 dex = 27;
  if (this->dex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dex(), target);
  }

  // optional int32 agi = 28;
  if (this->agi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->agi(), target);
  }

  // optional int32 int = 29;
  if (this->int_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->int_(), target);
  }

  // optional int32 wis = 30;
  if (this->wis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->wis(), target);
  }

  // optional int32 cha = 31;
  if (this->cha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->cha(), target);
  }

  // optional int32 haircolor = 32;
  if (this->haircolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->haircolor(), target);
  }

  // optional int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->beardcolor(), target);
  }

  // optional int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->eyecolor1(), target);
  }

  // optional int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->eyecolor2(), target);
  }

  // optional uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(100, this->door_db_id(), target);
  }

  // optional uint32 door_id = 101;
  if (this->door_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(101, this->door_id(), target);
  }

  // optional string door_name = 103;
  if (this->door_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->door_name().data(), this->door_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.Entity.door_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->door_name(), target);
  }

  // optional int32 door_incline = 104;
  if (this->door_incline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(104, this->door_incline(), target);
  }

  // optional uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(105, this->door_opentype(), target);
  }

  // optional uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(106, this->door_guild_id(), target);
  }

  // optional uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(107, this->door_lockpick(), target);
  }

  // optional uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(108, this->door_keyitem(), target);
  }

  // optional uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(109, this->door_nokeyring(), target);
  }

  // optional uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(110, this->door_trigger_door_id(), target);
  }

  // optional uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(111, this->door_trigger_type(), target);
  }

  // optional uint32 door_param = 112;
  if (this->door_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(112, this->door_param(), target);
  }

  // optional int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(113, this->door_invert_state(), target);
  }

  // optional bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(114, this->door_disable_timer(), target);
  }

  // optional bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(115, this->door_is_open(), target);
  }

  // optional uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(119, this->door_is_ldon(), target);
  }

  // optional uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(120, this->door_client_version_mask(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Entity)
  return target;
}

size_t Entity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Entity)
  size_t total_size = 0;

  // optional int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .eqproto.EntityType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int32 hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // optional int32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional .eqproto.Position position = 6;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // optional int32 race = 7;
  if (this->race() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->race());
  }

  // optional int32 class = 8;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->class_());
  }

  // optional int32 max_hp = 9;
  if (this->max_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_hp());
  }

  // optional int64 spawn_timestamp = 10;
  if (this->spawn_timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->spawn_timestamp());
  }

  // optional string lastname = 13;
  if (this->lastname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // optional .eqproto.GenderType gender = 14;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
  }

  // optional .eqproto.BodyType bodytype = 15;
  if (this->bodytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bodytype());
  }

  // optional .eqproto.DeityType deity = 16;
  if (this->deity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deity());
  }

  // optional uint32 npctype_id = 17;
  if (this->npctype_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npctype_id());
  }

  // optional float size = 18;
  if (this->size() != 0) {
    total_size += 2 + 4;
  }

  // optional float runspeed = 19;
  if (this->runspeed() != 0) {
    total_size += 2 + 4;
  }

  // optional int32 texture = 21;
  if (this->texture() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->texture());
  }

  // optional int32 helmtexture = 22;
  if (this->helmtexture() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->helmtexture());
  }

  // optional int32 ac = 23;
  if (this->ac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ac());
  }

  // optional int32 atk = 24;
  if (this->atk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->atk());
  }

  // optional int32 str = 25;
  if (this->str() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->str());
  }

  // optional int32 sta = 26;
  if (this->sta() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sta());
  }

  // optional int32 dex = 27;
  if (this->dex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dex());
  }

  // optional int32 agi = 28;
  if (this->agi() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->agi());
  }

  // optional int32 int = 29;
  if (this->int_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int_());
  }

  // optional int32 wis = 30;
  if (this->wis() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wis());
  }

  // optional int32 cha = 31;
  if (this->cha() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cha());
  }

  // optional int32 haircolor = 32;
  if (this->haircolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->haircolor());
  }

  // optional int32 beardcolor = 33;
  if (this->beardcolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beardcolor());
  }

  // optional int32 eyecolor1 = 34;
  if (this->eyecolor1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eyecolor1());
  }

  // optional int32 eyecolor2 = 35;
  if (this->eyecolor2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eyecolor2());
  }

  // optional uint32 door_db_id = 100;
  if (this->door_db_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_db_id());
  }

  // optional uint32 door_id = 101;
  if (this->door_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_id());
  }

  // optional string door_name = 103;
  if (this->door_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->door_name());
  }

  // optional int32 door_incline = 104;
  if (this->door_incline() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->door_incline());
  }

  // optional uint32 door_opentype = 105;
  if (this->door_opentype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_opentype());
  }

  // optional uint32 door_guild_id = 106;
  if (this->door_guild_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_guild_id());
  }

  // optional uint32 door_lockpick = 107;
  if (this->door_lockpick() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_lockpick());
  }

  // optional uint32 door_keyitem = 108;
  if (this->door_keyitem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_keyitem());
  }

  // optional uint32 door_nokeyring = 109;
  if (this->door_nokeyring() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_nokeyring());
  }

  // optional uint32 door_trigger_door_id = 110;
  if (this->door_trigger_door_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_trigger_door_id());
  }

  // optional uint32 door_trigger_type = 111;
  if (this->door_trigger_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_trigger_type());
  }

  // optional uint32 door_param = 112;
  if (this->door_param() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_param());
  }

  // optional int32 door_invert_state = 113;
  if (this->door_invert_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->door_invert_state());
  }

  // optional bool door_disable_timer = 114;
  if (this->door_disable_timer() != 0) {
    total_size += 2 + 1;
  }

  // optional bool door_is_open = 115;
  if (this->door_is_open() != 0) {
    total_size += 2 + 1;
  }

  // optional uint32 door_is_ldon = 119;
  if (this->door_is_ldon() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_is_ldon());
  }

  // optional uint32 door_client_version_mask = 120;
  if (this->door_client_version_mask() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->door_client_version_mask());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Entity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Entity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Entity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Entity)
    UnsafeMergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Entity)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Entity::UnsafeMergeFrom(const Entity& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.has_position()) {
    mutable_position()->::eqproto::Position::MergeFrom(from.position());
  }
  if (from.race() != 0) {
    set_race(from.race());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
  if (from.spawn_timestamp() != 0) {
    set_spawn_timestamp(from.spawn_timestamp());
  }
  if (from.lastname().size() > 0) {
    set_lastname(from.lastname());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.bodytype() != 0) {
    set_bodytype(from.bodytype());
  }
  if (from.deity() != 0) {
    set_deity(from.deity());
  }
  if (from.npctype_id() != 0) {
    set_npctype_id(from.npctype_id());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.runspeed() != 0) {
    set_runspeed(from.runspeed());
  }
  if (from.texture() != 0) {
    set_texture(from.texture());
  }
  if (from.helmtexture() != 0) {
    set_helmtexture(from.helmtexture());
  }
  if (from.ac() != 0) {
    set_ac(from.ac());
  }
  if (from.atk() != 0) {
    set_atk(from.atk());
  }
  if (from.str() != 0) {
    set_str(from.str());
  }
  if (from.sta() != 0) {
    set_sta(from.sta());
  }
  if (from.dex() != 0) {
    set_dex(from.dex());
  }
  if (from.agi() != 0) {
    set_agi(from.agi());
  }
  if (from.int_() != 0) {
    set_int_(from.int_());
  }
  if (from.wis() != 0) {
    set_wis(from.wis());
  }
  if (from.cha() != 0) {
    set_cha(from.cha());
  }
  if (from.haircolor() != 0) {
    set_haircolor(from.haircolor());
  }
  if (from.beardcolor() != 0) {
    set_beardcolor(from.beardcolor());
  }
  if (from.eyecolor1() != 0) {
    set_eyecolor1(from.eyecolor1());
  }
  if (from.eyecolor2() != 0) {
    set_eyecolor2(from.eyecolor2());
  }
  if (from.door_db_id() != 0) {
    set_door_db_id(from.door_db_id());
  }
  if (from.door_id() != 0) {
    set_door_id(from.door_id());
  }
  if (from.door_name().size() > 0) {
    set_door_name(from.door_name());
  }
  if (from.door_incline() != 0) {
    set_door_incline(from.door_incline());
  }
  if (from.door_opentype() != 0) {
    set_door_opentype(from.door_opentype());
  }
  if (from.door_guild_id() != 0) {
    set_door_guild_id(from.door_guild_id());
  }
  if (from.door_lockpick() != 0) {
    set_door_lockpick(from.door_lockpick());
  }
  if (from.door_keyitem() != 0) {
    set_door_keyitem(from.door_keyitem());
  }
  if (from.door_nokeyring() != 0) {
    set_door_nokeyring(from.door_nokeyring());
  }
  if (from.door_trigger_door_id() != 0) {
    set_door_trigger_door_id(from.door_trigger_door_id());
  }
  if (from.door_trigger_type() != 0) {
    set_door_trigger_type(from.door_trigger_type());
  }
  if (from.door_param() != 0) {
    set_door_param(from.door_param());
  }
  if (from.door_invert_state() != 0) {
    set_door_invert_state(from.door_invert_state());
  }
  if (from.door_disable_timer() != 0) {
    set_door_disable_timer(from.door_disable_timer());
  }
  if (from.door_is_open() != 0) {
    set_door_is_open(from.door_is_open());
  }
  if (from.door_is_ldon() != 0) {
    set_door_is_ldon(from.door_is_ldon());
  }
  if (from.door_client_version_mask() != 0) {
    set_door_client_version_mask(from.door_client_version_mask());
  }
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Entity)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Entity::IsInitialized() const {

  return true;
}

void Entity::Swap(Entity* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entity temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Entity::UnsafeArenaSwap(Entity* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entity::InternalSwap(Entity* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(hp_, other->hp_);
  std::swap(level_, other->level_);
  std::swap(position_, other->position_);
  std::swap(race_, other->race_);
  std::swap(class__, other->class__);
  std::swap(max_hp_, other->max_hp_);
  std::swap(spawn_timestamp_, other->spawn_timestamp_);
  lastname_.Swap(&other->lastname_);
  std::swap(gender_, other->gender_);
  std::swap(bodytype_, other->bodytype_);
  std::swap(deity_, other->deity_);
  std::swap(npctype_id_, other->npctype_id_);
  std::swap(size_, other->size_);
  std::swap(runspeed_, other->runspeed_);
  std::swap(texture_, other->texture_);
  std::swap(helmtexture_, other->helmtexture_);
  std::swap(ac_, other->ac_);
  std::swap(atk_, other->atk_);
  std::swap(str_, other->str_);
  std::swap(sta_, other->sta_);
  std::swap(dex_, other->dex_);
  std::swap(agi_, other->agi_);
  std::swap(int__, other->int__);
  std::swap(wis_, other->wis_);
  std::swap(cha_, other->cha_);
  std::swap(haircolor_, other->haircolor_);
  std::swap(beardcolor_, other->beardcolor_);
  std::swap(eyecolor1_, other->eyecolor1_);
  std::swap(eyecolor2_, other->eyecolor2_);
  std::swap(door_db_id_, other->door_db_id_);
  std::swap(door_id_, other->door_id_);
  door_name_.Swap(&other->door_name_);
  std::swap(door_incline_, other->door_incline_);
  std::swap(door_opentype_, other->door_opentype_);
  std::swap(door_guild_id_, other->door_guild_id_);
  std::swap(door_lockpick_, other->door_lockpick_);
  std::swap(door_keyitem_, other->door_keyitem_);
  std::swap(door_nokeyring_, other->door_nokeyring_);
  std::swap(door_trigger_door_id_, other->door_trigger_door_id_);
  std::swap(door_trigger_type_, other->door_trigger_type_);
  std::swap(door_param_, other->door_param_);
  std::swap(door_invert_state_, other->door_invert_state_);
  std::swap(door_disable_timer_, other->door_disable_timer_);
  std::swap(door_is_open_, other->door_is_open_);
  std::swap(door_is_ldon_, other->door_is_ldon_);
  std::swap(door_client_version_mask_, other->door_client_version_mask_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Entity_descriptor_;
  metadata.reflection = Entity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entity

// optional int32 id = 1;
void Entity::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Entity::id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.id)
  return id_;
}
void Entity::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.id)
}

// optional string name = 2;
void Entity::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Entity::name() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Entity::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.Entity.name)
}
void Entity::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.Entity.name)
}
void Entity::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.Entity.name)
}
::std::string* Entity::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::release_name() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.Entity.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Entity::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.name)
}
void Entity::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.Entity.name)
}

// optional .eqproto.EntityType type = 3;
void Entity::clear_type() {
  type_ = 0;
}
::eqproto::EntityType Entity::type() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.type)
  return static_cast< ::eqproto::EntityType >(type_);
}
void Entity::set_type(::eqproto::EntityType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.type)
}

// optional int32 hp = 4;
void Entity::clear_hp() {
  hp_ = 0;
}
::google::protobuf::int32 Entity::hp() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.hp)
  return hp_;
}
void Entity::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.hp)
}

// optional int32 level = 5;
void Entity::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 Entity::level() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.level)
  return level_;
}
void Entity::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.level)
}

// optional .eqproto.Position position = 6;
bool Entity::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void Entity::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::eqproto::Position& Entity::position() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.position)
  return position_ != NULL ? *position_
                         : *::eqproto::Position::internal_default_instance();
}
::eqproto::Position* Entity::mutable_position() {
  
  if (position_ == NULL) {
    _slow_mutable_position();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.position)
  return position_;
}
::eqproto::Position* Entity::release_position() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.position)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::eqproto::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
 void Entity::set_allocated_position(::eqproto::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.position)
}

// optional int32 race = 7;
void Entity::clear_race() {
  race_ = 0;
}
::google::protobuf::int32 Entity::race() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.race)
  return race_;
}
void Entity::set_race(::google::protobuf::int32 value) {
  
  race_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.race)
}

// optional int32 class = 8;
void Entity::clear_class_() {
  class__ = 0;
}
::google::protobuf::int32 Entity::class_() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.class)
  return class__;
}
void Entity::set_class_(::google::protobuf::int32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.class)
}

// optional int32 max_hp = 9;
void Entity::clear_max_hp() {
  max_hp_ = 0;
}
::google::protobuf::int32 Entity::max_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.max_hp)
  return max_hp_;
}
void Entity::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.max_hp)
}

// optional int64 spawn_timestamp = 10;
void Entity::clear_spawn_timestamp() {
  spawn_timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Entity::spawn_timestamp() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.spawn_timestamp)
  return spawn_timestamp_;
}
void Entity::set_spawn_timestamp(::google::protobuf::int64 value) {
  
  spawn_timestamp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.spawn_timestamp)
}

// optional string lastname = 13;
void Entity::clear_lastname() {
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Entity::lastname() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.lastname)
  return lastname_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Entity::set_lastname(const ::std::string& value) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.Entity.lastname)
}
void Entity::set_lastname(const char* value) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.Entity.lastname)
}
void Entity::set_lastname(const char* value,
    size_t size) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.Entity.lastname)
}
::std::string* Entity::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.lastname)
  return lastname_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::release_lastname() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.lastname)
  
  return lastname_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::unsafe_arena_release_lastname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.Entity.lastname)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return lastname_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Entity::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.lastname)
}
void Entity::unsafe_arena_set_allocated_lastname(
    ::std::string* lastname) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      lastname, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.Entity.lastname)
}

// optional .eqproto.GenderType gender = 14;
void Entity::clear_gender() {
  gender_ = 0;
}
::eqproto::GenderType Entity::gender() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.gender)
  return static_cast< ::eqproto::GenderType >(gender_);
}
void Entity::set_gender(::eqproto::GenderType value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.gender)
}

// optional .eqproto.BodyType bodytype = 15;
void Entity::clear_bodytype() {
  bodytype_ = 0;
}
::eqproto::BodyType Entity::bodytype() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.bodytype)
  return static_cast< ::eqproto::BodyType >(bodytype_);
}
void Entity::set_bodytype(::eqproto::BodyType value) {
  
  bodytype_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.bodytype)
}

// optional .eqproto.DeityType deity = 16;
void Entity::clear_deity() {
  deity_ = 0;
}
::eqproto::DeityType Entity::deity() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.deity)
  return static_cast< ::eqproto::DeityType >(deity_);
}
void Entity::set_deity(::eqproto::DeityType value) {
  
  deity_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.deity)
}

// optional uint32 npctype_id = 17;
void Entity::clear_npctype_id() {
  npctype_id_ = 0u;
}
::google::protobuf::uint32 Entity::npctype_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.npctype_id)
  return npctype_id_;
}
void Entity::set_npctype_id(::google::protobuf::uint32 value) {
  
  npctype_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.npctype_id)
}

// optional float size = 18;
void Entity::clear_size() {
  size_ = 0;
}
float Entity::size() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.size)
  return size_;
}
void Entity::set_size(float value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.size)
}

// optional float runspeed = 19;
void Entity::clear_runspeed() {
  runspeed_ = 0;
}
float Entity::runspeed() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.runspeed)
  return runspeed_;
}
void Entity::set_runspeed(float value) {
  
  runspeed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.runspeed)
}

// optional int32 texture = 21;
void Entity::clear_texture() {
  texture_ = 0;
}
::google::protobuf::int32 Entity::texture() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.texture)
  return texture_;
}
void Entity::set_texture(::google::protobuf::int32 value) {
  
  texture_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.texture)
}

// optional int32 helmtexture = 22;
void Entity::clear_helmtexture() {
  helmtexture_ = 0;
}
::google::protobuf::int32 Entity::helmtexture() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.helmtexture)
  return helmtexture_;
}
void Entity::set_helmtexture(::google::protobuf::int32 value) {
  
  helmtexture_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.helmtexture)
}

// optional int32 ac = 23;
void Entity::clear_ac() {
  ac_ = 0;
}
::google::protobuf::int32 Entity::ac() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.ac)
  return ac_;
}
void Entity::set_ac(::google::protobuf::int32 value) {
  
  ac_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.ac)
}

// optional int32 atk = 24;
void Entity::clear_atk() {
  atk_ = 0;
}
::google::protobuf::int32 Entity::atk() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.atk)
  return atk_;
}
void Entity::set_atk(::google::protobuf::int32 value) {
  
  atk_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.atk)
}

// optional int32 str = 25;
void Entity::clear_str() {
  str_ = 0;
}
::google::protobuf::int32 Entity::str() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.str)
  return str_;
}
void Entity::set_str(::google::protobuf::int32 value) {
  
  str_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.str)
}

// optional int32 sta = 26;
void Entity::clear_sta() {
  sta_ = 0;
}
::google::protobuf::int32 Entity::sta() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.sta)
  return sta_;
}
void Entity::set_sta(::google::protobuf::int32 value) {
  
  sta_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.sta)
}

// optional int32 dex = 27;
void Entity::clear_dex() {
  dex_ = 0;
}
::google::protobuf::int32 Entity::dex() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.dex)
  return dex_;
}
void Entity::set_dex(::google::protobuf::int32 value) {
  
  dex_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.dex)
}

// optional int32 agi = 28;
void Entity::clear_agi() {
  agi_ = 0;
}
::google::protobuf::int32 Entity::agi() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.agi)
  return agi_;
}
void Entity::set_agi(::google::protobuf::int32 value) {
  
  agi_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.agi)
}

// optional int32 int = 29;
void Entity::clear_int_() {
  int__ = 0;
}
::google::protobuf::int32 Entity::int_() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.int)
  return int__;
}
void Entity::set_int_(::google::protobuf::int32 value) {
  
  int__ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.int)
}

// optional int32 wis = 30;
void Entity::clear_wis() {
  wis_ = 0;
}
::google::protobuf::int32 Entity::wis() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.wis)
  return wis_;
}
void Entity::set_wis(::google::protobuf::int32 value) {
  
  wis_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.wis)
}

// optional int32 cha = 31;
void Entity::clear_cha() {
  cha_ = 0;
}
::google::protobuf::int32 Entity::cha() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.cha)
  return cha_;
}
void Entity::set_cha(::google::protobuf::int32 value) {
  
  cha_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.cha)
}

// optional int32 haircolor = 32;
void Entity::clear_haircolor() {
  haircolor_ = 0;
}
::google::protobuf::int32 Entity::haircolor() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.haircolor)
  return haircolor_;
}
void Entity::set_haircolor(::google::protobuf::int32 value) {
  
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.haircolor)
}

// optional int32 beardcolor = 33;
void Entity::clear_beardcolor() {
  beardcolor_ = 0;
}
::google::protobuf::int32 Entity::beardcolor() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.beardcolor)
  return beardcolor_;
}
void Entity::set_beardcolor(::google::protobuf::int32 value) {
  
  beardcolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.beardcolor)
}

// optional int32 eyecolor1 = 34;
void Entity::clear_eyecolor1() {
  eyecolor1_ = 0;
}
::google::protobuf::int32 Entity::eyecolor1() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.eyecolor1)
  return eyecolor1_;
}
void Entity::set_eyecolor1(::google::protobuf::int32 value) {
  
  eyecolor1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.eyecolor1)
}

// optional int32 eyecolor2 = 35;
void Entity::clear_eyecolor2() {
  eyecolor2_ = 0;
}
::google::protobuf::int32 Entity::eyecolor2() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.eyecolor2)
  return eyecolor2_;
}
void Entity::set_eyecolor2(::google::protobuf::int32 value) {
  
  eyecolor2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.eyecolor2)
}

// optional uint32 door_db_id = 100;
void Entity::clear_door_db_id() {
  door_db_id_ = 0u;
}
::google::protobuf::uint32 Entity::door_db_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_db_id)
  return door_db_id_;
}
void Entity::set_door_db_id(::google::protobuf::uint32 value) {
  
  door_db_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_db_id)
}

// optional uint32 door_id = 101;
void Entity::clear_door_id() {
  door_id_ = 0u;
}
::google::protobuf::uint32 Entity::door_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_id)
  return door_id_;
}
void Entity::set_door_id(::google::protobuf::uint32 value) {
  
  door_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_id)
}

// optional string door_name = 103;
void Entity::clear_door_name() {
  door_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Entity::door_name() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_name)
  return door_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Entity::set_door_name(const ::std::string& value) {
  
  door_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_name)
}
void Entity::set_door_name(const char* value) {
  
  door_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.Entity.door_name)
}
void Entity::set_door_name(const char* value,
    size_t size) {
  
  door_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.Entity.door_name)
}
::std::string* Entity::mutable_door_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Entity.door_name)
  return door_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::release_door_name() {
  // @@protoc_insertion_point(field_release:eqproto.Entity.door_name)
  
  return door_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Entity::unsafe_arena_release_door_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.Entity.door_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return door_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Entity::set_allocated_door_name(::std::string* door_name) {
  if (door_name != NULL) {
    
  } else {
    
  }
  door_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), door_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.Entity.door_name)
}
void Entity::unsafe_arena_set_allocated_door_name(
    ::std::string* door_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (door_name != NULL) {
    
  } else {
    
  }
  door_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      door_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.Entity.door_name)
}

// optional int32 door_incline = 104;
void Entity::clear_door_incline() {
  door_incline_ = 0;
}
::google::protobuf::int32 Entity::door_incline() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_incline)
  return door_incline_;
}
void Entity::set_door_incline(::google::protobuf::int32 value) {
  
  door_incline_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_incline)
}

// optional uint32 door_opentype = 105;
void Entity::clear_door_opentype() {
  door_opentype_ = 0u;
}
::google::protobuf::uint32 Entity::door_opentype() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_opentype)
  return door_opentype_;
}
void Entity::set_door_opentype(::google::protobuf::uint32 value) {
  
  door_opentype_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_opentype)
}

// optional uint32 door_guild_id = 106;
void Entity::clear_door_guild_id() {
  door_guild_id_ = 0u;
}
::google::protobuf::uint32 Entity::door_guild_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_guild_id)
  return door_guild_id_;
}
void Entity::set_door_guild_id(::google::protobuf::uint32 value) {
  
  door_guild_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_guild_id)
}

// optional uint32 door_lockpick = 107;
void Entity::clear_door_lockpick() {
  door_lockpick_ = 0u;
}
::google::protobuf::uint32 Entity::door_lockpick() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_lockpick)
  return door_lockpick_;
}
void Entity::set_door_lockpick(::google::protobuf::uint32 value) {
  
  door_lockpick_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_lockpick)
}

// optional uint32 door_keyitem = 108;
void Entity::clear_door_keyitem() {
  door_keyitem_ = 0u;
}
::google::protobuf::uint32 Entity::door_keyitem() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_keyitem)
  return door_keyitem_;
}
void Entity::set_door_keyitem(::google::protobuf::uint32 value) {
  
  door_keyitem_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_keyitem)
}

// optional uint32 door_nokeyring = 109;
void Entity::clear_door_nokeyring() {
  door_nokeyring_ = 0u;
}
::google::protobuf::uint32 Entity::door_nokeyring() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_nokeyring)
  return door_nokeyring_;
}
void Entity::set_door_nokeyring(::google::protobuf::uint32 value) {
  
  door_nokeyring_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_nokeyring)
}

// optional uint32 door_trigger_door_id = 110;
void Entity::clear_door_trigger_door_id() {
  door_trigger_door_id_ = 0u;
}
::google::protobuf::uint32 Entity::door_trigger_door_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_trigger_door_id)
  return door_trigger_door_id_;
}
void Entity::set_door_trigger_door_id(::google::protobuf::uint32 value) {
  
  door_trigger_door_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_trigger_door_id)
}

// optional uint32 door_trigger_type = 111;
void Entity::clear_door_trigger_type() {
  door_trigger_type_ = 0u;
}
::google::protobuf::uint32 Entity::door_trigger_type() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_trigger_type)
  return door_trigger_type_;
}
void Entity::set_door_trigger_type(::google::protobuf::uint32 value) {
  
  door_trigger_type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_trigger_type)
}

// optional uint32 door_param = 112;
void Entity::clear_door_param() {
  door_param_ = 0u;
}
::google::protobuf::uint32 Entity::door_param() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_param)
  return door_param_;
}
void Entity::set_door_param(::google::protobuf::uint32 value) {
  
  door_param_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_param)
}

// optional int32 door_invert_state = 113;
void Entity::clear_door_invert_state() {
  door_invert_state_ = 0;
}
::google::protobuf::int32 Entity::door_invert_state() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_invert_state)
  return door_invert_state_;
}
void Entity::set_door_invert_state(::google::protobuf::int32 value) {
  
  door_invert_state_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_invert_state)
}

// optional bool door_disable_timer = 114;
void Entity::clear_door_disable_timer() {
  door_disable_timer_ = false;
}
bool Entity::door_disable_timer() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_disable_timer)
  return door_disable_timer_;
}
void Entity::set_door_disable_timer(bool value) {
  
  door_disable_timer_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_disable_timer)
}

// optional bool door_is_open = 115;
void Entity::clear_door_is_open() {
  door_is_open_ = false;
}
bool Entity::door_is_open() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_is_open)
  return door_is_open_;
}
void Entity::set_door_is_open(bool value) {
  
  door_is_open_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_is_open)
}

// optional uint32 door_is_ldon = 119;
void Entity::clear_door_is_ldon() {
  door_is_ldon_ = 0u;
}
::google::protobuf::uint32 Entity::door_is_ldon() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_is_ldon)
  return door_is_ldon_;
}
void Entity::set_door_is_ldon(::google::protobuf::uint32 value) {
  
  door_is_ldon_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_is_ldon)
}

// optional uint32 door_client_version_mask = 120;
void Entity::clear_door_client_version_mask() {
  door_client_version_mask_ = 0u;
}
::google::protobuf::uint32 Entity::door_client_version_mask() const {
  // @@protoc_insertion_point(field_get:eqproto.Entity.door_client_version_mask)
  return door_client_version_mask_;
}
void Entity::set_door_client_version_mask(::google::protobuf::uint32 value) {
  
  door_client_version_mask_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Entity.door_client_version_mask)
}

inline const Entity* Entity::internal_default_instance() {
  return &Entity_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entities::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entities::Entities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Entities)
}
Entities::Entities(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entities_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Entities)
}

void Entities::InitAsDefaultInstance() {
}

Entities::Entities(const Entities& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Entities)
}

void Entities::SharedCtor() {
  _cached_size_ = 0;
}

Entities::~Entities() {
  // @@protoc_insertion_point(destructor:eqproto.Entities)
  SharedDtor();
}

void Entities::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Entities::ArenaDtor(void* object) {
  Entities* _this = reinterpret_cast< Entities* >(object);
  (void)_this;
}
void Entities::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Entities::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entities::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Entities_descriptor_;
}

const Entities& Entities::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Entities> Entities_default_instance_;

Entities* Entities::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Entities>(arena);
}

void Entities::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Entities)
  entities_.Clear();
}

bool Entities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Entities)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .eqproto.Entity entities = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entities;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Entities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Entities)
  return false;
#undef DO_
}

void Entities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Entities)
  // repeated .eqproto.Entity entities = 1;
  for (unsigned int i = 0, n = this->entities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entities(i), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Entities)
}

::google::protobuf::uint8* Entities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Entities)
  // repeated .eqproto.Entity entities = 1;
  for (unsigned int i = 0, n = this->entities_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entities(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Entities)
  return target;
}

size_t Entities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Entities)
  size_t total_size = 0;

  // repeated .eqproto.Entity entities = 1;
  {
    unsigned int count = this->entities_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entities(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Entities)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Entities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Entities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Entities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Entities)
    UnsafeMergeFrom(*source);
  }
}

void Entities::MergeFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Entities)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Entities::UnsafeMergeFrom(const Entities& from) {
  GOOGLE_DCHECK(&from != this);
  entities_.MergeFrom(from.entities_);
}

void Entities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Entities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entities::CopyFrom(const Entities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Entities)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Entities::IsInitialized() const {

  return true;
}

void Entities::Swap(Entities* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Entities temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Entities::UnsafeArenaSwap(Entities* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Entities::InternalSwap(Entities* other) {
  entities_.UnsafeArenaSwap(&other->entities_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entities::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Entities_descriptor_;
  metadata.reflection = Entities_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entities

// repeated .eqproto.Entity entities = 1;
int Entities::entities_size() const {
  return entities_.size();
}
void Entities::clear_entities() {
  entities_.Clear();
}
const ::eqproto::Entity& Entities::entities(int index) const {
  // @@protoc_insertion_point(field_get:eqproto.Entities.entities)
  return entities_.Get(index);
}
::eqproto::Entity* Entities::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:eqproto.Entities.entities)
  return entities_.Mutable(index);
}
::eqproto::Entity* Entities::add_entities() {
  // @@protoc_insertion_point(field_add:eqproto.Entities.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::eqproto::Entity >*
Entities::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:eqproto.Entities.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::eqproto::Entity >&
Entities::entities() const {
  // @@protoc_insertion_point(field_list:eqproto.Entities.entities)
  return entities_;
}

inline const Entities* Entities::internal_default_instance() {
  return &Entities_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
const int Position::kHFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Position)
}
Position::Position(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Position)
}

void Position::InitAsDefaultInstance() {
}

Position::Position(const Position& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Position)
}

void Position::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&h_) -
    reinterpret_cast<char*>(&x_) + sizeof(h_));
  _cached_size_ = 0;
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:eqproto.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Position::ArenaDtor(void* object) {
  Position* _this = reinterpret_cast< Position* >(object);
  (void)_this;
}
void Position::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Position_descriptor_;
}

const Position& Position::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Position> Position_default_instance_;

Position* Position::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Position>(arena);
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Position)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Position, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Position*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, h_);

#undef ZR_HELPER_
#undef ZR_

}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // optional float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_h;
        break;
      }

      // optional float h = 4;
      case 4: {
        if (tag == 37) {
         parse_h:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Position)
  // optional float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float h = 4;
  if (this->h() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->h(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Position)
  // optional float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float h = 4;
  if (this->h() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->h(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Position)
  size_t total_size = 0;

  // optional float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // optional float h = 4;
  if (this->h() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Position)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Position)
    UnsafeMergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Position)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Position::UnsafeMergeFrom(const Position& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Position)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Position::IsInitialized() const {

  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Position temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Position::UnsafeArenaSwap(Position* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(h_, other->h_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Position_descriptor_;
  metadata.reflection = Position_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// optional float x = 1;
void Position::clear_x() {
  x_ = 0;
}
float Position::x() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.x)
  return x_;
}
void Position::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.x)
}

// optional float y = 2;
void Position::clear_y() {
  y_ = 0;
}
float Position::y() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.y)
  return y_;
}
void Position::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.y)
}

// optional float z = 3;
void Position::clear_z() {
  z_ = 0;
}
float Position::z() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.z)
  return z_;
}
void Position::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.z)
}

// optional float h = 4;
void Position::clear_h() {
  h_ = 0;
}
float Position::h() const {
  // @@protoc_insertion_point(field_get:eqproto.Position.h)
  return h_;
}
void Position::set_h(float value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Position.h)
}

inline const Position* Position::internal_default_instance() {
  return &Position_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TextureProfile::_slow_mutable_head() {
  head_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_head() {
  if (head_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*head_);
    head_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_head() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Head)
  
  ::eqproto::Texture* temp = head_;
  head_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_head(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** head) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*head) == NULL) {
      message_arena->Own(*head);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*head)) {
      ::eqproto::Texture* new_head = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_head->CopyFrom(**head);
      *head = new_head;
    }
}
void TextureProfile::unsafe_arena_set_allocated_head(
    ::eqproto::Texture* head) {
  if (GetArenaNoVirtual() == NULL) {
    delete head_;
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Head)
}
void TextureProfile::_slow_mutable_chest() {
  chest_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_chest() {
  if (chest_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*chest_);
    chest_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_chest() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Chest)
  
  ::eqproto::Texture* temp = chest_;
  chest_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_chest(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** chest) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*chest) == NULL) {
      message_arena->Own(*chest);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*chest)) {
      ::eqproto::Texture* new_chest = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_chest->CopyFrom(**chest);
      *chest = new_chest;
    }
}
void TextureProfile::unsafe_arena_set_allocated_chest(
    ::eqproto::Texture* chest) {
  if (GetArenaNoVirtual() == NULL) {
    delete chest_;
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Chest)
}
void TextureProfile::_slow_mutable_arms() {
  arms_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_arms() {
  if (arms_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*arms_);
    arms_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_arms() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Arms)
  
  ::eqproto::Texture* temp = arms_;
  arms_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_arms(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** arms) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*arms) == NULL) {
      message_arena->Own(*arms);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*arms)) {
      ::eqproto::Texture* new_arms = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_arms->CopyFrom(**arms);
      *arms = new_arms;
    }
}
void TextureProfile::unsafe_arena_set_allocated_arms(
    ::eqproto::Texture* arms) {
  if (GetArenaNoVirtual() == NULL) {
    delete arms_;
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Arms)
}
void TextureProfile::_slow_mutable_wrist() {
  wrist_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_wrist() {
  if (wrist_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*wrist_);
    wrist_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_wrist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Wrist)
  
  ::eqproto::Texture* temp = wrist_;
  wrist_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_wrist(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** wrist) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*wrist) == NULL) {
      message_arena->Own(*wrist);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*wrist)) {
      ::eqproto::Texture* new_wrist = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_wrist->CopyFrom(**wrist);
      *wrist = new_wrist;
    }
}
void TextureProfile::unsafe_arena_set_allocated_wrist(
    ::eqproto::Texture* wrist) {
  if (GetArenaNoVirtual() == NULL) {
    delete wrist_;
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Wrist)
}
void TextureProfile::_slow_mutable_hands() {
  hands_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_hands() {
  if (hands_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*hands_);
    hands_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_hands() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Hands)
  
  ::eqproto::Texture* temp = hands_;
  hands_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_hands(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** hands) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*hands) == NULL) {
      message_arena->Own(*hands);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*hands)) {
      ::eqproto::Texture* new_hands = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_hands->CopyFrom(**hands);
      *hands = new_hands;
    }
}
void TextureProfile::unsafe_arena_set_allocated_hands(
    ::eqproto::Texture* hands) {
  if (GetArenaNoVirtual() == NULL) {
    delete hands_;
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Hands)
}
void TextureProfile::_slow_mutable_legs() {
  legs_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_legs() {
  if (legs_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*legs_);
    legs_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_legs() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Legs)
  
  ::eqproto::Texture* temp = legs_;
  legs_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_legs(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** legs) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*legs) == NULL) {
      message_arena->Own(*legs);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*legs)) {
      ::eqproto::Texture* new_legs = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_legs->CopyFrom(**legs);
      *legs = new_legs;
    }
}
void TextureProfile::unsafe_arena_set_allocated_legs(
    ::eqproto::Texture* legs) {
  if (GetArenaNoVirtual() == NULL) {
    delete legs_;
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Legs)
}
void TextureProfile::_slow_mutable_feet() {
  feet_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_feet() {
  if (feet_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*feet_);
    feet_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_feet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Feet)
  
  ::eqproto::Texture* temp = feet_;
  feet_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_feet(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** feet) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*feet) == NULL) {
      message_arena->Own(*feet);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*feet)) {
      ::eqproto::Texture* new_feet = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_feet->CopyFrom(**feet);
      *feet = new_feet;
    }
}
void TextureProfile::unsafe_arena_set_allocated_feet(
    ::eqproto::Texture* feet) {
  if (GetArenaNoVirtual() == NULL) {
    delete feet_;
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Feet)
}
void TextureProfile::_slow_mutable_primary() {
  primary_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_primary() {
  if (primary_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*primary_);
    primary_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_primary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Primary)
  
  ::eqproto::Texture* temp = primary_;
  primary_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_primary(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** primary) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*primary) == NULL) {
      message_arena->Own(*primary);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*primary)) {
      ::eqproto::Texture* new_primary = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_primary->CopyFrom(**primary);
      *primary = new_primary;
    }
}
void TextureProfile::unsafe_arena_set_allocated_primary(
    ::eqproto::Texture* primary) {
  if (GetArenaNoVirtual() == NULL) {
    delete primary_;
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Primary)
}
void TextureProfile::_slow_mutable_secondary() {
  secondary_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
      GetArenaNoVirtual());
}
::eqproto::Texture* TextureProfile::_slow_release_secondary() {
  if (secondary_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Texture* temp = new ::eqproto::Texture(*secondary_);
    secondary_ = NULL;
    return temp;
  }
}
::eqproto::Texture* TextureProfile::unsafe_arena_release_secondary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TextureProfile.Secondary)
  
  ::eqproto::Texture* temp = secondary_;
  secondary_ = NULL;
  return temp;
}
void TextureProfile::_slow_set_allocated_secondary(
    ::google::protobuf::Arena* message_arena, ::eqproto::Texture** secondary) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*secondary) == NULL) {
      message_arena->Own(*secondary);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*secondary)) {
      ::eqproto::Texture* new_secondary = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Texture >(
            message_arena);
      new_secondary->CopyFrom(**secondary);
      *secondary = new_secondary;
    }
}
void TextureProfile::unsafe_arena_set_allocated_secondary(
    ::eqproto::Texture* secondary) {
  if (GetArenaNoVirtual() == NULL) {
    delete secondary_;
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TextureProfile.Secondary)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextureProfile::kHeadFieldNumber;
const int TextureProfile::kChestFieldNumber;
const int TextureProfile::kArmsFieldNumber;
const int TextureProfile::kWristFieldNumber;
const int TextureProfile::kHandsFieldNumber;
const int TextureProfile::kLegsFieldNumber;
const int TextureProfile::kFeetFieldNumber;
const int TextureProfile::kPrimaryFieldNumber;
const int TextureProfile::kSecondaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextureProfile::TextureProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.TextureProfile)
}
TextureProfile::TextureProfile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.TextureProfile)
}

void TextureProfile::InitAsDefaultInstance() {
  head_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  chest_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  arms_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  wrist_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  hands_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  legs_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  feet_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  primary_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
  secondary_ = const_cast< ::eqproto::Texture*>(
      ::eqproto::Texture::internal_default_instance());
}

TextureProfile::TextureProfile(const TextureProfile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.TextureProfile)
}

void TextureProfile::SharedCtor() {
  head_ = NULL;
  chest_ = NULL;
  arms_ = NULL;
  wrist_ = NULL;
  hands_ = NULL;
  legs_ = NULL;
  feet_ = NULL;
  primary_ = NULL;
  secondary_ = NULL;
  _cached_size_ = 0;
}

TextureProfile::~TextureProfile() {
  // @@protoc_insertion_point(destructor:eqproto.TextureProfile)
  SharedDtor();
}

void TextureProfile::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TextureProfile_default_instance_.get()) {
    delete head_;
    delete chest_;
    delete arms_;
    delete wrist_;
    delete hands_;
    delete legs_;
    delete feet_;
    delete primary_;
    delete secondary_;
  }
}

void TextureProfile::ArenaDtor(void* object) {
  TextureProfile* _this = reinterpret_cast< TextureProfile* >(object);
  (void)_this;
}
void TextureProfile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TextureProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextureProfile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TextureProfile_descriptor_;
}

const TextureProfile& TextureProfile::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TextureProfile> TextureProfile_default_instance_;

TextureProfile* TextureProfile::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TextureProfile>(arena);
}

void TextureProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.TextureProfile)
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) delete arms_;
  arms_ = NULL;
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) delete wrist_;
  wrist_ = NULL;
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) delete hands_;
  hands_ = NULL;
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) delete legs_;
  legs_ = NULL;
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) delete feet_;
  feet_ = NULL;
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) delete primary_;
  primary_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) delete secondary_;
  secondary_ = NULL;
}

bool TextureProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.TextureProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eqproto.Texture Head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Chest;
        break;
      }

      // optional .eqproto.Texture Chest = 2;
      case 2: {
        if (tag == 18) {
         parse_Chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Arms;
        break;
      }

      // optional .eqproto.Texture Arms = 3;
      case 3: {
        if (tag == 26) {
         parse_Arms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Wrist;
        break;
      }

      // optional .eqproto.Texture Wrist = 4;
      case 4: {
        if (tag == 34) {
         parse_Wrist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wrist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Hands;
        break;
      }

      // optional .eqproto.Texture Hands = 5;
      case 5: {
        if (tag == 42) {
         parse_Hands:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hands()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Legs;
        break;
      }

      // optional .eqproto.Texture Legs = 6;
      case 6: {
        if (tag == 50) {
         parse_Legs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_legs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Feet;
        break;
      }

      // optional .eqproto.Texture Feet = 7;
      case 7: {
        if (tag == 58) {
         parse_Feet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_feet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Primary;
        break;
      }

      // optional .eqproto.Texture Primary = 8;
      case 8: {
        if (tag == 66) {
         parse_Primary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_primary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Secondary;
        break;
      }

      // optional .eqproto.Texture Secondary = 9;
      case 9: {
        if (tag == 74) {
         parse_Secondary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_secondary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.TextureProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.TextureProfile)
  return false;
#undef DO_
}

void TextureProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.TextureProfile)
  // optional .eqproto.Texture Head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // optional .eqproto.Texture Chest = 2;
  if (this->has_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chest_, output);
  }

  // optional .eqproto.Texture Arms = 3;
  if (this->has_arms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->arms_, output);
  }

  // optional .eqproto.Texture Wrist = 4;
  if (this->has_wrist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->wrist_, output);
  }

  // optional .eqproto.Texture Hands = 5;
  if (this->has_hands()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->hands_, output);
  }

  // optional .eqproto.Texture Legs = 6;
  if (this->has_legs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->legs_, output);
  }

  // optional .eqproto.Texture Feet = 7;
  if (this->has_feet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->feet_, output);
  }

  // optional .eqproto.Texture Primary = 8;
  if (this->has_primary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->primary_, output);
  }

  // optional .eqproto.Texture Secondary = 9;
  if (this->has_secondary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->secondary_, output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.TextureProfile)
}

::google::protobuf::uint8* TextureProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.TextureProfile)
  // optional .eqproto.Texture Head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, false, target);
  }

  // optional .eqproto.Texture Chest = 2;
  if (this->has_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chest_, false, target);
  }

  // optional .eqproto.Texture Arms = 3;
  if (this->has_arms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->arms_, false, target);
  }

  // optional .eqproto.Texture Wrist = 4;
  if (this->has_wrist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->wrist_, false, target);
  }

  // optional .eqproto.Texture Hands = 5;
  if (this->has_hands()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->hands_, false, target);
  }

  // optional .eqproto.Texture Legs = 6;
  if (this->has_legs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->legs_, false, target);
  }

  // optional .eqproto.Texture Feet = 7;
  if (this->has_feet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->feet_, false, target);
  }

  // optional .eqproto.Texture Primary = 8;
  if (this->has_primary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->primary_, false, target);
  }

  // optional .eqproto.Texture Secondary = 9;
  if (this->has_secondary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->secondary_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.TextureProfile)
  return target;
}

size_t TextureProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.TextureProfile)
  size_t total_size = 0;

  // optional .eqproto.Texture Head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // optional .eqproto.Texture Chest = 2;
  if (this->has_chest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chest_);
  }

  // optional .eqproto.Texture Arms = 3;
  if (this->has_arms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->arms_);
  }

  // optional .eqproto.Texture Wrist = 4;
  if (this->has_wrist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->wrist_);
  }

  // optional .eqproto.Texture Hands = 5;
  if (this->has_hands()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hands_);
  }

  // optional .eqproto.Texture Legs = 6;
  if (this->has_legs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->legs_);
  }

  // optional .eqproto.Texture Feet = 7;
  if (this->has_feet()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->feet_);
  }

  // optional .eqproto.Texture Primary = 8;
  if (this->has_primary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->primary_);
  }

  // optional .eqproto.Texture Secondary = 9;
  if (this->has_secondary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->secondary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextureProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.TextureProfile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TextureProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextureProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.TextureProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.TextureProfile)
    UnsafeMergeFrom(*source);
  }
}

void TextureProfile::MergeFrom(const TextureProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.TextureProfile)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TextureProfile::UnsafeMergeFrom(const TextureProfile& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_head()) {
    mutable_head()->::eqproto::Texture::MergeFrom(from.head());
  }
  if (from.has_chest()) {
    mutable_chest()->::eqproto::Texture::MergeFrom(from.chest());
  }
  if (from.has_arms()) {
    mutable_arms()->::eqproto::Texture::MergeFrom(from.arms());
  }
  if (from.has_wrist()) {
    mutable_wrist()->::eqproto::Texture::MergeFrom(from.wrist());
  }
  if (from.has_hands()) {
    mutable_hands()->::eqproto::Texture::MergeFrom(from.hands());
  }
  if (from.has_legs()) {
    mutable_legs()->::eqproto::Texture::MergeFrom(from.legs());
  }
  if (from.has_feet()) {
    mutable_feet()->::eqproto::Texture::MergeFrom(from.feet());
  }
  if (from.has_primary()) {
    mutable_primary()->::eqproto::Texture::MergeFrom(from.primary());
  }
  if (from.has_secondary()) {
    mutable_secondary()->::eqproto::Texture::MergeFrom(from.secondary());
  }
}

void TextureProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.TextureProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextureProfile::CopyFrom(const TextureProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.TextureProfile)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TextureProfile::IsInitialized() const {

  return true;
}

void TextureProfile::Swap(TextureProfile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TextureProfile temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TextureProfile::UnsafeArenaSwap(TextureProfile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TextureProfile::InternalSwap(TextureProfile* other) {
  std::swap(head_, other->head_);
  std::swap(chest_, other->chest_);
  std::swap(arms_, other->arms_);
  std::swap(wrist_, other->wrist_);
  std::swap(hands_, other->hands_);
  std::swap(legs_, other->legs_);
  std::swap(feet_, other->feet_);
  std::swap(primary_, other->primary_);
  std::swap(secondary_, other->secondary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextureProfile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TextureProfile_descriptor_;
  metadata.reflection = TextureProfile_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextureProfile

// optional .eqproto.Texture Head = 1;
bool TextureProfile::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void TextureProfile::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::eqproto::Texture& TextureProfile::head() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Head)
  return head_ != NULL ? *head_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_head() {
  
  if (head_ == NULL) {
    _slow_mutable_head();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Head)
  return head_;
}
::eqproto::Texture* TextureProfile::release_head() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Head)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_head();
  } else {
    ::eqproto::Texture* temp = head_;
    head_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_head(::eqproto::Texture* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head != NULL) {
    _slow_set_allocated_head(message_arena, &head);
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Head)
}

// optional .eqproto.Texture Chest = 2;
bool TextureProfile::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
void TextureProfile::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
}
const ::eqproto::Texture& TextureProfile::chest() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Chest)
  return chest_ != NULL ? *chest_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_chest() {
  
  if (chest_ == NULL) {
    _slow_mutable_chest();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Chest)
  return chest_;
}
::eqproto::Texture* TextureProfile::release_chest() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Chest)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_chest();
  } else {
    ::eqproto::Texture* temp = chest_;
    chest_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_chest(::eqproto::Texture* chest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chest_;
  }
  if (chest != NULL) {
    _slow_set_allocated_chest(message_arena, &chest);
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Chest)
}

// optional .eqproto.Texture Arms = 3;
bool TextureProfile::has_arms() const {
  return this != internal_default_instance() && arms_ != NULL;
}
void TextureProfile::clear_arms() {
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) delete arms_;
  arms_ = NULL;
}
const ::eqproto::Texture& TextureProfile::arms() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Arms)
  return arms_ != NULL ? *arms_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_arms() {
  
  if (arms_ == NULL) {
    _slow_mutable_arms();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Arms)
  return arms_;
}
::eqproto::Texture* TextureProfile::release_arms() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Arms)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_arms();
  } else {
    ::eqproto::Texture* temp = arms_;
    arms_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_arms(::eqproto::Texture* arms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete arms_;
  }
  if (arms != NULL) {
    _slow_set_allocated_arms(message_arena, &arms);
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Arms)
}

// optional .eqproto.Texture Wrist = 4;
bool TextureProfile::has_wrist() const {
  return this != internal_default_instance() && wrist_ != NULL;
}
void TextureProfile::clear_wrist() {
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) delete wrist_;
  wrist_ = NULL;
}
const ::eqproto::Texture& TextureProfile::wrist() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Wrist)
  return wrist_ != NULL ? *wrist_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_wrist() {
  
  if (wrist_ == NULL) {
    _slow_mutable_wrist();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Wrist)
  return wrist_;
}
::eqproto::Texture* TextureProfile::release_wrist() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Wrist)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_wrist();
  } else {
    ::eqproto::Texture* temp = wrist_;
    wrist_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_wrist(::eqproto::Texture* wrist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wrist_;
  }
  if (wrist != NULL) {
    _slow_set_allocated_wrist(message_arena, &wrist);
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Wrist)
}

// optional .eqproto.Texture Hands = 5;
bool TextureProfile::has_hands() const {
  return this != internal_default_instance() && hands_ != NULL;
}
void TextureProfile::clear_hands() {
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) delete hands_;
  hands_ = NULL;
}
const ::eqproto::Texture& TextureProfile::hands() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Hands)
  return hands_ != NULL ? *hands_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_hands() {
  
  if (hands_ == NULL) {
    _slow_mutable_hands();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Hands)
  return hands_;
}
::eqproto::Texture* TextureProfile::release_hands() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Hands)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_hands();
  } else {
    ::eqproto::Texture* temp = hands_;
    hands_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_hands(::eqproto::Texture* hands) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hands_;
  }
  if (hands != NULL) {
    _slow_set_allocated_hands(message_arena, &hands);
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Hands)
}

// optional .eqproto.Texture Legs = 6;
bool TextureProfile::has_legs() const {
  return this != internal_default_instance() && legs_ != NULL;
}
void TextureProfile::clear_legs() {
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) delete legs_;
  legs_ = NULL;
}
const ::eqproto::Texture& TextureProfile::legs() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Legs)
  return legs_ != NULL ? *legs_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_legs() {
  
  if (legs_ == NULL) {
    _slow_mutable_legs();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Legs)
  return legs_;
}
::eqproto::Texture* TextureProfile::release_legs() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Legs)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_legs();
  } else {
    ::eqproto::Texture* temp = legs_;
    legs_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_legs(::eqproto::Texture* legs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete legs_;
  }
  if (legs != NULL) {
    _slow_set_allocated_legs(message_arena, &legs);
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Legs)
}

// optional .eqproto.Texture Feet = 7;
bool TextureProfile::has_feet() const {
  return this != internal_default_instance() && feet_ != NULL;
}
void TextureProfile::clear_feet() {
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) delete feet_;
  feet_ = NULL;
}
const ::eqproto::Texture& TextureProfile::feet() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Feet)
  return feet_ != NULL ? *feet_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_feet() {
  
  if (feet_ == NULL) {
    _slow_mutable_feet();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Feet)
  return feet_;
}
::eqproto::Texture* TextureProfile::release_feet() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Feet)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_feet();
  } else {
    ::eqproto::Texture* temp = feet_;
    feet_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_feet(::eqproto::Texture* feet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete feet_;
  }
  if (feet != NULL) {
    _slow_set_allocated_feet(message_arena, &feet);
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Feet)
}

// optional .eqproto.Texture Primary = 8;
bool TextureProfile::has_primary() const {
  return this != internal_default_instance() && primary_ != NULL;
}
void TextureProfile::clear_primary() {
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) delete primary_;
  primary_ = NULL;
}
const ::eqproto::Texture& TextureProfile::primary() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Primary)
  return primary_ != NULL ? *primary_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_primary() {
  
  if (primary_ == NULL) {
    _slow_mutable_primary();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Primary)
  return primary_;
}
::eqproto::Texture* TextureProfile::release_primary() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Primary)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_primary();
  } else {
    ::eqproto::Texture* temp = primary_;
    primary_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_primary(::eqproto::Texture* primary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete primary_;
  }
  if (primary != NULL) {
    _slow_set_allocated_primary(message_arena, &primary);
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Primary)
}

// optional .eqproto.Texture Secondary = 9;
bool TextureProfile::has_secondary() const {
  return this != internal_default_instance() && secondary_ != NULL;
}
void TextureProfile::clear_secondary() {
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) delete secondary_;
  secondary_ = NULL;
}
const ::eqproto::Texture& TextureProfile::secondary() const {
  // @@protoc_insertion_point(field_get:eqproto.TextureProfile.Secondary)
  return secondary_ != NULL ? *secondary_
                         : *::eqproto::Texture::internal_default_instance();
}
::eqproto::Texture* TextureProfile::mutable_secondary() {
  
  if (secondary_ == NULL) {
    _slow_mutable_secondary();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TextureProfile.Secondary)
  return secondary_;
}
::eqproto::Texture* TextureProfile::release_secondary() {
  // @@protoc_insertion_point(field_release:eqproto.TextureProfile.Secondary)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_secondary();
  } else {
    ::eqproto::Texture* temp = secondary_;
    secondary_ = NULL;
    return temp;
  }
}
 void TextureProfile::set_allocated_secondary(::eqproto::Texture* secondary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete secondary_;
  }
  if (secondary != NULL) {
    _slow_set_allocated_secondary(message_arena, &secondary);
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TextureProfile.Secondary)
}

inline const TextureProfile* TextureProfile::internal_default_instance() {
  return &TextureProfile_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Texture::kMaterialFieldNumber;
const int Texture::kUnknown1FieldNumber;
const int Texture::kEliteModelFieldNumber;
const int Texture::kHerosForgeModelFieldNumber;
const int Texture::kUnknown2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Texture::Texture()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Texture)
}
Texture::Texture(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Texture)
}

void Texture::InitAsDefaultInstance() {
}

Texture::Texture(const Texture& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Texture)
}

void Texture::SharedCtor() {
  ::memset(&material_, 0, reinterpret_cast<char*>(&unknown2_) -
    reinterpret_cast<char*>(&material_) + sizeof(unknown2_));
  _cached_size_ = 0;
}

Texture::~Texture() {
  // @@protoc_insertion_point(destructor:eqproto.Texture)
  SharedDtor();
}

void Texture::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Texture::ArenaDtor(void* object) {
  Texture* _this = reinterpret_cast< Texture* >(object);
  (void)_this;
}
void Texture::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Texture::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Texture::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Texture_descriptor_;
}

const Texture& Texture::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Texture> Texture_default_instance_;

Texture* Texture::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Texture>(arena);
}

void Texture::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Texture)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Texture, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Texture*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(material_, unknown2_);

#undef ZR_HELPER_
#undef ZR_

}

bool Texture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Texture)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 material = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unknown1;
        break;
      }

      // optional uint32 unknown1 = 2;
      case 2: {
        if (tag == 16) {
         parse_unknown1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EliteModel;
        break;
      }

      // optional uint32 EliteModel = 3;
      case 3: {
        if (tag == 24) {
         parse_EliteModel:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elitemodel_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_HerosForgeModel;
        break;
      }

      // optional uint32 HerosForgeModel = 4;
      case 4: {
        if (tag == 32) {
         parse_HerosForgeModel:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herosforgemodel_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Unknown2;
        break;
      }

      // optional uint32 Unknown2 = 5;
      case 5: {
        if (tag == 40) {
         parse_Unknown2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Texture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Texture)
  return false;
#undef DO_
}

void Texture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Texture)
  // optional uint32 material = 1;
  if (this->material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->material(), output);
  }

  // optional uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unknown1(), output);
  }

  // optional uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->elitemodel(), output);
  }

  // optional uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->herosforgemodel(), output);
  }

  // optional uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown2(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Texture)
}

::google::protobuf::uint8* Texture::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Texture)
  // optional uint32 material = 1;
  if (this->material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->material(), target);
  }

  // optional uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unknown1(), target);
  }

  // optional uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->elitemodel(), target);
  }

  // optional uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->herosforgemodel(), target);
  }

  // optional uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Texture)
  return target;
}

size_t Texture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Texture)
  size_t total_size = 0;

  // optional uint32 material = 1;
  if (this->material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material());
  }

  // optional uint32 unknown1 = 2;
  if (this->unknown1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown1());
  }

  // optional uint32 EliteModel = 3;
  if (this->elitemodel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elitemodel());
  }

  // optional uint32 HerosForgeModel = 4;
  if (this->herosforgemodel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->herosforgemodel());
  }

  // optional uint32 Unknown2 = 5;
  if (this->unknown2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Texture::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Texture)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Texture* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Texture>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Texture)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Texture)
    UnsafeMergeFrom(*source);
  }
}

void Texture::MergeFrom(const Texture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Texture)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Texture::UnsafeMergeFrom(const Texture& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.material() != 0) {
    set_material(from.material());
  }
  if (from.unknown1() != 0) {
    set_unknown1(from.unknown1());
  }
  if (from.elitemodel() != 0) {
    set_elitemodel(from.elitemodel());
  }
  if (from.herosforgemodel() != 0) {
    set_herosforgemodel(from.herosforgemodel());
  }
  if (from.unknown2() != 0) {
    set_unknown2(from.unknown2());
  }
}

void Texture::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Texture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Texture::CopyFrom(const Texture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Texture)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Texture::IsInitialized() const {

  return true;
}

void Texture::Swap(Texture* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Texture temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Texture::UnsafeArenaSwap(Texture* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Texture::InternalSwap(Texture* other) {
  std::swap(material_, other->material_);
  std::swap(unknown1_, other->unknown1_);
  std::swap(elitemodel_, other->elitemodel_);
  std::swap(herosforgemodel_, other->herosforgemodel_);
  std::swap(unknown2_, other->unknown2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Texture::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Texture_descriptor_;
  metadata.reflection = Texture_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Texture

// optional uint32 material = 1;
void Texture::clear_material() {
  material_ = 0u;
}
::google::protobuf::uint32 Texture::material() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.material)
  return material_;
}
void Texture::set_material(::google::protobuf::uint32 value) {
  
  material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.material)
}

// optional uint32 unknown1 = 2;
void Texture::clear_unknown1() {
  unknown1_ = 0u;
}
::google::protobuf::uint32 Texture::unknown1() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.unknown1)
  return unknown1_;
}
void Texture::set_unknown1(::google::protobuf::uint32 value) {
  
  unknown1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.unknown1)
}

// optional uint32 EliteModel = 3;
void Texture::clear_elitemodel() {
  elitemodel_ = 0u;
}
::google::protobuf::uint32 Texture::elitemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.EliteModel)
  return elitemodel_;
}
void Texture::set_elitemodel(::google::protobuf::uint32 value) {
  
  elitemodel_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.EliteModel)
}

// optional uint32 HerosForgeModel = 4;
void Texture::clear_herosforgemodel() {
  herosforgemodel_ = 0u;
}
::google::protobuf::uint32 Texture::herosforgemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.HerosForgeModel)
  return herosforgemodel_;
}
void Texture::set_herosforgemodel(::google::protobuf::uint32 value) {
  
  herosforgemodel_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.HerosForgeModel)
}

// optional uint32 Unknown2 = 5;
void Texture::clear_unknown2() {
  unknown2_ = 0u;
}
::google::protobuf::uint32 Texture::unknown2() const {
  // @@protoc_insertion_point(field_get:eqproto.Texture.Unknown2)
  return unknown2_;
}
void Texture::set_unknown2(::google::protobuf::uint32 value) {
  
  unknown2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Texture.Unknown2)
}

inline const Texture* Texture::internal_default_instance() {
  return &Texture_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void TintProfile::_slow_mutable_head() {
  head_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_head() {
  if (head_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*head_);
    head_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_head() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Head)
  
  ::eqproto::Tint* temp = head_;
  head_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_head(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** head) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*head) == NULL) {
      message_arena->Own(*head);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*head)) {
      ::eqproto::Tint* new_head = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_head->CopyFrom(**head);
      *head = new_head;
    }
}
void TintProfile::unsafe_arena_set_allocated_head(
    ::eqproto::Tint* head) {
  if (GetArenaNoVirtual() == NULL) {
    delete head_;
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Head)
}
void TintProfile::_slow_mutable_chest() {
  chest_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_chest() {
  if (chest_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*chest_);
    chest_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_chest() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Chest)
  
  ::eqproto::Tint* temp = chest_;
  chest_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_chest(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** chest) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*chest) == NULL) {
      message_arena->Own(*chest);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*chest)) {
      ::eqproto::Tint* new_chest = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_chest->CopyFrom(**chest);
      *chest = new_chest;
    }
}
void TintProfile::unsafe_arena_set_allocated_chest(
    ::eqproto::Tint* chest) {
  if (GetArenaNoVirtual() == NULL) {
    delete chest_;
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Chest)
}
void TintProfile::_slow_mutable_arms() {
  arms_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_arms() {
  if (arms_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*arms_);
    arms_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_arms() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Arms)
  
  ::eqproto::Tint* temp = arms_;
  arms_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_arms(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** arms) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*arms) == NULL) {
      message_arena->Own(*arms);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*arms)) {
      ::eqproto::Tint* new_arms = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_arms->CopyFrom(**arms);
      *arms = new_arms;
    }
}
void TintProfile::unsafe_arena_set_allocated_arms(
    ::eqproto::Tint* arms) {
  if (GetArenaNoVirtual() == NULL) {
    delete arms_;
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Arms)
}
void TintProfile::_slow_mutable_wrist() {
  wrist_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_wrist() {
  if (wrist_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*wrist_);
    wrist_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_wrist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Wrist)
  
  ::eqproto::Tint* temp = wrist_;
  wrist_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_wrist(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** wrist) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*wrist) == NULL) {
      message_arena->Own(*wrist);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*wrist)) {
      ::eqproto::Tint* new_wrist = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_wrist->CopyFrom(**wrist);
      *wrist = new_wrist;
    }
}
void TintProfile::unsafe_arena_set_allocated_wrist(
    ::eqproto::Tint* wrist) {
  if (GetArenaNoVirtual() == NULL) {
    delete wrist_;
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Wrist)
}
void TintProfile::_slow_mutable_hands() {
  hands_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_hands() {
  if (hands_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*hands_);
    hands_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_hands() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Hands)
  
  ::eqproto::Tint* temp = hands_;
  hands_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_hands(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** hands) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*hands) == NULL) {
      message_arena->Own(*hands);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*hands)) {
      ::eqproto::Tint* new_hands = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_hands->CopyFrom(**hands);
      *hands = new_hands;
    }
}
void TintProfile::unsafe_arena_set_allocated_hands(
    ::eqproto::Tint* hands) {
  if (GetArenaNoVirtual() == NULL) {
    delete hands_;
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Hands)
}
void TintProfile::_slow_mutable_legs() {
  legs_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_legs() {
  if (legs_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*legs_);
    legs_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_legs() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Legs)
  
  ::eqproto::Tint* temp = legs_;
  legs_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_legs(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** legs) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*legs) == NULL) {
      message_arena->Own(*legs);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*legs)) {
      ::eqproto::Tint* new_legs = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_legs->CopyFrom(**legs);
      *legs = new_legs;
    }
}
void TintProfile::unsafe_arena_set_allocated_legs(
    ::eqproto::Tint* legs) {
  if (GetArenaNoVirtual() == NULL) {
    delete legs_;
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Legs)
}
void TintProfile::_slow_mutable_feet() {
  feet_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_feet() {
  if (feet_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*feet_);
    feet_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_feet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Feet)
  
  ::eqproto::Tint* temp = feet_;
  feet_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_feet(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** feet) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*feet) == NULL) {
      message_arena->Own(*feet);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*feet)) {
      ::eqproto::Tint* new_feet = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_feet->CopyFrom(**feet);
      *feet = new_feet;
    }
}
void TintProfile::unsafe_arena_set_allocated_feet(
    ::eqproto::Tint* feet) {
  if (GetArenaNoVirtual() == NULL) {
    delete feet_;
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Feet)
}
void TintProfile::_slow_mutable_primary() {
  primary_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_primary() {
  if (primary_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*primary_);
    primary_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_primary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Primary)
  
  ::eqproto::Tint* temp = primary_;
  primary_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_primary(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** primary) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*primary) == NULL) {
      message_arena->Own(*primary);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*primary)) {
      ::eqproto::Tint* new_primary = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_primary->CopyFrom(**primary);
      *primary = new_primary;
    }
}
void TintProfile::unsafe_arena_set_allocated_primary(
    ::eqproto::Tint* primary) {
  if (GetArenaNoVirtual() == NULL) {
    delete primary_;
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Primary)
}
void TintProfile::_slow_mutable_secondary() {
  secondary_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* TintProfile::_slow_release_secondary() {
  if (secondary_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*secondary_);
    secondary_ = NULL;
    return temp;
  }
}
::eqproto::Tint* TintProfile::unsafe_arena_release_secondary() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.TintProfile.Secondary)
  
  ::eqproto::Tint* temp = secondary_;
  secondary_ = NULL;
  return temp;
}
void TintProfile::_slow_set_allocated_secondary(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** secondary) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*secondary) == NULL) {
      message_arena->Own(*secondary);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*secondary)) {
      ::eqproto::Tint* new_secondary = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_secondary->CopyFrom(**secondary);
      *secondary = new_secondary;
    }
}
void TintProfile::unsafe_arena_set_allocated_secondary(
    ::eqproto::Tint* secondary) {
  if (GetArenaNoVirtual() == NULL) {
    delete secondary_;
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.TintProfile.Secondary)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TintProfile::kHeadFieldNumber;
const int TintProfile::kChestFieldNumber;
const int TintProfile::kArmsFieldNumber;
const int TintProfile::kWristFieldNumber;
const int TintProfile::kHandsFieldNumber;
const int TintProfile::kLegsFieldNumber;
const int TintProfile::kFeetFieldNumber;
const int TintProfile::kPrimaryFieldNumber;
const int TintProfile::kSecondaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TintProfile::TintProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.TintProfile)
}
TintProfile::TintProfile(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.TintProfile)
}

void TintProfile::InitAsDefaultInstance() {
  head_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  chest_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  arms_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  wrist_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  hands_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  legs_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  feet_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  primary_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
  secondary_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
}

TintProfile::TintProfile(const TintProfile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.TintProfile)
}

void TintProfile::SharedCtor() {
  head_ = NULL;
  chest_ = NULL;
  arms_ = NULL;
  wrist_ = NULL;
  hands_ = NULL;
  legs_ = NULL;
  feet_ = NULL;
  primary_ = NULL;
  secondary_ = NULL;
  _cached_size_ = 0;
}

TintProfile::~TintProfile() {
  // @@protoc_insertion_point(destructor:eqproto.TintProfile)
  SharedDtor();
}

void TintProfile::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &TintProfile_default_instance_.get()) {
    delete head_;
    delete chest_;
    delete arms_;
    delete wrist_;
    delete hands_;
    delete legs_;
    delete feet_;
    delete primary_;
    delete secondary_;
  }
}

void TintProfile::ArenaDtor(void* object) {
  TintProfile* _this = reinterpret_cast< TintProfile* >(object);
  (void)_this;
}
void TintProfile::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TintProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TintProfile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TintProfile_descriptor_;
}

const TintProfile& TintProfile::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TintProfile> TintProfile_default_instance_;

TintProfile* TintProfile::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TintProfile>(arena);
}

void TintProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.TintProfile)
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) delete arms_;
  arms_ = NULL;
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) delete wrist_;
  wrist_ = NULL;
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) delete hands_;
  hands_ = NULL;
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) delete legs_;
  legs_ = NULL;
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) delete feet_;
  feet_ = NULL;
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) delete primary_;
  primary_ = NULL;
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) delete secondary_;
  secondary_ = NULL;
}

bool TintProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.TintProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eqproto.Tint Head = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Chest;
        break;
      }

      // optional .eqproto.Tint Chest = 2;
      case 2: {
        if (tag == 18) {
         parse_Chest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Arms;
        break;
      }

      // optional .eqproto.Tint Arms = 3;
      case 3: {
        if (tag == 26) {
         parse_Arms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_arms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Wrist;
        break;
      }

      // optional .eqproto.Tint Wrist = 4;
      case 4: {
        if (tag == 34) {
         parse_Wrist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wrist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Hands;
        break;
      }

      // optional .eqproto.Tint Hands = 5;
      case 5: {
        if (tag == 42) {
         parse_Hands:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hands()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Legs;
        break;
      }

      // optional .eqproto.Tint Legs = 6;
      case 6: {
        if (tag == 50) {
         parse_Legs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_legs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Feet;
        break;
      }

      // optional .eqproto.Tint Feet = 7;
      case 7: {
        if (tag == 58) {
         parse_Feet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_feet()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Primary;
        break;
      }

      // optional .eqproto.Tint Primary = 8;
      case 8: {
        if (tag == 66) {
         parse_Primary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_primary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Secondary;
        break;
      }

      // optional .eqproto.Tint Secondary = 9;
      case 9: {
        if (tag == 74) {
         parse_Secondary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_secondary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.TintProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.TintProfile)
  return false;
#undef DO_
}

void TintProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.TintProfile)
  // optional .eqproto.Tint Head = 1;
  if (this->has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->head_, output);
  }

  // optional .eqproto.Tint Chest = 2;
  if (this->has_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chest_, output);
  }

  // optional .eqproto.Tint Arms = 3;
  if (this->has_arms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->arms_, output);
  }

  // optional .eqproto.Tint Wrist = 4;
  if (this->has_wrist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->wrist_, output);
  }

  // optional .eqproto.Tint Hands = 5;
  if (this->has_hands()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->hands_, output);
  }

  // optional .eqproto.Tint Legs = 6;
  if (this->has_legs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->legs_, output);
  }

  // optional .eqproto.Tint Feet = 7;
  if (this->has_feet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->feet_, output);
  }

  // optional .eqproto.Tint Primary = 8;
  if (this->has_primary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->primary_, output);
  }

  // optional .eqproto.Tint Secondary = 9;
  if (this->has_secondary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->secondary_, output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.TintProfile)
}

::google::protobuf::uint8* TintProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.TintProfile)
  // optional .eqproto.Tint Head = 1;
  if (this->has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->head_, false, target);
  }

  // optional .eqproto.Tint Chest = 2;
  if (this->has_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chest_, false, target);
  }

  // optional .eqproto.Tint Arms = 3;
  if (this->has_arms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->arms_, false, target);
  }

  // optional .eqproto.Tint Wrist = 4;
  if (this->has_wrist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->wrist_, false, target);
  }

  // optional .eqproto.Tint Hands = 5;
  if (this->has_hands()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->hands_, false, target);
  }

  // optional .eqproto.Tint Legs = 6;
  if (this->has_legs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->legs_, false, target);
  }

  // optional .eqproto.Tint Feet = 7;
  if (this->has_feet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->feet_, false, target);
  }

  // optional .eqproto.Tint Primary = 8;
  if (this->has_primary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->primary_, false, target);
  }

  // optional .eqproto.Tint Secondary = 9;
  if (this->has_secondary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->secondary_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.TintProfile)
  return target;
}

size_t TintProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.TintProfile)
  size_t total_size = 0;

  // optional .eqproto.Tint Head = 1;
  if (this->has_head()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->head_);
  }

  // optional .eqproto.Tint Chest = 2;
  if (this->has_chest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chest_);
  }

  // optional .eqproto.Tint Arms = 3;
  if (this->has_arms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->arms_);
  }

  // optional .eqproto.Tint Wrist = 4;
  if (this->has_wrist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->wrist_);
  }

  // optional .eqproto.Tint Hands = 5;
  if (this->has_hands()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hands_);
  }

  // optional .eqproto.Tint Legs = 6;
  if (this->has_legs()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->legs_);
  }

  // optional .eqproto.Tint Feet = 7;
  if (this->has_feet()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->feet_);
  }

  // optional .eqproto.Tint Primary = 8;
  if (this->has_primary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->primary_);
  }

  // optional .eqproto.Tint Secondary = 9;
  if (this->has_secondary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->secondary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TintProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.TintProfile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TintProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TintProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.TintProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.TintProfile)
    UnsafeMergeFrom(*source);
  }
}

void TintProfile::MergeFrom(const TintProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.TintProfile)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TintProfile::UnsafeMergeFrom(const TintProfile& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_head()) {
    mutable_head()->::eqproto::Tint::MergeFrom(from.head());
  }
  if (from.has_chest()) {
    mutable_chest()->::eqproto::Tint::MergeFrom(from.chest());
  }
  if (from.has_arms()) {
    mutable_arms()->::eqproto::Tint::MergeFrom(from.arms());
  }
  if (from.has_wrist()) {
    mutable_wrist()->::eqproto::Tint::MergeFrom(from.wrist());
  }
  if (from.has_hands()) {
    mutable_hands()->::eqproto::Tint::MergeFrom(from.hands());
  }
  if (from.has_legs()) {
    mutable_legs()->::eqproto::Tint::MergeFrom(from.legs());
  }
  if (from.has_feet()) {
    mutable_feet()->::eqproto::Tint::MergeFrom(from.feet());
  }
  if (from.has_primary()) {
    mutable_primary()->::eqproto::Tint::MergeFrom(from.primary());
  }
  if (from.has_secondary()) {
    mutable_secondary()->::eqproto::Tint::MergeFrom(from.secondary());
  }
}

void TintProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.TintProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TintProfile::CopyFrom(const TintProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.TintProfile)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TintProfile::IsInitialized() const {

  return true;
}

void TintProfile::Swap(TintProfile* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TintProfile temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void TintProfile::UnsafeArenaSwap(TintProfile* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TintProfile::InternalSwap(TintProfile* other) {
  std::swap(head_, other->head_);
  std::swap(chest_, other->chest_);
  std::swap(arms_, other->arms_);
  std::swap(wrist_, other->wrist_);
  std::swap(hands_, other->hands_);
  std::swap(legs_, other->legs_);
  std::swap(feet_, other->feet_);
  std::swap(primary_, other->primary_);
  std::swap(secondary_, other->secondary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TintProfile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TintProfile_descriptor_;
  metadata.reflection = TintProfile_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TintProfile

// optional .eqproto.Tint Head = 1;
bool TintProfile::has_head() const {
  return this != internal_default_instance() && head_ != NULL;
}
void TintProfile::clear_head() {
  if (GetArenaNoVirtual() == NULL && head_ != NULL) delete head_;
  head_ = NULL;
}
const ::eqproto::Tint& TintProfile::head() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Head)
  return head_ != NULL ? *head_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_head() {
  
  if (head_ == NULL) {
    _slow_mutable_head();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Head)
  return head_;
}
::eqproto::Tint* TintProfile::release_head() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Head)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_head();
  } else {
    ::eqproto::Tint* temp = head_;
    head_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_head(::eqproto::Tint* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete head_;
  }
  if (head != NULL) {
    _slow_set_allocated_head(message_arena, &head);
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Head)
}

// optional .eqproto.Tint Chest = 2;
bool TintProfile::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
void TintProfile::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
}
const ::eqproto::Tint& TintProfile::chest() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Chest)
  return chest_ != NULL ? *chest_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_chest() {
  
  if (chest_ == NULL) {
    _slow_mutable_chest();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Chest)
  return chest_;
}
::eqproto::Tint* TintProfile::release_chest() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Chest)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_chest();
  } else {
    ::eqproto::Tint* temp = chest_;
    chest_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_chest(::eqproto::Tint* chest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chest_;
  }
  if (chest != NULL) {
    _slow_set_allocated_chest(message_arena, &chest);
  }
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Chest)
}

// optional .eqproto.Tint Arms = 3;
bool TintProfile::has_arms() const {
  return this != internal_default_instance() && arms_ != NULL;
}
void TintProfile::clear_arms() {
  if (GetArenaNoVirtual() == NULL && arms_ != NULL) delete arms_;
  arms_ = NULL;
}
const ::eqproto::Tint& TintProfile::arms() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Arms)
  return arms_ != NULL ? *arms_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_arms() {
  
  if (arms_ == NULL) {
    _slow_mutable_arms();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Arms)
  return arms_;
}
::eqproto::Tint* TintProfile::release_arms() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Arms)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_arms();
  } else {
    ::eqproto::Tint* temp = arms_;
    arms_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_arms(::eqproto::Tint* arms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete arms_;
  }
  if (arms != NULL) {
    _slow_set_allocated_arms(message_arena, &arms);
  }
  arms_ = arms;
  if (arms) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Arms)
}

// optional .eqproto.Tint Wrist = 4;
bool TintProfile::has_wrist() const {
  return this != internal_default_instance() && wrist_ != NULL;
}
void TintProfile::clear_wrist() {
  if (GetArenaNoVirtual() == NULL && wrist_ != NULL) delete wrist_;
  wrist_ = NULL;
}
const ::eqproto::Tint& TintProfile::wrist() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Wrist)
  return wrist_ != NULL ? *wrist_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_wrist() {
  
  if (wrist_ == NULL) {
    _slow_mutable_wrist();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Wrist)
  return wrist_;
}
::eqproto::Tint* TintProfile::release_wrist() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Wrist)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_wrist();
  } else {
    ::eqproto::Tint* temp = wrist_;
    wrist_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_wrist(::eqproto::Tint* wrist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wrist_;
  }
  if (wrist != NULL) {
    _slow_set_allocated_wrist(message_arena, &wrist);
  }
  wrist_ = wrist;
  if (wrist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Wrist)
}

// optional .eqproto.Tint Hands = 5;
bool TintProfile::has_hands() const {
  return this != internal_default_instance() && hands_ != NULL;
}
void TintProfile::clear_hands() {
  if (GetArenaNoVirtual() == NULL && hands_ != NULL) delete hands_;
  hands_ = NULL;
}
const ::eqproto::Tint& TintProfile::hands() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Hands)
  return hands_ != NULL ? *hands_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_hands() {
  
  if (hands_ == NULL) {
    _slow_mutable_hands();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Hands)
  return hands_;
}
::eqproto::Tint* TintProfile::release_hands() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Hands)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_hands();
  } else {
    ::eqproto::Tint* temp = hands_;
    hands_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_hands(::eqproto::Tint* hands) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hands_;
  }
  if (hands != NULL) {
    _slow_set_allocated_hands(message_arena, &hands);
  }
  hands_ = hands;
  if (hands) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Hands)
}

// optional .eqproto.Tint Legs = 6;
bool TintProfile::has_legs() const {
  return this != internal_default_instance() && legs_ != NULL;
}
void TintProfile::clear_legs() {
  if (GetArenaNoVirtual() == NULL && legs_ != NULL) delete legs_;
  legs_ = NULL;
}
const ::eqproto::Tint& TintProfile::legs() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Legs)
  return legs_ != NULL ? *legs_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_legs() {
  
  if (legs_ == NULL) {
    _slow_mutable_legs();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Legs)
  return legs_;
}
::eqproto::Tint* TintProfile::release_legs() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Legs)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_legs();
  } else {
    ::eqproto::Tint* temp = legs_;
    legs_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_legs(::eqproto::Tint* legs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete legs_;
  }
  if (legs != NULL) {
    _slow_set_allocated_legs(message_arena, &legs);
  }
  legs_ = legs;
  if (legs) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Legs)
}

// optional .eqproto.Tint Feet = 7;
bool TintProfile::has_feet() const {
  return this != internal_default_instance() && feet_ != NULL;
}
void TintProfile::clear_feet() {
  if (GetArenaNoVirtual() == NULL && feet_ != NULL) delete feet_;
  feet_ = NULL;
}
const ::eqproto::Tint& TintProfile::feet() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Feet)
  return feet_ != NULL ? *feet_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_feet() {
  
  if (feet_ == NULL) {
    _slow_mutable_feet();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Feet)
  return feet_;
}
::eqproto::Tint* TintProfile::release_feet() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Feet)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_feet();
  } else {
    ::eqproto::Tint* temp = feet_;
    feet_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_feet(::eqproto::Tint* feet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete feet_;
  }
  if (feet != NULL) {
    _slow_set_allocated_feet(message_arena, &feet);
  }
  feet_ = feet;
  if (feet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Feet)
}

// optional .eqproto.Tint Primary = 8;
bool TintProfile::has_primary() const {
  return this != internal_default_instance() && primary_ != NULL;
}
void TintProfile::clear_primary() {
  if (GetArenaNoVirtual() == NULL && primary_ != NULL) delete primary_;
  primary_ = NULL;
}
const ::eqproto::Tint& TintProfile::primary() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Primary)
  return primary_ != NULL ? *primary_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_primary() {
  
  if (primary_ == NULL) {
    _slow_mutable_primary();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Primary)
  return primary_;
}
::eqproto::Tint* TintProfile::release_primary() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Primary)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_primary();
  } else {
    ::eqproto::Tint* temp = primary_;
    primary_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_primary(::eqproto::Tint* primary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete primary_;
  }
  if (primary != NULL) {
    _slow_set_allocated_primary(message_arena, &primary);
  }
  primary_ = primary;
  if (primary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Primary)
}

// optional .eqproto.Tint Secondary = 9;
bool TintProfile::has_secondary() const {
  return this != internal_default_instance() && secondary_ != NULL;
}
void TintProfile::clear_secondary() {
  if (GetArenaNoVirtual() == NULL && secondary_ != NULL) delete secondary_;
  secondary_ = NULL;
}
const ::eqproto::Tint& TintProfile::secondary() const {
  // @@protoc_insertion_point(field_get:eqproto.TintProfile.Secondary)
  return secondary_ != NULL ? *secondary_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* TintProfile::mutable_secondary() {
  
  if (secondary_ == NULL) {
    _slow_mutable_secondary();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.TintProfile.Secondary)
  return secondary_;
}
::eqproto::Tint* TintProfile::release_secondary() {
  // @@protoc_insertion_point(field_release:eqproto.TintProfile.Secondary)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_secondary();
  } else {
    ::eqproto::Tint* temp = secondary_;
    secondary_ = NULL;
    return temp;
  }
}
 void TintProfile::set_allocated_secondary(::eqproto::Tint* secondary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete secondary_;
  }
  if (secondary != NULL) {
    _slow_set_allocated_secondary(message_arena, &secondary);
  }
  secondary_ = secondary;
  if (secondary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.TintProfile.Secondary)
}

inline const TintProfile* TintProfile::internal_default_instance() {
  return &TintProfile_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tint::kBlueFieldNumber;
const int Tint::kGreenFieldNumber;
const int Tint::kRedFieldNumber;
const int Tint::kUseTintFieldNumber;
const int Tint::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tint::Tint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Tint)
}
Tint::Tint(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Tint)
}

void Tint::InitAsDefaultInstance() {
}

Tint::Tint(const Tint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Tint)
}

void Tint::SharedCtor() {
  ::memset(&blue_, 0, reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&blue_) + sizeof(color_));
  _cached_size_ = 0;
}

Tint::~Tint() {
  // @@protoc_insertion_point(destructor:eqproto.Tint)
  SharedDtor();
}

void Tint::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Tint::ArenaDtor(void* object) {
  Tint* _this = reinterpret_cast< Tint* >(object);
  (void)_this;
}
void Tint::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Tint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tint_descriptor_;
}

const Tint& Tint::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Tint> Tint_default_instance_;

Tint* Tint::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Tint>(arena);
}

void Tint::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Tint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Tint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Tint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(blue_, color_);

#undef ZR_HELPER_
#undef ZR_

}

bool Tint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Tint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Blue = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Green;
        break;
      }

      // optional uint32 Green = 2;
      case 2: {
        if (tag == 16) {
         parse_Green:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Red;
        break;
      }

      // optional uint32 Red = 3;
      case 3: {
        if (tag == 24) {
         parse_Red:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_UseTint;
        break;
      }

      // optional uint32 UseTint = 4;
      case 4: {
        if (tag == 32) {
         parse_UseTint:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usetint_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Color;
        break;
      }

      // optional uint32 Color = 5;
      case 5: {
        if (tag == 40) {
         parse_Color:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Tint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Tint)
  return false;
#undef DO_
}

void Tint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Tint)
  // optional uint32 Blue = 1;
  if (this->blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->blue(), output);
  }

  // optional uint32 Green = 2;
  if (this->green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->green(), output);
  }

  // optional uint32 Red = 3;
  if (this->red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->red(), output);
  }

  // optional uint32 UseTint = 4;
  if (this->usetint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->usetint(), output);
  }

  // optional uint32 Color = 5;
  if (this->color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->color(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Tint)
}

::google::protobuf::uint8* Tint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Tint)
  // optional uint32 Blue = 1;
  if (this->blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->blue(), target);
  }

  // optional uint32 Green = 2;
  if (this->green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->green(), target);
  }

  // optional uint32 Red = 3;
  if (this->red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->red(), target);
  }

  // optional uint32 UseTint = 4;
  if (this->usetint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->usetint(), target);
  }

  // optional uint32 Color = 5;
  if (this->color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->color(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Tint)
  return target;
}

size_t Tint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Tint)
  size_t total_size = 0;

  // optional uint32 Blue = 1;
  if (this->blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blue());
  }

  // optional uint32 Green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->green());
  }

  // optional uint32 Red = 3;
  if (this->red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->red());
  }

  // optional uint32 UseTint = 4;
  if (this->usetint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usetint());
  }

  // optional uint32 Color = 5;
  if (this->color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->color());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Tint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Tint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Tint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Tint)
    UnsafeMergeFrom(*source);
  }
}

void Tint::MergeFrom(const Tint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Tint)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Tint::UnsafeMergeFrom(const Tint& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.blue() != 0) {
    set_blue(from.blue());
  }
  if (from.green() != 0) {
    set_green(from.green());
  }
  if (from.red() != 0) {
    set_red(from.red());
  }
  if (from.usetint() != 0) {
    set_usetint(from.usetint());
  }
  if (from.color() != 0) {
    set_color(from.color());
  }
}

void Tint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Tint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tint::CopyFrom(const Tint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Tint)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Tint::IsInitialized() const {

  return true;
}

void Tint::Swap(Tint* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Tint temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Tint::UnsafeArenaSwap(Tint* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Tint::InternalSwap(Tint* other) {
  std::swap(blue_, other->blue_);
  std::swap(green_, other->green_);
  std::swap(red_, other->red_);
  std::swap(usetint_, other->usetint_);
  std::swap(color_, other->color_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tint_descriptor_;
  metadata.reflection = Tint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tint

// optional uint32 Blue = 1;
void Tint::clear_blue() {
  blue_ = 0u;
}
::google::protobuf::uint32 Tint::blue() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Blue)
  return blue_;
}
void Tint::set_blue(::google::protobuf::uint32 value) {
  
  blue_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Blue)
}

// optional uint32 Green = 2;
void Tint::clear_green() {
  green_ = 0u;
}
::google::protobuf::uint32 Tint::green() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Green)
  return green_;
}
void Tint::set_green(::google::protobuf::uint32 value) {
  
  green_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Green)
}

// optional uint32 Red = 3;
void Tint::clear_red() {
  red_ = 0u;
}
::google::protobuf::uint32 Tint::red() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Red)
  return red_;
}
void Tint::set_red(::google::protobuf::uint32 value) {
  
  red_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Red)
}

// optional uint32 UseTint = 4;
void Tint::clear_usetint() {
  usetint_ = 0u;
}
::google::protobuf::uint32 Tint::usetint() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.UseTint)
  return usetint_;
}
void Tint::set_usetint(::google::protobuf::uint32 value) {
  
  usetint_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.UseTint)
}

// optional uint32 Color = 5;
void Tint::clear_color() {
  color_ = 0u;
}
::google::protobuf::uint32 Tint::color() const {
  // @@protoc_insertion_point(field_get:eqproto.Tint.Color)
  return color_;
}
void Tint::set_color(::google::protobuf::uint32 value) {
  
  color_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Tint.Color)
}

inline const Tint* Tint::internal_default_instance() {
  return &Tint_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kOpFieldNumber;
const int Event::kPayloadFieldNumber;
const int Event::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.Event)
}
Event::Event(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.Event)
}

void Event::InitAsDefaultInstance() {
}

Event::Event(const Event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.Event)
}

void Event::SharedCtor() {
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&op_, 0, reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&op_) + sizeof(entity_id_));
  _cached_size_ = 0;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:eqproto.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  payload_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void Event::ArenaDtor(void* object) {
  Event* _this = reinterpret_cast< Event* >(object);
  (void)_this;
}
void Event::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Event_descriptor_;
}

const Event& Event::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Event> Event_default_instance_;

Event* Event::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Event>(arena);
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.Event)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Event, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Event*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(op_, entity_id_);
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eqproto.OpCode op = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::eqproto::OpCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_payload;
        break;
      }

      // optional bytes payload = 2;
      case 2: {
        if (tag == 18) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_entity_id;
        break;
      }

      // optional uint32 entity_id = 3;
      case 3: {
        if (tag == 24) {
         parse_entity_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.Event)
  // optional .eqproto.OpCode op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // optional bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  // optional uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entity_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.Event)
  // optional .eqproto.OpCode op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // optional bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  // optional uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entity_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.Event)
  size_t total_size = 0;

  // optional .eqproto.OpCode op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // optional bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // optional uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.Event)
    UnsafeMergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.Event)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Event::UnsafeMergeFrom(const Event& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.payload().size() > 0) {
    set_payload(from.payload());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.Event)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Event::IsInitialized() const {

  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Event temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Event::UnsafeArenaSwap(Event* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  std::swap(op_, other->op_);
  payload_.Swap(&other->payload_);
  std::swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Event_descriptor_;
  metadata.reflection = Event_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// optional .eqproto.OpCode op = 1;
void Event::clear_op() {
  op_ = 0;
}
::eqproto::OpCode Event::op() const {
  // @@protoc_insertion_point(field_get:eqproto.Event.op)
  return static_cast< ::eqproto::OpCode >(op_);
}
void Event::set_op(::eqproto::OpCode value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Event.op)
}

// optional bytes payload = 2;
void Event::clear_payload() {
  payload_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& Event::payload() const {
  // @@protoc_insertion_point(field_get:eqproto.Event.payload)
  return payload_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Event::set_payload(const ::std::string& value) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.Event.payload)
}
void Event::set_payload(const char* value) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.Event.payload)
}
void Event::set_payload(const void* value,
    size_t size) {
  
  payload_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.Event.payload)
}
::std::string* Event::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.Event.payload)
  return payload_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Event::release_payload() {
  // @@protoc_insertion_point(field_release:eqproto.Event.payload)
  
  return payload_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* Event::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.Event.payload)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return payload_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void Event::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.Event.payload)
}
void Event::unsafe_arena_set_allocated_payload(
    ::std::string* payload) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      payload, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.Event.payload)
}

// optional uint32 entity_id = 3;
void Event::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 Event::entity_id() const {
  // @@protoc_insertion_point(field_get:eqproto.Event.entity_id)
  return entity_id_;
}
void Event::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.Event.entity_id)
}

inline const Event* Event::internal_default_instance() {
  return &Event_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeathEvent::kSpawnIdFieldNumber;
const int DeathEvent::kKillerIdFieldNumber;
const int DeathEvent::kCorpseIdFieldNumber;
const int DeathEvent::kBindZoneIdFieldNumber;
const int DeathEvent::kSpellIdFieldNumber;
const int DeathEvent::kAttackSkillIdFieldNumber;
const int DeathEvent::kDamageFieldNumber;
const int DeathEvent::kUnknown028FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeathEvent::DeathEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.DeathEvent)
}
DeathEvent::DeathEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.DeathEvent)
}

void DeathEvent::InitAsDefaultInstance() {
}

DeathEvent::DeathEvent(const DeathEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.DeathEvent)
}

void DeathEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, reinterpret_cast<char*>(&unknown028_) -
    reinterpret_cast<char*>(&spawn_id_) + sizeof(unknown028_));
  _cached_size_ = 0;
}

DeathEvent::~DeathEvent() {
  // @@protoc_insertion_point(destructor:eqproto.DeathEvent)
  SharedDtor();
}

void DeathEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void DeathEvent::ArenaDtor(void* object) {
  DeathEvent* _this = reinterpret_cast< DeathEvent* >(object);
  (void)_this;
}
void DeathEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeathEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeathEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeathEvent_descriptor_;
}

const DeathEvent& DeathEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeathEvent> DeathEvent_default_instance_;

DeathEvent* DeathEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeathEvent>(arena);
}

void DeathEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.DeathEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DeathEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DeathEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawn_id_, unknown028_);

#undef ZR_HELPER_
#undef ZR_

}

bool DeathEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.DeathEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawn_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_killer_id;
        break;
      }

      // optional uint32 killer_id = 2;
      case 2: {
        if (tag == 16) {
         parse_killer_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killer_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_corpse_id;
        break;
      }

      // optional uint32 corpse_id = 3;
      case 3: {
        if (tag == 24) {
         parse_corpse_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &corpse_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bind_zone_id;
        break;
      }

      // optional uint32 bind_zone_id = 4;
      case 4: {
        if (tag == 32) {
         parse_bind_zone_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bind_zone_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_spell_id;
        break;
      }

      // optional uint32 spell_id = 5;
      case 5: {
        if (tag == 40) {
         parse_spell_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spell_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_attack_skill_id;
        break;
      }

      // optional uint32 attack_skill_id = 6;
      case 6: {
        if (tag == 48) {
         parse_attack_skill_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_skill_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_damage;
        break;
      }

      // optional uint32 damage = 7;
      case 7: {
        if (tag == 56) {
         parse_damage:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_unknown028;
        break;
      }

      // optional uint32 unknown028 = 8;
      case 8: {
        if (tag == 64) {
         parse_unknown028:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown028_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.DeathEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.DeathEvent)
  return false;
#undef DO_
}

void DeathEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.DeathEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // optional uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->killer_id(), output);
  }

  // optional uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->corpse_id(), output);
  }

  // optional uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bind_zone_id(), output);
  }

  // optional uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->spell_id(), output);
  }

  // optional uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->attack_skill_id(), output);
  }

  // optional uint32 damage = 7;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->damage(), output);
  }

  // optional uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->unknown028(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.DeathEvent)
}

::google::protobuf::uint8* DeathEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.DeathEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // optional uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->killer_id(), target);
  }

  // optional uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->corpse_id(), target);
  }

  // optional uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bind_zone_id(), target);
  }

  // optional uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->spell_id(), target);
  }

  // optional uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->attack_skill_id(), target);
  }

  // optional uint32 damage = 7;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->damage(), target);
  }

  // optional uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->unknown028(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.DeathEvent)
  return target;
}

size_t DeathEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.DeathEvent)
  size_t total_size = 0;

  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // optional uint32 killer_id = 2;
  if (this->killer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->killer_id());
  }

  // optional uint32 corpse_id = 3;
  if (this->corpse_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->corpse_id());
  }

  // optional uint32 bind_zone_id = 4;
  if (this->bind_zone_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bind_zone_id());
  }

  // optional uint32 spell_id = 5;
  if (this->spell_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spell_id());
  }

  // optional uint32 attack_skill_id = 6;
  if (this->attack_skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attack_skill_id());
  }

  // optional uint32 damage = 7;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());
  }

  // optional uint32 unknown028 = 8;
  if (this->unknown028() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown028());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeathEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.DeathEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeathEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeathEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.DeathEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.DeathEvent)
    UnsafeMergeFrom(*source);
  }
}

void DeathEvent::MergeFrom(const DeathEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.DeathEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeathEvent::UnsafeMergeFrom(const DeathEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.killer_id() != 0) {
    set_killer_id(from.killer_id());
  }
  if (from.corpse_id() != 0) {
    set_corpse_id(from.corpse_id());
  }
  if (from.bind_zone_id() != 0) {
    set_bind_zone_id(from.bind_zone_id());
  }
  if (from.spell_id() != 0) {
    set_spell_id(from.spell_id());
  }
  if (from.attack_skill_id() != 0) {
    set_attack_skill_id(from.attack_skill_id());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.unknown028() != 0) {
    set_unknown028(from.unknown028());
  }
}

void DeathEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.DeathEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeathEvent::CopyFrom(const DeathEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.DeathEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeathEvent::IsInitialized() const {

  return true;
}

void DeathEvent::Swap(DeathEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeathEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void DeathEvent::UnsafeArenaSwap(DeathEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeathEvent::InternalSwap(DeathEvent* other) {
  std::swap(spawn_id_, other->spawn_id_);
  std::swap(killer_id_, other->killer_id_);
  std::swap(corpse_id_, other->corpse_id_);
  std::swap(bind_zone_id_, other->bind_zone_id_);
  std::swap(spell_id_, other->spell_id_);
  std::swap(attack_skill_id_, other->attack_skill_id_);
  std::swap(damage_, other->damage_);
  std::swap(unknown028_, other->unknown028_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeathEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeathEvent_descriptor_;
  metadata.reflection = DeathEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeathEvent

// optional uint32 spawn_id = 1;
void DeathEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.spawn_id)
  return spawn_id_;
}
void DeathEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.spawn_id)
}

// optional uint32 killer_id = 2;
void DeathEvent::clear_killer_id() {
  killer_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::killer_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.killer_id)
  return killer_id_;
}
void DeathEvent::set_killer_id(::google::protobuf::uint32 value) {
  
  killer_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.killer_id)
}

// optional uint32 corpse_id = 3;
void DeathEvent::clear_corpse_id() {
  corpse_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::corpse_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.corpse_id)
  return corpse_id_;
}
void DeathEvent::set_corpse_id(::google::protobuf::uint32 value) {
  
  corpse_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.corpse_id)
}

// optional uint32 bind_zone_id = 4;
void DeathEvent::clear_bind_zone_id() {
  bind_zone_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::bind_zone_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.bind_zone_id)
  return bind_zone_id_;
}
void DeathEvent::set_bind_zone_id(::google::protobuf::uint32 value) {
  
  bind_zone_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.bind_zone_id)
}

// optional uint32 spell_id = 5;
void DeathEvent::clear_spell_id() {
  spell_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::spell_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.spell_id)
  return spell_id_;
}
void DeathEvent::set_spell_id(::google::protobuf::uint32 value) {
  
  spell_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.spell_id)
}

// optional uint32 attack_skill_id = 6;
void DeathEvent::clear_attack_skill_id() {
  attack_skill_id_ = 0u;
}
::google::protobuf::uint32 DeathEvent::attack_skill_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.attack_skill_id)
  return attack_skill_id_;
}
void DeathEvent::set_attack_skill_id(::google::protobuf::uint32 value) {
  
  attack_skill_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.attack_skill_id)
}

// optional uint32 damage = 7;
void DeathEvent::clear_damage() {
  damage_ = 0u;
}
::google::protobuf::uint32 DeathEvent::damage() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.damage)
  return damage_;
}
void DeathEvent::set_damage(::google::protobuf::uint32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.damage)
}

// optional uint32 unknown028 = 8;
void DeathEvent::clear_unknown028() {
  unknown028_ = 0u;
}
::google::protobuf::uint32 DeathEvent::unknown028() const {
  // @@protoc_insertion_point(field_get:eqproto.DeathEvent.unknown028)
  return unknown028_;
}
void DeathEvent::set_unknown028(::google::protobuf::uint32 value) {
  
  unknown028_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeathEvent.unknown028)
}

inline const DeathEvent* DeathEvent::internal_default_instance() {
  return &DeathEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DamageEvent::kTargetFieldNumber;
const int DamageEvent::kSourceFieldNumber;
const int DamageEvent::kTypeFieldNumber;
const int DamageEvent::kSpellidFieldNumber;
const int DamageEvent::kDamageFieldNumber;
const int DamageEvent::kForceFieldNumber;
const int DamageEvent::kMeleepushXyFieldNumber;
const int DamageEvent::kMeleepushZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DamageEvent::DamageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.DamageEvent)
}
DamageEvent::DamageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.DamageEvent)
}

void DamageEvent::InitAsDefaultInstance() {
}

DamageEvent::DamageEvent(const DamageEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.DamageEvent)
}

void DamageEvent::SharedCtor() {
  ::memset(&target_, 0, reinterpret_cast<char*>(&meleepush_z_) -
    reinterpret_cast<char*>(&target_) + sizeof(meleepush_z_));
  _cached_size_ = 0;
}

DamageEvent::~DamageEvent() {
  // @@protoc_insertion_point(destructor:eqproto.DamageEvent)
  SharedDtor();
}

void DamageEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void DamageEvent::ArenaDtor(void* object) {
  DamageEvent* _this = reinterpret_cast< DamageEvent* >(object);
  (void)_this;
}
void DamageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DamageEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DamageEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DamageEvent_descriptor_;
}

const DamageEvent& DamageEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DamageEvent> DamageEvent_default_instance_;

DamageEvent* DamageEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DamageEvent>(arena);
}

void DamageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.DamageEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DamageEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DamageEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(target_, meleepush_z_);

#undef ZR_HELPER_
#undef ZR_

}

bool DamageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.DamageEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 target = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_source;
        break;
      }

      // optional uint32 source = 2;
      case 2: {
        if (tag == 16) {
         parse_source:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_spellid;
        break;
      }

      // optional uint32 spellid = 4;
      case 4: {
        if (tag == 32) {
         parse_spellid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spellid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_damage;
        break;
      }

      // optional uint32 damage = 5;
      case 5: {
        if (tag == 40) {
         parse_damage:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_force;
        break;
      }

      // optional float force = 6;
      case 6: {
        if (tag == 53) {
         parse_force:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &force_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_meleepush_xy;
        break;
      }

      // optional float meleepush_xy = 7;
      case 7: {
        if (tag == 61) {
         parse_meleepush_xy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &meleepush_xy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_meleepush_z;
        break;
      }

      // optional float meleepush_z = 8;
      case 8: {
        if (tag == 69) {
         parse_meleepush_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &meleepush_z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.DamageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.DamageEvent)
  return false;
#undef DO_
}

void DamageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.DamageEvent)
  // optional uint32 target = 1;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target(), output);
  }

  // optional uint32 source = 2;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source(), output);
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional uint32 spellid = 4;
  if (this->spellid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->spellid(), output);
  }

  // optional uint32 damage = 5;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->damage(), output);
  }

  // optional float force = 6;
  if (this->force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->force(), output);
  }

  // optional float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->meleepush_xy(), output);
  }

  // optional float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->meleepush_z(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.DamageEvent)
}

::google::protobuf::uint8* DamageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.DamageEvent)
  // optional uint32 target = 1;
  if (this->target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target(), target);
  }

  // optional uint32 source = 2;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source(), target);
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional uint32 spellid = 4;
  if (this->spellid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->spellid(), target);
  }

  // optional uint32 damage = 5;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->damage(), target);
  }

  // optional float force = 6;
  if (this->force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->force(), target);
  }

  // optional float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->meleepush_xy(), target);
  }

  // optional float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->meleepush_z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.DamageEvent)
  return target;
}

size_t DamageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.DamageEvent)
  size_t total_size = 0;

  // optional uint32 target = 1;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // optional uint32 source = 2;
  if (this->source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 spellid = 4;
  if (this->spellid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spellid());
  }

  // optional uint32 damage = 5;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->damage());
  }

  // optional float force = 6;
  if (this->force() != 0) {
    total_size += 1 + 4;
  }

  // optional float meleepush_xy = 7;
  if (this->meleepush_xy() != 0) {
    total_size += 1 + 4;
  }

  // optional float meleepush_z = 8;
  if (this->meleepush_z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DamageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.DamageEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DamageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DamageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.DamageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.DamageEvent)
    UnsafeMergeFrom(*source);
  }
}

void DamageEvent::MergeFrom(const DamageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.DamageEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DamageEvent::UnsafeMergeFrom(const DamageEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.spellid() != 0) {
    set_spellid(from.spellid());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.force() != 0) {
    set_force(from.force());
  }
  if (from.meleepush_xy() != 0) {
    set_meleepush_xy(from.meleepush_xy());
  }
  if (from.meleepush_z() != 0) {
    set_meleepush_z(from.meleepush_z());
  }
}

void DamageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.DamageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DamageEvent::CopyFrom(const DamageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.DamageEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DamageEvent::IsInitialized() const {

  return true;
}

void DamageEvent::Swap(DamageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DamageEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void DamageEvent::UnsafeArenaSwap(DamageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DamageEvent::InternalSwap(DamageEvent* other) {
  std::swap(target_, other->target_);
  std::swap(source_, other->source_);
  std::swap(type_, other->type_);
  std::swap(spellid_, other->spellid_);
  std::swap(damage_, other->damage_);
  std::swap(force_, other->force_);
  std::swap(meleepush_xy_, other->meleepush_xy_);
  std::swap(meleepush_z_, other->meleepush_z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DamageEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DamageEvent_descriptor_;
  metadata.reflection = DamageEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DamageEvent

// optional uint32 target = 1;
void DamageEvent::clear_target() {
  target_ = 0u;
}
::google::protobuf::uint32 DamageEvent::target() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.target)
  return target_;
}
void DamageEvent::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.target)
}

// optional uint32 source = 2;
void DamageEvent::clear_source() {
  source_ = 0u;
}
::google::protobuf::uint32 DamageEvent::source() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.source)
  return source_;
}
void DamageEvent::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.source)
}

// optional uint32 type = 3;
void DamageEvent::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 DamageEvent::type() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.type)
  return type_;
}
void DamageEvent::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.type)
}

// optional uint32 spellid = 4;
void DamageEvent::clear_spellid() {
  spellid_ = 0u;
}
::google::protobuf::uint32 DamageEvent::spellid() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.spellid)
  return spellid_;
}
void DamageEvent::set_spellid(::google::protobuf::uint32 value) {
  
  spellid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.spellid)
}

// optional uint32 damage = 5;
void DamageEvent::clear_damage() {
  damage_ = 0u;
}
::google::protobuf::uint32 DamageEvent::damage() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.damage)
  return damage_;
}
void DamageEvent::set_damage(::google::protobuf::uint32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.damage)
}

// optional float force = 6;
void DamageEvent::clear_force() {
  force_ = 0;
}
float DamageEvent::force() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.force)
  return force_;
}
void DamageEvent::set_force(float value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.force)
}

// optional float meleepush_xy = 7;
void DamageEvent::clear_meleepush_xy() {
  meleepush_xy_ = 0;
}
float DamageEvent::meleepush_xy() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.meleepush_xy)
  return meleepush_xy_;
}
void DamageEvent::set_meleepush_xy(float value) {
  
  meleepush_xy_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.meleepush_xy)
}

// optional float meleepush_z = 8;
void DamageEvent::clear_meleepush_z() {
  meleepush_z_ = 0;
}
float DamageEvent::meleepush_z() const {
  // @@protoc_insertion_point(field_get:eqproto.DamageEvent.meleepush_z)
  return meleepush_z_;
}
void DamageEvent::set_meleepush_z(float value) {
  
  meleepush_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DamageEvent.meleepush_z)
}

inline const DamageEvent* DamageEvent::internal_default_instance() {
  return &DamageEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityEvent::kEntityIdFieldNumber;
const int EntityEvent::kTargetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityEvent::EntityEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.EntityEvent)
}
EntityEvent::EntityEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.EntityEvent)
}

void EntityEvent::InitAsDefaultInstance() {
}

EntityEvent::EntityEvent(const EntityEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.EntityEvent)
}

void EntityEvent::SharedCtor() {
  ::memset(&entity_id_, 0, reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&entity_id_) + sizeof(target_id_));
  _cached_size_ = 0;
}

EntityEvent::~EntityEvent() {
  // @@protoc_insertion_point(destructor:eqproto.EntityEvent)
  SharedDtor();
}

void EntityEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void EntityEvent::ArenaDtor(void* object) {
  EntityEvent* _this = reinterpret_cast< EntityEvent* >(object);
  (void)_this;
}
void EntityEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EntityEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityEvent_descriptor_;
}

const EntityEvent& EntityEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityEvent> EntityEvent_default_instance_;

EntityEvent* EntityEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<EntityEvent>(arena);
}

void EntityEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.EntityEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EntityEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EntityEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entity_id_, target_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool EntityEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.EntityEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 entity_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_target_id;
        break;
      }

      // optional uint32 target_id = 2;
      case 2: {
        if (tag == 16) {
         parse_target_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.EntityEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.EntityEvent)
  return false;
#undef DO_
}

void EntityEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.EntityEvent)
  // optional uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // optional uint32 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.EntityEvent)
}

::google::protobuf::uint8* EntityEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.EntityEvent)
  // optional uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // optional uint32 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.EntityEvent)
  return target;
}

size_t EntityEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.EntityEvent)
  size_t total_size = 0;

  // optional uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // optional uint32 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.EntityEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.EntityEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.EntityEvent)
    UnsafeMergeFrom(*source);
  }
}

void EntityEvent::MergeFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.EntityEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityEvent::UnsafeMergeFrom(const EntityEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
}

void EntityEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.EntityEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityEvent::CopyFrom(const EntityEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.EntityEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityEvent::IsInitialized() const {

  return true;
}

void EntityEvent::Swap(EntityEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EntityEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void EntityEvent::UnsafeArenaSwap(EntityEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EntityEvent::InternalSwap(EntityEvent* other) {
  std::swap(entity_id_, other->entity_id_);
  std::swap(target_id_, other->target_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityEvent_descriptor_;
  metadata.reflection = EntityEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityEvent

// optional uint32 entity_id = 1;
void EntityEvent::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityEvent::entity_id() const {
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.entity_id)
  return entity_id_;
}
void EntityEvent::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.EntityEvent.entity_id)
}

// optional uint32 target_id = 2;
void EntityEvent::clear_target_id() {
  target_id_ = 0u;
}
::google::protobuf::uint32 EntityEvent::target_id() const {
  // @@protoc_insertion_point(field_get:eqproto.EntityEvent.target_id)
  return target_id_;
}
void EntityEvent::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.EntityEvent.target_id)
}

inline const EntityEvent* EntityEvent::internal_default_instance() {
  return &EntityEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelMessageEvent::kTargetNameFieldNumber;
const int ChannelMessageEvent::kSenderFieldNumber;
const int ChannelMessageEvent::kLanguageFieldNumber;
const int ChannelMessageEvent::kNumberFieldNumber;
const int ChannelMessageEvent::kCmUnknown4FieldNumber;
const int ChannelMessageEvent::kSkillInLanguageFieldNumber;
const int ChannelMessageEvent::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelMessageEvent::ChannelMessageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.ChannelMessageEvent)
}
ChannelMessageEvent::ChannelMessageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.ChannelMessageEvent)
}

void ChannelMessageEvent::InitAsDefaultInstance() {
}

ChannelMessageEvent::ChannelMessageEvent(const ChannelMessageEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.ChannelMessageEvent)
}

void ChannelMessageEvent::SharedCtor() {
  target_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&language_, 0, reinterpret_cast<char*>(&skill_in_language_) -
    reinterpret_cast<char*>(&language_) + sizeof(skill_in_language_));
  _cached_size_ = 0;
}

ChannelMessageEvent::~ChannelMessageEvent() {
  // @@protoc_insertion_point(destructor:eqproto.ChannelMessageEvent)
  SharedDtor();
}

void ChannelMessageEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  target_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  sender_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  message_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ChannelMessageEvent::ArenaDtor(void* object) {
  ChannelMessageEvent* _this = reinterpret_cast< ChannelMessageEvent* >(object);
  (void)_this;
}
void ChannelMessageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ChannelMessageEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChannelMessageEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChannelMessageEvent_descriptor_;
}

const ChannelMessageEvent& ChannelMessageEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChannelMessageEvent> ChannelMessageEvent_default_instance_;

ChannelMessageEvent* ChannelMessageEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ChannelMessageEvent>(arena);
}

void ChannelMessageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.ChannelMessageEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChannelMessageEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChannelMessageEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(language_, skill_in_language_);
  target_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sender_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

}

bool ChannelMessageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.ChannelMessageEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string target_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_name().data(), this->target_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessageEvent.target_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sender;
        break;
      }

      // optional string sender = 2;
      case 2: {
        if (tag == 18) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessageEvent.sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_language;
        break;
      }

      // optional uint32 language = 3;
      case 3: {
        if (tag == 24) {
         parse_language:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_number;
        break;
      }

      // optional .eqproto.MessageType number = 4;
      case 4: {
        if (tag == 32) {
         parse_number:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::eqproto::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_cm_unknown4;
        break;
      }

      // optional uint32 cm_unknown4 = 5;
      case 5: {
        if (tag == 40) {
         parse_cm_unknown4:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cm_unknown4_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_skill_in_language;
        break;
      }

      // optional uint32 skill_in_language = 6;
      case 6: {
        if (tag == 48) {
         parse_skill_in_language:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_in_language_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_message;
        break;
      }

      // optional string message = 7;
      case 7: {
        if (tag == 58) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.ChannelMessageEvent.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.ChannelMessageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.ChannelMessageEvent)
  return false;
#undef DO_
}

void ChannelMessageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.ChannelMessageEvent)
  // optional string target_name = 1;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.target_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_name(), output);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // optional uint32 language = 3;
  if (this->language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->language(), output);
  }

  // optional .eqproto.MessageType number = 4;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->number(), output);
  }

  // optional uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->cm_unknown4(), output);
  }

  // optional uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->skill_in_language(), output);
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.ChannelMessageEvent)
}

::google::protobuf::uint8* ChannelMessageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.ChannelMessageEvent)
  // optional string target_name = 1;
  if (this->target_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_name().data(), this->target_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.target_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_name(), target);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // optional uint32 language = 3;
  if (this->language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->language(), target);
  }

  // optional .eqproto.MessageType number = 4;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->number(), target);
  }

  // optional uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->cm_unknown4(), target);
  }

  // optional uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->skill_in_language(), target);
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.ChannelMessageEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.ChannelMessageEvent)
  return target;
}

size_t ChannelMessageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.ChannelMessageEvent)
  size_t total_size = 0;

  // optional string target_name = 1;
  if (this->target_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_name());
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional uint32 language = 3;
  if (this->language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->language());
  }

  // optional .eqproto.MessageType number = 4;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // optional uint32 cm_unknown4 = 5;
  if (this->cm_unknown4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cm_unknown4());
  }

  // optional uint32 skill_in_language = 6;
  if (this->skill_in_language() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_in_language());
  }

  // optional string message = 7;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChannelMessageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.ChannelMessageEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChannelMessageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelMessageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.ChannelMessageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.ChannelMessageEvent)
    UnsafeMergeFrom(*source);
  }
}

void ChannelMessageEvent::MergeFrom(const ChannelMessageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.ChannelMessageEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChannelMessageEvent::UnsafeMergeFrom(const ChannelMessageEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.target_name().size() > 0) {
    set_target_name(from.target_name());
  }
  if (from.sender().size() > 0) {
    set_sender(from.sender());
  }
  if (from.language() != 0) {
    set_language(from.language());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.cm_unknown4() != 0) {
    set_cm_unknown4(from.cm_unknown4());
  }
  if (from.skill_in_language() != 0) {
    set_skill_in_language(from.skill_in_language());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
}

void ChannelMessageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.ChannelMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelMessageEvent::CopyFrom(const ChannelMessageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.ChannelMessageEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChannelMessageEvent::IsInitialized() const {

  return true;
}

void ChannelMessageEvent::Swap(ChannelMessageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ChannelMessageEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ChannelMessageEvent::UnsafeArenaSwap(ChannelMessageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ChannelMessageEvent::InternalSwap(ChannelMessageEvent* other) {
  target_name_.Swap(&other->target_name_);
  sender_.Swap(&other->sender_);
  std::swap(language_, other->language_);
  std::swap(number_, other->number_);
  std::swap(cm_unknown4_, other->cm_unknown4_);
  std::swap(skill_in_language_, other->skill_in_language_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChannelMessageEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChannelMessageEvent_descriptor_;
  metadata.reflection = ChannelMessageEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelMessageEvent

// optional string target_name = 1;
void ChannelMessageEvent::clear_target_name() {
  target_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessageEvent::target_name() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.target_name)
  return target_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessageEvent::set_target_name(const ::std::string& value) {
  
  target_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.target_name)
}
void ChannelMessageEvent::set_target_name(const char* value) {
  
  target_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.target_name)
}
void ChannelMessageEvent::set_target_name(const char* value,
    size_t size) {
  
  target_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.target_name)
}
::std::string* ChannelMessageEvent::mutable_target_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.target_name)
  return target_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::release_target_name() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.target_name)
  
  return target_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::unsafe_arena_release_target_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessageEvent.target_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return target_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessageEvent::set_allocated_target_name(::std::string* target_name) {
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.target_name)
}
void ChannelMessageEvent::unsafe_arena_set_allocated_target_name(
    ::std::string* target_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      target_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessageEvent.target_name)
}

// optional string sender = 2;
void ChannelMessageEvent::clear_sender() {
  sender_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessageEvent::sender() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.sender)
  return sender_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessageEvent::set_sender(const ::std::string& value) {
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.sender)
}
void ChannelMessageEvent::set_sender(const char* value) {
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.sender)
}
void ChannelMessageEvent::set_sender(const char* value,
    size_t size) {
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.sender)
}
::std::string* ChannelMessageEvent::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.sender)
  return sender_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::release_sender() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.sender)
  
  return sender_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::unsafe_arena_release_sender() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessageEvent.sender)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sender_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessageEvent::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.sender)
}
void ChannelMessageEvent::unsafe_arena_set_allocated_sender(
    ::std::string* sender) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sender, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessageEvent.sender)
}

// optional uint32 language = 3;
void ChannelMessageEvent::clear_language() {
  language_ = 0u;
}
::google::protobuf::uint32 ChannelMessageEvent::language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.language)
  return language_;
}
void ChannelMessageEvent::set_language(::google::protobuf::uint32 value) {
  
  language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.language)
}

// optional .eqproto.MessageType number = 4;
void ChannelMessageEvent::clear_number() {
  number_ = 0;
}
::eqproto::MessageType ChannelMessageEvent::number() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.number)
  return static_cast< ::eqproto::MessageType >(number_);
}
void ChannelMessageEvent::set_number(::eqproto::MessageType value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.number)
}

// optional uint32 cm_unknown4 = 5;
void ChannelMessageEvent::clear_cm_unknown4() {
  cm_unknown4_ = 0u;
}
::google::protobuf::uint32 ChannelMessageEvent::cm_unknown4() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.cm_unknown4)
  return cm_unknown4_;
}
void ChannelMessageEvent::set_cm_unknown4(::google::protobuf::uint32 value) {
  
  cm_unknown4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.cm_unknown4)
}

// optional uint32 skill_in_language = 6;
void ChannelMessageEvent::clear_skill_in_language() {
  skill_in_language_ = 0u;
}
::google::protobuf::uint32 ChannelMessageEvent::skill_in_language() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.skill_in_language)
  return skill_in_language_;
}
void ChannelMessageEvent::set_skill_in_language(::google::protobuf::uint32 value) {
  
  skill_in_language_ = value;
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.skill_in_language)
}

// optional string message = 7;
void ChannelMessageEvent::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ChannelMessageEvent::message() const {
  // @@protoc_insertion_point(field_get:eqproto.ChannelMessageEvent.message)
  return message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChannelMessageEvent::set_message(const ::std::string& value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.ChannelMessageEvent.message)
}
void ChannelMessageEvent::set_message(const char* value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.ChannelMessageEvent.message)
}
void ChannelMessageEvent::set_message(const char* value,
    size_t size) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.ChannelMessageEvent.message)
}
::std::string* ChannelMessageEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.ChannelMessageEvent.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.ChannelMessageEvent.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ChannelMessageEvent::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.ChannelMessageEvent.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ChannelMessageEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.ChannelMessageEvent.message)
}
void ChannelMessageEvent::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (message != NULL) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.ChannelMessageEvent.message)
}

inline const ChannelMessageEvent* ChannelMessageEvent::internal_default_instance() {
  return &ChannelMessageEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpecialMessageEvent::kHeaderFieldNumber;
const int SpecialMessageEvent::kNumberFieldNumber;
const int SpecialMessageEvent::kTargetSpawnIdFieldNumber;
const int SpecialMessageEvent::kSayerFieldNumber;
const int SpecialMessageEvent::kUnknown12FieldNumber;
const int SpecialMessageEvent::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpecialMessageEvent::SpecialMessageEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.SpecialMessageEvent)
}
SpecialMessageEvent::SpecialMessageEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.SpecialMessageEvent)
}

void SpecialMessageEvent::InitAsDefaultInstance() {
}

SpecialMessageEvent::SpecialMessageEvent(const SpecialMessageEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.SpecialMessageEvent)
}

void SpecialMessageEvent::SharedCtor() {
  header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sayer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&number_, 0, reinterpret_cast<char*>(&unknown12_) -
    reinterpret_cast<char*>(&number_) + sizeof(unknown12_));
  _cached_size_ = 0;
}

SpecialMessageEvent::~SpecialMessageEvent() {
  // @@protoc_insertion_point(destructor:eqproto.SpecialMessageEvent)
  SharedDtor();
}

void SpecialMessageEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  header_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  sayer_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  message_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void SpecialMessageEvent::ArenaDtor(void* object) {
  SpecialMessageEvent* _this = reinterpret_cast< SpecialMessageEvent* >(object);
  (void)_this;
}
void SpecialMessageEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SpecialMessageEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecialMessageEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpecialMessageEvent_descriptor_;
}

const SpecialMessageEvent& SpecialMessageEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SpecialMessageEvent> SpecialMessageEvent_default_instance_;

SpecialMessageEvent* SpecialMessageEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SpecialMessageEvent>(arena);
}

void SpecialMessageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.SpecialMessageEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SpecialMessageEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpecialMessageEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(number_, unknown12_);
  header_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sayer_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());

#undef ZR_HELPER_
#undef ZR_

}

bool SpecialMessageEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.SpecialMessageEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->header().data(), this->header().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpecialMessageEvent.header"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }

      // optional .eqproto.MessageType number = 2;
      case 2: {
        if (tag == 16) {
         parse_number:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_number(static_cast< ::eqproto::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_target_spawn_id;
        break;
      }

      // optional uint32 target_spawn_id = 3;
      case 3: {
        if (tag == 24) {
         parse_target_spawn_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sayer;
        break;
      }

      // optional string sayer = 4;
      case 4: {
        if (tag == 34) {
         parse_sayer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sayer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sayer().data(), this->sayer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpecialMessageEvent.sayer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unknown12;
        break;
      }

      // optional uint32 unknown12 = 5;
      case 5: {
        if (tag == 40) {
         parse_unknown12:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown12_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_message;
        break;
      }

      // optional string message = 6;
      case 6: {
        if (tag == 50) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpecialMessageEvent.message"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.SpecialMessageEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.SpecialMessageEvent)
  return false;
#undef DO_
}

void SpecialMessageEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.SpecialMessageEvent)
  // optional string header = 1;
  if (this->header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), this->header().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->header(), output);
  }

  // optional .eqproto.MessageType number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->number(), output);
  }

  // optional uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_spawn_id(), output);
  }

  // optional string sayer = 4;
  if (this->sayer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sayer().data(), this->sayer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.sayer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sayer(), output);
  }

  // optional uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown12(), output);
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.SpecialMessageEvent)
}

::google::protobuf::uint8* SpecialMessageEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.SpecialMessageEvent)
  // optional string header = 1;
  if (this->header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->header().data(), this->header().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->header(), target);
  }

  // optional .eqproto.MessageType number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->number(), target);
  }

  // optional uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_spawn_id(), target);
  }

  // optional string sayer = 4;
  if (this->sayer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sayer().data(), this->sayer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.sayer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sayer(), target);
  }

  // optional uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown12(), target);
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpecialMessageEvent.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.SpecialMessageEvent)
  return target;
}

size_t SpecialMessageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.SpecialMessageEvent)
  size_t total_size = 0;

  // optional string header = 1;
  if (this->header().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->header());
  }

  // optional .eqproto.MessageType number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->number());
  }

  // optional uint32 target_spawn_id = 3;
  if (this->target_spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_spawn_id());
  }

  // optional string sayer = 4;
  if (this->sayer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sayer());
  }

  // optional uint32 unknown12 = 5;
  if (this->unknown12() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown12());
  }

  // optional string message = 6;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecialMessageEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.SpecialMessageEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpecialMessageEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpecialMessageEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.SpecialMessageEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.SpecialMessageEvent)
    UnsafeMergeFrom(*source);
  }
}

void SpecialMessageEvent::MergeFrom(const SpecialMessageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.SpecialMessageEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SpecialMessageEvent::UnsafeMergeFrom(const SpecialMessageEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.header().size() > 0) {
    set_header(from.header());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.target_spawn_id() != 0) {
    set_target_spawn_id(from.target_spawn_id());
  }
  if (from.sayer().size() > 0) {
    set_sayer(from.sayer());
  }
  if (from.unknown12() != 0) {
    set_unknown12(from.unknown12());
  }
  if (from.message().size() > 0) {
    set_message(from.message());
  }
}

void SpecialMessageEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.SpecialMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecialMessageEvent::CopyFrom(const SpecialMessageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.SpecialMessageEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SpecialMessageEvent::IsInitialized() const {

  return true;
}

void SpecialMessageEvent::Swap(SpecialMessageEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SpecialMessageEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SpecialMessageEvent::UnsafeArenaSwap(SpecialMessageEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SpecialMessageEvent::InternalSwap(SpecialMessageEvent* other) {
  header_.Swap(&other->header_);
  std::swap(number_, other->number_);
  std::swap(target_spawn_id_, other->target_spawn_id_);
  sayer_.Swap(&other->sayer_);
  std::swap(unknown12_, other->unknown12_);
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpecialMessageEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpecialMessageEvent_descriptor_;
  metadata.reflection = SpecialMessageEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpecialMessageEvent

// optional string header = 1;
void SpecialMessageEvent::clear_header() {
  header_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpecialMessageEvent::header() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.header)
  return header_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpecialMessageEvent::set_header(const ::std::string& value) {
  
  header_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.header)
}
void SpecialMessageEvent::set_header(const char* value) {
  
  header_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpecialMessageEvent.header)
}
void SpecialMessageEvent::set_header(const char* value,
    size_t size) {
  
  header_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpecialMessageEvent.header)
}
::std::string* SpecialMessageEvent::mutable_header() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpecialMessageEvent.header)
  return header_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::release_header() {
  // @@protoc_insertion_point(field_release:eqproto.SpecialMessageEvent.header)
  
  return header_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpecialMessageEvent.header)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return header_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpecialMessageEvent::set_allocated_header(::std::string* header) {
  if (header != NULL) {
    
  } else {
    
  }
  header_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpecialMessageEvent.header)
}
void SpecialMessageEvent::unsafe_arena_set_allocated_header(
    ::std::string* header) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (header != NULL) {
    
  } else {
    
  }
  header_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      header, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpecialMessageEvent.header)
}

// optional .eqproto.MessageType number = 2;
void SpecialMessageEvent::clear_number() {
  number_ = 0;
}
::eqproto::MessageType SpecialMessageEvent::number() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.number)
  return static_cast< ::eqproto::MessageType >(number_);
}
void SpecialMessageEvent::set_number(::eqproto::MessageType value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.number)
}

// optional uint32 target_spawn_id = 3;
void SpecialMessageEvent::clear_target_spawn_id() {
  target_spawn_id_ = 0u;
}
::google::protobuf::uint32 SpecialMessageEvent::target_spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.target_spawn_id)
  return target_spawn_id_;
}
void SpecialMessageEvent::set_target_spawn_id(::google::protobuf::uint32 value) {
  
  target_spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.target_spawn_id)
}

// optional string sayer = 4;
void SpecialMessageEvent::clear_sayer() {
  sayer_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpecialMessageEvent::sayer() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.sayer)
  return sayer_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpecialMessageEvent::set_sayer(const ::std::string& value) {
  
  sayer_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.sayer)
}
void SpecialMessageEvent::set_sayer(const char* value) {
  
  sayer_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpecialMessageEvent.sayer)
}
void SpecialMessageEvent::set_sayer(const char* value,
    size_t size) {
  
  sayer_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpecialMessageEvent.sayer)
}
::std::string* SpecialMessageEvent::mutable_sayer() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpecialMessageEvent.sayer)
  return sayer_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::release_sayer() {
  // @@protoc_insertion_point(field_release:eqproto.SpecialMessageEvent.sayer)
  
  return sayer_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::unsafe_arena_release_sayer() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpecialMessageEvent.sayer)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sayer_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpecialMessageEvent::set_allocated_sayer(::std::string* sayer) {
  if (sayer != NULL) {
    
  } else {
    
  }
  sayer_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sayer,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpecialMessageEvent.sayer)
}
void SpecialMessageEvent::unsafe_arena_set_allocated_sayer(
    ::std::string* sayer) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sayer != NULL) {
    
  } else {
    
  }
  sayer_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sayer, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpecialMessageEvent.sayer)
}

// optional uint32 unknown12 = 5;
void SpecialMessageEvent::clear_unknown12() {
  unknown12_ = 0u;
}
::google::protobuf::uint32 SpecialMessageEvent::unknown12() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.unknown12)
  return unknown12_;
}
void SpecialMessageEvent::set_unknown12(::google::protobuf::uint32 value) {
  
  unknown12_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.unknown12)
}

// optional string message = 6;
void SpecialMessageEvent::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpecialMessageEvent::message() const {
  // @@protoc_insertion_point(field_get:eqproto.SpecialMessageEvent.message)
  return message_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpecialMessageEvent::set_message(const ::std::string& value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpecialMessageEvent.message)
}
void SpecialMessageEvent::set_message(const char* value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpecialMessageEvent.message)
}
void SpecialMessageEvent::set_message(const char* value,
    size_t size) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpecialMessageEvent.message)
}
::std::string* SpecialMessageEvent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpecialMessageEvent.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::release_message() {
  // @@protoc_insertion_point(field_release:eqproto.SpecialMessageEvent.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpecialMessageEvent::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpecialMessageEvent.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpecialMessageEvent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpecialMessageEvent.message)
}
void SpecialMessageEvent::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (message != NULL) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpecialMessageEvent.message)
}

inline const SpecialMessageEvent* SpecialMessageEvent::internal_default_instance() {
  return &SpecialMessageEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewZoneEvent::kCharNameFieldNumber;
const int NewZoneEvent::kZoneShortNameFieldNumber;
const int NewZoneEvent::kZoneLongNameFieldNumber;
const int NewZoneEvent::kZtypeFieldNumber;
const int NewZoneEvent::kFogRedFieldNumber;
const int NewZoneEvent::kFogGreenFieldNumber;
const int NewZoneEvent::kFogBlueFieldNumber;
const int NewZoneEvent::kUnknown323FieldNumber;
const int NewZoneEvent::kFogMinclipFieldNumber;
const int NewZoneEvent::kFogMaxclipFieldNumber;
const int NewZoneEvent::kGravityFieldNumber;
const int NewZoneEvent::kTimeTypeFieldNumber;
const int NewZoneEvent::kRainChanceFieldNumber;
const int NewZoneEvent::kRainDurationFieldNumber;
const int NewZoneEvent::kSnowChanceFieldNumber;
const int NewZoneEvent::kSnowDurationFieldNumber;
const int NewZoneEvent::kUnknown360FieldNumber;
const int NewZoneEvent::kSkyFieldNumber;
const int NewZoneEvent::kUnknown331FieldNumber;
const int NewZoneEvent::kZoneExpMultiplierFieldNumber;
const int NewZoneEvent::kSafeYFieldNumber;
const int NewZoneEvent::kSafeXFieldNumber;
const int NewZoneEvent::kSafeZFieldNumber;
const int NewZoneEvent::kMaxZFieldNumber;
const int NewZoneEvent::kUnderworldFieldNumber;
const int NewZoneEvent::kMinclipFieldNumber;
const int NewZoneEvent::kMaxclipFieldNumber;
const int NewZoneEvent::kUnknownEndFieldNumber;
const int NewZoneEvent::kZoneShortName2FieldNumber;
const int NewZoneEvent::kUnknown672FieldNumber;
const int NewZoneEvent::kZoneIdFieldNumber;
const int NewZoneEvent::kZoneInstanceFieldNumber;
const int NewZoneEvent::kUnknown688FieldNumber;
const int NewZoneEvent::kUnknown692FieldNumber;
const int NewZoneEvent::kFogDensityFieldNumber;
const int NewZoneEvent::kSuspendBuffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewZoneEvent::NewZoneEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.NewZoneEvent)
}
NewZoneEvent::NewZoneEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.NewZoneEvent)
}

void NewZoneEvent::InitAsDefaultInstance() {
}

NewZoneEvent::NewZoneEvent(const NewZoneEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.NewZoneEvent)
}

void NewZoneEvent::SharedCtor() {
  char_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_long_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zone_short_name2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unknown672_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ztype_, 0, reinterpret_cast<char*>(&suspend_buffs_) -
    reinterpret_cast<char*>(&ztype_) + sizeof(suspend_buffs_));
  _cached_size_ = 0;
}

NewZoneEvent::~NewZoneEvent() {
  // @@protoc_insertion_point(destructor:eqproto.NewZoneEvent)
  SharedDtor();
}

void NewZoneEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  char_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  zone_short_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  zone_long_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  zone_short_name2_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  unknown672_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void NewZoneEvent::ArenaDtor(void* object) {
  NewZoneEvent* _this = reinterpret_cast< NewZoneEvent* >(object);
  (void)_this;
}
void NewZoneEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void NewZoneEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewZoneEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewZoneEvent_descriptor_;
}

const NewZoneEvent& NewZoneEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NewZoneEvent> NewZoneEvent_default_instance_;

NewZoneEvent* NewZoneEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<NewZoneEvent>(arena);
}

void NewZoneEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.NewZoneEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NewZoneEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NewZoneEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ztype_, unknown323_);
  char_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_short_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  zone_long_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(fog_minclip_, snow_duration_);
  ZR_(unknown360_, max_z_);
  ZR_(underworld_, zone_instance_);
  zone_short_name2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  unknown672_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(unknown688_, suspend_buffs_);

#undef ZR_HELPER_
#undef ZR_

}

bool NewZoneEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.NewZoneEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string char_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_char_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->char_name().data(), this->char_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.NewZoneEvent.char_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_zone_short_name;
        break;
      }

      // optional string zone_short_name = 2;
      case 2: {
        if (tag == 18) {
         parse_zone_short_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_short_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_short_name().data(), this->zone_short_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.NewZoneEvent.zone_short_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_zone_long_name;
        break;
      }

      // optional string zone_long_name = 3;
      case 3: {
        if (tag == 26) {
         parse_zone_long_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_long_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_long_name().data(), this->zone_long_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.NewZoneEvent.zone_long_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ztype;
        break;
      }

      // optional uint32 ztype = 4;
      case 4: {
        if (tag == 32) {
         parse_ztype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ztype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_fog_red;
        break;
      }

      // optional uint32 fog_red = 5;
      case 5: {
        if (tag == 40) {
         parse_fog_red:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_red_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_fog_green;
        break;
      }

      // optional uint32 fog_green = 6;
      case 6: {
        if (tag == 48) {
         parse_fog_green:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_green_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_fog_blue;
        break;
      }

      // optional uint32 fog_blue = 7;
      case 7: {
        if (tag == 56) {
         parse_fog_blue:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_blue_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_unknown323;
        break;
      }

      // optional uint32 unknown323 = 8;
      case 8: {
        if (tag == 64) {
         parse_unknown323:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown323_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_fog_minclip;
        break;
      }

      // optional float fog_minclip = 9;
      case 9: {
        if (tag == 77) {
         parse_fog_minclip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_minclip_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_fog_maxclip;
        break;
      }

      // optional float fog_maxclip = 10;
      case 10: {
        if (tag == 85) {
         parse_fog_maxclip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_maxclip_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_gravity;
        break;
      }

      // optional float gravity = 11;
      case 11: {
        if (tag == 93) {
         parse_gravity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gravity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_time_type;
        break;
      }

      // optional uint32 time_type = 12;
      case 12: {
        if (tag == 96) {
         parse_time_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_rain_chance;
        break;
      }

      // optional uint32 rain_chance = 13;
      case 13: {
        if (tag == 104) {
         parse_rain_chance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rain_chance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_rain_duration;
        break;
      }

      // optional uint32 rain_duration = 14;
      case 14: {
        if (tag == 112) {
         parse_rain_duration:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rain_duration_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_snow_chance;
        break;
      }

      // optional uint32 snow_chance = 15;
      case 15: {
        if (tag == 120) {
         parse_snow_chance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snow_chance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_snow_duration;
        break;
      }

      // optional uint32 snow_duration = 16;
      case 16: {
        if (tag == 128) {
         parse_snow_duration:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snow_duration_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_unknown360;
        break;
      }

      // optional uint32 unknown360 = 17;
      case 17: {
        if (tag == 136) {
         parse_unknown360:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown360_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_sky;
        break;
      }

      // optional uint32 sky = 18;
      case 18: {
        if (tag == 144) {
         parse_sky:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sky_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_unknown331;
        break;
      }

      // optional uint32 unknown331 = 19;
      case 19: {
        if (tag == 152) {
         parse_unknown331:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown331_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(165)) goto parse_zone_exp_multiplier;
        break;
      }

      // optional float zone_exp_multiplier = 20;
      case 20: {
        if (tag == 165) {
         parse_zone_exp_multiplier:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zone_exp_multiplier_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(173)) goto parse_safe_y;
        break;
      }

      // optional float safe_y = 21;
      case 21: {
        if (tag == 173) {
         parse_safe_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(181)) goto parse_safe_x;
        break;
      }

      // optional float safe_x = 22;
      case 22: {
        if (tag == 181) {
         parse_safe_x:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(189)) goto parse_safe_z;
        break;
      }

      // optional float safe_z = 23;
      case 23: {
        if (tag == 189) {
         parse_safe_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &safe_z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(197)) goto parse_max_z;
        break;
      }

      // optional float max_z = 24;
      case 24: {
        if (tag == 197) {
         parse_max_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &max_z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(205)) goto parse_underworld;
        break;
      }

      // optional float underworld = 25;
      case 25: {
        if (tag == 205) {
         parse_underworld:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &underworld_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(213)) goto parse_minclip;
        break;
      }

      // optional float minclip = 26;
      case 26: {
        if (tag == 213) {
         parse_minclip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minclip_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(221)) goto parse_maxclip;
        break;
      }

      // optional float maxclip = 27;
      case 27: {
        if (tag == 221) {
         parse_maxclip:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxclip_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_unknown_end;
        break;
      }

      // optional uint32 unknown_end = 28;
      case 28: {
        if (tag == 224) {
         parse_unknown_end:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown_end_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_zone_short_name2;
        break;
      }

      // optional string zone_short_name2 = 29;
      case 29: {
        if (tag == 234) {
         parse_zone_short_name2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zone_short_name2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zone_short_name2().data(), this->zone_short_name2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.NewZoneEvent.zone_short_name2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_unknown672;
        break;
      }

      // optional string unknown672 = 30;
      case 30: {
        if (tag == 242) {
         parse_unknown672:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unknown672()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unknown672().data(), this->unknown672().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.NewZoneEvent.unknown672"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_zone_id;
        break;
      }

      // optional uint32 zone_id = 31;
      case 31: {
        if (tag == 248) {
         parse_zone_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zone_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_zone_instance;
        break;
      }

      // optional uint32 zone_instance = 32;
      case 32: {
        if (tag == 256) {
         parse_zone_instance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zone_instance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_unknown688;
        break;
      }

      // optional uint32 unknown688 = 33;
      case 33: {
        if (tag == 264) {
         parse_unknown688:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown688_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_unknown692;
        break;
      }

      // optional uint32 unknown692 = 34;
      case 34: {
        if (tag == 272) {
         parse_unknown692:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown692_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(285)) goto parse_fog_density;
        break;
      }

      // optional float fog_density = 35;
      case 35: {
        if (tag == 285) {
         parse_fog_density:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fog_density_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_suspend_buffs;
        break;
      }

      // optional uint32 suspend_buffs = 36;
      case 36: {
        if (tag == 288) {
         parse_suspend_buffs:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suspend_buffs_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.NewZoneEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.NewZoneEvent)
  return false;
#undef DO_
}

void NewZoneEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.NewZoneEvent)
  // optional string char_name = 1;
  if (this->char_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char_name().data(), this->char_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.char_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->char_name(), output);
  }

  // optional string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name().data(), this->zone_short_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_short_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->zone_short_name(), output);
  }

  // optional string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_long_name().data(), this->zone_long_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_long_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->zone_long_name(), output);
  }

  // optional uint32 ztype = 4;
  if (this->ztype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ztype(), output);
  }

  // optional uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fog_red(), output);
  }

  // optional uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->fog_green(), output);
  }

  // optional uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->fog_blue(), output);
  }

  // optional uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->unknown323(), output);
  }

  // optional float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->fog_minclip(), output);
  }

  // optional float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fog_maxclip(), output);
  }

  // optional float gravity = 11;
  if (this->gravity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->gravity(), output);
  }

  // optional uint32 time_type = 12;
  if (this->time_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->time_type(), output);
  }

  // optional uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->rain_chance(), output);
  }

  // optional uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->rain_duration(), output);
  }

  // optional uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->snow_chance(), output);
  }

  // optional uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->snow_duration(), output);
  }

  // optional uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->unknown360(), output);
  }

  // optional uint32 sky = 18;
  if (this->sky() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->sky(), output);
  }

  // optional uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->unknown331(), output);
  }

  // optional float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->zone_exp_multiplier(), output);
  }

  // optional float safe_y = 21;
  if (this->safe_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->safe_y(), output);
  }

  // optional float safe_x = 22;
  if (this->safe_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->safe_x(), output);
  }

  // optional float safe_z = 23;
  if (this->safe_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->safe_z(), output);
  }

  // optional float max_z = 24;
  if (this->max_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->max_z(), output);
  }

  // optional float underworld = 25;
  if (this->underworld() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(25, this->underworld(), output);
  }

  // optional float minclip = 26;
  if (this->minclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->minclip(), output);
  }

  // optional float maxclip = 27;
  if (this->maxclip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(27, this->maxclip(), output);
  }

  // optional uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->unknown_end(), output);
  }

  // optional string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name2().data(), this->zone_short_name2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_short_name2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->zone_short_name2(), output);
  }

  // optional string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unknown672().data(), this->unknown672().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.unknown672");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->unknown672(), output);
  }

  // optional uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->zone_id(), output);
  }

  // optional uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->zone_instance(), output);
  }

  // optional uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->unknown688(), output);
  }

  // optional uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->unknown692(), output);
  }

  // optional float fog_density = 35;
  if (this->fog_density() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(35, this->fog_density(), output);
  }

  // optional uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->suspend_buffs(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.NewZoneEvent)
}

::google::protobuf::uint8* NewZoneEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.NewZoneEvent)
  // optional string char_name = 1;
  if (this->char_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char_name().data(), this->char_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.char_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->char_name(), target);
  }

  // optional string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name().data(), this->zone_short_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_short_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->zone_short_name(), target);
  }

  // optional string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_long_name().data(), this->zone_long_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_long_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->zone_long_name(), target);
  }

  // optional uint32 ztype = 4;
  if (this->ztype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ztype(), target);
  }

  // optional uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fog_red(), target);
  }

  // optional uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->fog_green(), target);
  }

  // optional uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->fog_blue(), target);
  }

  // optional uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->unknown323(), target);
  }

  // optional float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->fog_minclip(), target);
  }

  // optional float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fog_maxclip(), target);
  }

  // optional float gravity = 11;
  if (this->gravity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->gravity(), target);
  }

  // optional uint32 time_type = 12;
  if (this->time_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->time_type(), target);
  }

  // optional uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->rain_chance(), target);
  }

  // optional uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->rain_duration(), target);
  }

  // optional uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->snow_chance(), target);
  }

  // optional uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->snow_duration(), target);
  }

  // optional uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->unknown360(), target);
  }

  // optional uint32 sky = 18;
  if (this->sky() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->sky(), target);
  }

  // optional uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->unknown331(), target);
  }

  // optional float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->zone_exp_multiplier(), target);
  }

  // optional float safe_y = 21;
  if (this->safe_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->safe_y(), target);
  }

  // optional float safe_x = 22;
  if (this->safe_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->safe_x(), target);
  }

  // optional float safe_z = 23;
  if (this->safe_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->safe_z(), target);
  }

  // optional float max_z = 24;
  if (this->max_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->max_z(), target);
  }

  // optional float underworld = 25;
  if (this->underworld() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(25, this->underworld(), target);
  }

  // optional float minclip = 26;
  if (this->minclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->minclip(), target);
  }

  // optional float maxclip = 27;
  if (this->maxclip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(27, this->maxclip(), target);
  }

  // optional uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->unknown_end(), target);
  }

  // optional string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zone_short_name2().data(), this->zone_short_name2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.zone_short_name2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->zone_short_name2(), target);
  }

  // optional string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unknown672().data(), this->unknown672().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.NewZoneEvent.unknown672");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->unknown672(), target);
  }

  // optional uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->zone_id(), target);
  }

  // optional uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->zone_instance(), target);
  }

  // optional uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->unknown688(), target);
  }

  // optional uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->unknown692(), target);
  }

  // optional float fog_density = 35;
  if (this->fog_density() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(35, this->fog_density(), target);
  }

  // optional uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->suspend_buffs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.NewZoneEvent)
  return target;
}

size_t NewZoneEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.NewZoneEvent)
  size_t total_size = 0;

  // optional string char_name = 1;
  if (this->char_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->char_name());
  }

  // optional string zone_short_name = 2;
  if (this->zone_short_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_short_name());
  }

  // optional string zone_long_name = 3;
  if (this->zone_long_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_long_name());
  }

  // optional uint32 ztype = 4;
  if (this->ztype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ztype());
  }

  // optional uint32 fog_red = 5;
  if (this->fog_red() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_red());
  }

  // optional uint32 fog_green = 6;
  if (this->fog_green() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_green());
  }

  // optional uint32 fog_blue = 7;
  if (this->fog_blue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_blue());
  }

  // optional uint32 unknown323 = 8;
  if (this->unknown323() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown323());
  }

  // optional float fog_minclip = 9;
  if (this->fog_minclip() != 0) {
    total_size += 1 + 4;
  }

  // optional float fog_maxclip = 10;
  if (this->fog_maxclip() != 0) {
    total_size += 1 + 4;
  }

  // optional float gravity = 11;
  if (this->gravity() != 0) {
    total_size += 1 + 4;
  }

  // optional uint32 time_type = 12;
  if (this->time_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_type());
  }

  // optional uint32 rain_chance = 13;
  if (this->rain_chance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rain_chance());
  }

  // optional uint32 rain_duration = 14;
  if (this->rain_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rain_duration());
  }

  // optional uint32 snow_chance = 15;
  if (this->snow_chance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->snow_chance());
  }

  // optional uint32 snow_duration = 16;
  if (this->snow_duration() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->snow_duration());
  }

  // optional uint32 unknown360 = 17;
  if (this->unknown360() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown360());
  }

  // optional uint32 sky = 18;
  if (this->sky() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sky());
  }

  // optional uint32 unknown331 = 19;
  if (this->unknown331() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown331());
  }

  // optional float zone_exp_multiplier = 20;
  if (this->zone_exp_multiplier() != 0) {
    total_size += 2 + 4;
  }

  // optional float safe_y = 21;
  if (this->safe_y() != 0) {
    total_size += 2 + 4;
  }

  // optional float safe_x = 22;
  if (this->safe_x() != 0) {
    total_size += 2 + 4;
  }

  // optional float safe_z = 23;
  if (this->safe_z() != 0) {
    total_size += 2 + 4;
  }

  // optional float max_z = 24;
  if (this->max_z() != 0) {
    total_size += 2 + 4;
  }

  // optional float underworld = 25;
  if (this->underworld() != 0) {
    total_size += 2 + 4;
  }

  // optional float minclip = 26;
  if (this->minclip() != 0) {
    total_size += 2 + 4;
  }

  // optional float maxclip = 27;
  if (this->maxclip() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 unknown_end = 28;
  if (this->unknown_end() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown_end());
  }

  // optional string zone_short_name2 = 29;
  if (this->zone_short_name2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zone_short_name2());
  }

  // optional string unknown672 = 30;
  if (this->unknown672().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unknown672());
  }

  // optional uint32 zone_id = 31;
  if (this->zone_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zone_id());
  }

  // optional uint32 zone_instance = 32;
  if (this->zone_instance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zone_instance());
  }

  // optional uint32 unknown688 = 33;
  if (this->unknown688() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown688());
  }

  // optional uint32 unknown692 = 34;
  if (this->unknown692() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown692());
  }

  // optional float fog_density = 35;
  if (this->fog_density() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 suspend_buffs = 36;
  if (this->suspend_buffs() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suspend_buffs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewZoneEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.NewZoneEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NewZoneEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewZoneEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.NewZoneEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.NewZoneEvent)
    UnsafeMergeFrom(*source);
  }
}

void NewZoneEvent::MergeFrom(const NewZoneEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.NewZoneEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NewZoneEvent::UnsafeMergeFrom(const NewZoneEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.char_name().size() > 0) {
    set_char_name(from.char_name());
  }
  if (from.zone_short_name().size() > 0) {
    set_zone_short_name(from.zone_short_name());
  }
  if (from.zone_long_name().size() > 0) {
    set_zone_long_name(from.zone_long_name());
  }
  if (from.ztype() != 0) {
    set_ztype(from.ztype());
  }
  if (from.fog_red() != 0) {
    set_fog_red(from.fog_red());
  }
  if (from.fog_green() != 0) {
    set_fog_green(from.fog_green());
  }
  if (from.fog_blue() != 0) {
    set_fog_blue(from.fog_blue());
  }
  if (from.unknown323() != 0) {
    set_unknown323(from.unknown323());
  }
  if (from.fog_minclip() != 0) {
    set_fog_minclip(from.fog_minclip());
  }
  if (from.fog_maxclip() != 0) {
    set_fog_maxclip(from.fog_maxclip());
  }
  if (from.gravity() != 0) {
    set_gravity(from.gravity());
  }
  if (from.time_type() != 0) {
    set_time_type(from.time_type());
  }
  if (from.rain_chance() != 0) {
    set_rain_chance(from.rain_chance());
  }
  if (from.rain_duration() != 0) {
    set_rain_duration(from.rain_duration());
  }
  if (from.snow_chance() != 0) {
    set_snow_chance(from.snow_chance());
  }
  if (from.snow_duration() != 0) {
    set_snow_duration(from.snow_duration());
  }
  if (from.unknown360() != 0) {
    set_unknown360(from.unknown360());
  }
  if (from.sky() != 0) {
    set_sky(from.sky());
  }
  if (from.unknown331() != 0) {
    set_unknown331(from.unknown331());
  }
  if (from.zone_exp_multiplier() != 0) {
    set_zone_exp_multiplier(from.zone_exp_multiplier());
  }
  if (from.safe_y() != 0) {
    set_safe_y(from.safe_y());
  }
  if (from.safe_x() != 0) {
    set_safe_x(from.safe_x());
  }
  if (from.safe_z() != 0) {
    set_safe_z(from.safe_z());
  }
  if (from.max_z() != 0) {
    set_max_z(from.max_z());
  }
  if (from.underworld() != 0) {
    set_underworld(from.underworld());
  }
  if (from.minclip() != 0) {
    set_minclip(from.minclip());
  }
  if (from.maxclip() != 0) {
    set_maxclip(from.maxclip());
  }
  if (from.unknown_end() != 0) {
    set_unknown_end(from.unknown_end());
  }
  if (from.zone_short_name2().size() > 0) {
    set_zone_short_name2(from.zone_short_name2());
  }
  if (from.unknown672().size() > 0) {
    set_unknown672(from.unknown672());
  }
  if (from.zone_id() != 0) {
    set_zone_id(from.zone_id());
  }
  if (from.zone_instance() != 0) {
    set_zone_instance(from.zone_instance());
  }
  if (from.unknown688() != 0) {
    set_unknown688(from.unknown688());
  }
  if (from.unknown692() != 0) {
    set_unknown692(from.unknown692());
  }
  if (from.fog_density() != 0) {
    set_fog_density(from.fog_density());
  }
  if (from.suspend_buffs() != 0) {
    set_suspend_buffs(from.suspend_buffs());
  }
}

void NewZoneEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.NewZoneEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewZoneEvent::CopyFrom(const NewZoneEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.NewZoneEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NewZoneEvent::IsInitialized() const {

  return true;
}

void NewZoneEvent::Swap(NewZoneEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    NewZoneEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void NewZoneEvent::UnsafeArenaSwap(NewZoneEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void NewZoneEvent::InternalSwap(NewZoneEvent* other) {
  char_name_.Swap(&other->char_name_);
  zone_short_name_.Swap(&other->zone_short_name_);
  zone_long_name_.Swap(&other->zone_long_name_);
  std::swap(ztype_, other->ztype_);
  std::swap(fog_red_, other->fog_red_);
  std::swap(fog_green_, other->fog_green_);
  std::swap(fog_blue_, other->fog_blue_);
  std::swap(unknown323_, other->unknown323_);
  std::swap(fog_minclip_, other->fog_minclip_);
  std::swap(fog_maxclip_, other->fog_maxclip_);
  std::swap(gravity_, other->gravity_);
  std::swap(time_type_, other->time_type_);
  std::swap(rain_chance_, other->rain_chance_);
  std::swap(rain_duration_, other->rain_duration_);
  std::swap(snow_chance_, other->snow_chance_);
  std::swap(snow_duration_, other->snow_duration_);
  std::swap(unknown360_, other->unknown360_);
  std::swap(sky_, other->sky_);
  std::swap(unknown331_, other->unknown331_);
  std::swap(zone_exp_multiplier_, other->zone_exp_multiplier_);
  std::swap(safe_y_, other->safe_y_);
  std::swap(safe_x_, other->safe_x_);
  std::swap(safe_z_, other->safe_z_);
  std::swap(max_z_, other->max_z_);
  std::swap(underworld_, other->underworld_);
  std::swap(minclip_, other->minclip_);
  std::swap(maxclip_, other->maxclip_);
  std::swap(unknown_end_, other->unknown_end_);
  zone_short_name2_.Swap(&other->zone_short_name2_);
  unknown672_.Swap(&other->unknown672_);
  std::swap(zone_id_, other->zone_id_);
  std::swap(zone_instance_, other->zone_instance_);
  std::swap(unknown688_, other->unknown688_);
  std::swap(unknown692_, other->unknown692_);
  std::swap(fog_density_, other->fog_density_);
  std::swap(suspend_buffs_, other->suspend_buffs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewZoneEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewZoneEvent_descriptor_;
  metadata.reflection = NewZoneEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewZoneEvent

// optional string char_name = 1;
void NewZoneEvent::clear_char_name() {
  char_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& NewZoneEvent::char_name() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.char_name)
  return char_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewZoneEvent::set_char_name(const ::std::string& value) {
  
  char_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.char_name)
}
void NewZoneEvent::set_char_name(const char* value) {
  
  char_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.NewZoneEvent.char_name)
}
void NewZoneEvent::set_char_name(const char* value,
    size_t size) {
  
  char_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.NewZoneEvent.char_name)
}
::std::string* NewZoneEvent::mutable_char_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.NewZoneEvent.char_name)
  return char_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::release_char_name() {
  // @@protoc_insertion_point(field_release:eqproto.NewZoneEvent.char_name)
  
  return char_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::unsafe_arena_release_char_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.NewZoneEvent.char_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return char_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void NewZoneEvent::set_allocated_char_name(::std::string* char_name) {
  if (char_name != NULL) {
    
  } else {
    
  }
  char_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), char_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.NewZoneEvent.char_name)
}
void NewZoneEvent::unsafe_arena_set_allocated_char_name(
    ::std::string* char_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (char_name != NULL) {
    
  } else {
    
  }
  char_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      char_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.NewZoneEvent.char_name)
}

// optional string zone_short_name = 2;
void NewZoneEvent::clear_zone_short_name() {
  zone_short_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& NewZoneEvent::zone_short_name() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_short_name)
  return zone_short_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewZoneEvent::set_zone_short_name(const ::std::string& value) {
  
  zone_short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_short_name)
}
void NewZoneEvent::set_zone_short_name(const char* value) {
  
  zone_short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.NewZoneEvent.zone_short_name)
}
void NewZoneEvent::set_zone_short_name(const char* value,
    size_t size) {
  
  zone_short_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.NewZoneEvent.zone_short_name)
}
::std::string* NewZoneEvent::mutable_zone_short_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.NewZoneEvent.zone_short_name)
  return zone_short_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::release_zone_short_name() {
  // @@protoc_insertion_point(field_release:eqproto.NewZoneEvent.zone_short_name)
  
  return zone_short_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::unsafe_arena_release_zone_short_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.NewZoneEvent.zone_short_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return zone_short_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void NewZoneEvent::set_allocated_zone_short_name(::std::string* zone_short_name) {
  if (zone_short_name != NULL) {
    
  } else {
    
  }
  zone_short_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone_short_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.NewZoneEvent.zone_short_name)
}
void NewZoneEvent::unsafe_arena_set_allocated_zone_short_name(
    ::std::string* zone_short_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (zone_short_name != NULL) {
    
  } else {
    
  }
  zone_short_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      zone_short_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.NewZoneEvent.zone_short_name)
}

// optional string zone_long_name = 3;
void NewZoneEvent::clear_zone_long_name() {
  zone_long_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& NewZoneEvent::zone_long_name() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_long_name)
  return zone_long_name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewZoneEvent::set_zone_long_name(const ::std::string& value) {
  
  zone_long_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_long_name)
}
void NewZoneEvent::set_zone_long_name(const char* value) {
  
  zone_long_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.NewZoneEvent.zone_long_name)
}
void NewZoneEvent::set_zone_long_name(const char* value,
    size_t size) {
  
  zone_long_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.NewZoneEvent.zone_long_name)
}
::std::string* NewZoneEvent::mutable_zone_long_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.NewZoneEvent.zone_long_name)
  return zone_long_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::release_zone_long_name() {
  // @@protoc_insertion_point(field_release:eqproto.NewZoneEvent.zone_long_name)
  
  return zone_long_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::unsafe_arena_release_zone_long_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.NewZoneEvent.zone_long_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return zone_long_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void NewZoneEvent::set_allocated_zone_long_name(::std::string* zone_long_name) {
  if (zone_long_name != NULL) {
    
  } else {
    
  }
  zone_long_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone_long_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.NewZoneEvent.zone_long_name)
}
void NewZoneEvent::unsafe_arena_set_allocated_zone_long_name(
    ::std::string* zone_long_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (zone_long_name != NULL) {
    
  } else {
    
  }
  zone_long_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      zone_long_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.NewZoneEvent.zone_long_name)
}

// optional uint32 ztype = 4;
void NewZoneEvent::clear_ztype() {
  ztype_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::ztype() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.ztype)
  return ztype_;
}
void NewZoneEvent::set_ztype(::google::protobuf::uint32 value) {
  
  ztype_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.ztype)
}

// optional uint32 fog_red = 5;
void NewZoneEvent::clear_fog_red() {
  fog_red_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::fog_red() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_red)
  return fog_red_;
}
void NewZoneEvent::set_fog_red(::google::protobuf::uint32 value) {
  
  fog_red_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_red)
}

// optional uint32 fog_green = 6;
void NewZoneEvent::clear_fog_green() {
  fog_green_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::fog_green() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_green)
  return fog_green_;
}
void NewZoneEvent::set_fog_green(::google::protobuf::uint32 value) {
  
  fog_green_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_green)
}

// optional uint32 fog_blue = 7;
void NewZoneEvent::clear_fog_blue() {
  fog_blue_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::fog_blue() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_blue)
  return fog_blue_;
}
void NewZoneEvent::set_fog_blue(::google::protobuf::uint32 value) {
  
  fog_blue_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_blue)
}

// optional uint32 unknown323 = 8;
void NewZoneEvent::clear_unknown323() {
  unknown323_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown323() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown323)
  return unknown323_;
}
void NewZoneEvent::set_unknown323(::google::protobuf::uint32 value) {
  
  unknown323_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown323)
}

// optional float fog_minclip = 9;
void NewZoneEvent::clear_fog_minclip() {
  fog_minclip_ = 0;
}
float NewZoneEvent::fog_minclip() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_minclip)
  return fog_minclip_;
}
void NewZoneEvent::set_fog_minclip(float value) {
  
  fog_minclip_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_minclip)
}

// optional float fog_maxclip = 10;
void NewZoneEvent::clear_fog_maxclip() {
  fog_maxclip_ = 0;
}
float NewZoneEvent::fog_maxclip() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_maxclip)
  return fog_maxclip_;
}
void NewZoneEvent::set_fog_maxclip(float value) {
  
  fog_maxclip_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_maxclip)
}

// optional float gravity = 11;
void NewZoneEvent::clear_gravity() {
  gravity_ = 0;
}
float NewZoneEvent::gravity() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.gravity)
  return gravity_;
}
void NewZoneEvent::set_gravity(float value) {
  
  gravity_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.gravity)
}

// optional uint32 time_type = 12;
void NewZoneEvent::clear_time_type() {
  time_type_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::time_type() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.time_type)
  return time_type_;
}
void NewZoneEvent::set_time_type(::google::protobuf::uint32 value) {
  
  time_type_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.time_type)
}

// optional uint32 rain_chance = 13;
void NewZoneEvent::clear_rain_chance() {
  rain_chance_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::rain_chance() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.rain_chance)
  return rain_chance_;
}
void NewZoneEvent::set_rain_chance(::google::protobuf::uint32 value) {
  
  rain_chance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.rain_chance)
}

// optional uint32 rain_duration = 14;
void NewZoneEvent::clear_rain_duration() {
  rain_duration_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::rain_duration() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.rain_duration)
  return rain_duration_;
}
void NewZoneEvent::set_rain_duration(::google::protobuf::uint32 value) {
  
  rain_duration_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.rain_duration)
}

// optional uint32 snow_chance = 15;
void NewZoneEvent::clear_snow_chance() {
  snow_chance_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::snow_chance() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.snow_chance)
  return snow_chance_;
}
void NewZoneEvent::set_snow_chance(::google::protobuf::uint32 value) {
  
  snow_chance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.snow_chance)
}

// optional uint32 snow_duration = 16;
void NewZoneEvent::clear_snow_duration() {
  snow_duration_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::snow_duration() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.snow_duration)
  return snow_duration_;
}
void NewZoneEvent::set_snow_duration(::google::protobuf::uint32 value) {
  
  snow_duration_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.snow_duration)
}

// optional uint32 unknown360 = 17;
void NewZoneEvent::clear_unknown360() {
  unknown360_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown360() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown360)
  return unknown360_;
}
void NewZoneEvent::set_unknown360(::google::protobuf::uint32 value) {
  
  unknown360_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown360)
}

// optional uint32 sky = 18;
void NewZoneEvent::clear_sky() {
  sky_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::sky() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.sky)
  return sky_;
}
void NewZoneEvent::set_sky(::google::protobuf::uint32 value) {
  
  sky_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.sky)
}

// optional uint32 unknown331 = 19;
void NewZoneEvent::clear_unknown331() {
  unknown331_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown331() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown331)
  return unknown331_;
}
void NewZoneEvent::set_unknown331(::google::protobuf::uint32 value) {
  
  unknown331_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown331)
}

// optional float zone_exp_multiplier = 20;
void NewZoneEvent::clear_zone_exp_multiplier() {
  zone_exp_multiplier_ = 0;
}
float NewZoneEvent::zone_exp_multiplier() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_exp_multiplier)
  return zone_exp_multiplier_;
}
void NewZoneEvent::set_zone_exp_multiplier(float value) {
  
  zone_exp_multiplier_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_exp_multiplier)
}

// optional float safe_y = 21;
void NewZoneEvent::clear_safe_y() {
  safe_y_ = 0;
}
float NewZoneEvent::safe_y() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.safe_y)
  return safe_y_;
}
void NewZoneEvent::set_safe_y(float value) {
  
  safe_y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.safe_y)
}

// optional float safe_x = 22;
void NewZoneEvent::clear_safe_x() {
  safe_x_ = 0;
}
float NewZoneEvent::safe_x() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.safe_x)
  return safe_x_;
}
void NewZoneEvent::set_safe_x(float value) {
  
  safe_x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.safe_x)
}

// optional float safe_z = 23;
void NewZoneEvent::clear_safe_z() {
  safe_z_ = 0;
}
float NewZoneEvent::safe_z() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.safe_z)
  return safe_z_;
}
void NewZoneEvent::set_safe_z(float value) {
  
  safe_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.safe_z)
}

// optional float max_z = 24;
void NewZoneEvent::clear_max_z() {
  max_z_ = 0;
}
float NewZoneEvent::max_z() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.max_z)
  return max_z_;
}
void NewZoneEvent::set_max_z(float value) {
  
  max_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.max_z)
}

// optional float underworld = 25;
void NewZoneEvent::clear_underworld() {
  underworld_ = 0;
}
float NewZoneEvent::underworld() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.underworld)
  return underworld_;
}
void NewZoneEvent::set_underworld(float value) {
  
  underworld_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.underworld)
}

// optional float minclip = 26;
void NewZoneEvent::clear_minclip() {
  minclip_ = 0;
}
float NewZoneEvent::minclip() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.minclip)
  return minclip_;
}
void NewZoneEvent::set_minclip(float value) {
  
  minclip_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.minclip)
}

// optional float maxclip = 27;
void NewZoneEvent::clear_maxclip() {
  maxclip_ = 0;
}
float NewZoneEvent::maxclip() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.maxclip)
  return maxclip_;
}
void NewZoneEvent::set_maxclip(float value) {
  
  maxclip_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.maxclip)
}

// optional uint32 unknown_end = 28;
void NewZoneEvent::clear_unknown_end() {
  unknown_end_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown_end() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown_end)
  return unknown_end_;
}
void NewZoneEvent::set_unknown_end(::google::protobuf::uint32 value) {
  
  unknown_end_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown_end)
}

// optional string zone_short_name2 = 29;
void NewZoneEvent::clear_zone_short_name2() {
  zone_short_name2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& NewZoneEvent::zone_short_name2() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_short_name2)
  return zone_short_name2_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewZoneEvent::set_zone_short_name2(const ::std::string& value) {
  
  zone_short_name2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_short_name2)
}
void NewZoneEvent::set_zone_short_name2(const char* value) {
  
  zone_short_name2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.NewZoneEvent.zone_short_name2)
}
void NewZoneEvent::set_zone_short_name2(const char* value,
    size_t size) {
  
  zone_short_name2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.NewZoneEvent.zone_short_name2)
}
::std::string* NewZoneEvent::mutable_zone_short_name2() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.NewZoneEvent.zone_short_name2)
  return zone_short_name2_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::release_zone_short_name2() {
  // @@protoc_insertion_point(field_release:eqproto.NewZoneEvent.zone_short_name2)
  
  return zone_short_name2_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::unsafe_arena_release_zone_short_name2() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.NewZoneEvent.zone_short_name2)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return zone_short_name2_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void NewZoneEvent::set_allocated_zone_short_name2(::std::string* zone_short_name2) {
  if (zone_short_name2 != NULL) {
    
  } else {
    
  }
  zone_short_name2_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zone_short_name2,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.NewZoneEvent.zone_short_name2)
}
void NewZoneEvent::unsafe_arena_set_allocated_zone_short_name2(
    ::std::string* zone_short_name2) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (zone_short_name2 != NULL) {
    
  } else {
    
  }
  zone_short_name2_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      zone_short_name2, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.NewZoneEvent.zone_short_name2)
}

// optional string unknown672 = 30;
void NewZoneEvent::clear_unknown672() {
  unknown672_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& NewZoneEvent::unknown672() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown672)
  return unknown672_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewZoneEvent::set_unknown672(const ::std::string& value) {
  
  unknown672_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown672)
}
void NewZoneEvent::set_unknown672(const char* value) {
  
  unknown672_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.NewZoneEvent.unknown672)
}
void NewZoneEvent::set_unknown672(const char* value,
    size_t size) {
  
  unknown672_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.NewZoneEvent.unknown672)
}
::std::string* NewZoneEvent::mutable_unknown672() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.NewZoneEvent.unknown672)
  return unknown672_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::release_unknown672() {
  // @@protoc_insertion_point(field_release:eqproto.NewZoneEvent.unknown672)
  
  return unknown672_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* NewZoneEvent::unsafe_arena_release_unknown672() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.NewZoneEvent.unknown672)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return unknown672_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void NewZoneEvent::set_allocated_unknown672(::std::string* unknown672) {
  if (unknown672 != NULL) {
    
  } else {
    
  }
  unknown672_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unknown672,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.NewZoneEvent.unknown672)
}
void NewZoneEvent::unsafe_arena_set_allocated_unknown672(
    ::std::string* unknown672) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (unknown672 != NULL) {
    
  } else {
    
  }
  unknown672_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      unknown672, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.NewZoneEvent.unknown672)
}

// optional uint32 zone_id = 31;
void NewZoneEvent::clear_zone_id() {
  zone_id_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::zone_id() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_id)
  return zone_id_;
}
void NewZoneEvent::set_zone_id(::google::protobuf::uint32 value) {
  
  zone_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_id)
}

// optional uint32 zone_instance = 32;
void NewZoneEvent::clear_zone_instance() {
  zone_instance_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::zone_instance() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.zone_instance)
  return zone_instance_;
}
void NewZoneEvent::set_zone_instance(::google::protobuf::uint32 value) {
  
  zone_instance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.zone_instance)
}

// optional uint32 unknown688 = 33;
void NewZoneEvent::clear_unknown688() {
  unknown688_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown688() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown688)
  return unknown688_;
}
void NewZoneEvent::set_unknown688(::google::protobuf::uint32 value) {
  
  unknown688_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown688)
}

// optional uint32 unknown692 = 34;
void NewZoneEvent::clear_unknown692() {
  unknown692_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::unknown692() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.unknown692)
  return unknown692_;
}
void NewZoneEvent::set_unknown692(::google::protobuf::uint32 value) {
  
  unknown692_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.unknown692)
}

// optional float fog_density = 35;
void NewZoneEvent::clear_fog_density() {
  fog_density_ = 0;
}
float NewZoneEvent::fog_density() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.fog_density)
  return fog_density_;
}
void NewZoneEvent::set_fog_density(float value) {
  
  fog_density_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.fog_density)
}

// optional uint32 suspend_buffs = 36;
void NewZoneEvent::clear_suspend_buffs() {
  suspend_buffs_ = 0u;
}
::google::protobuf::uint32 NewZoneEvent::suspend_buffs() const {
  // @@protoc_insertion_point(field_get:eqproto.NewZoneEvent.suspend_buffs)
  return suspend_buffs_;
}
void NewZoneEvent::set_suspend_buffs(::google::protobuf::uint32 value) {
  
  suspend_buffs_ = value;
  // @@protoc_insertion_point(field_set:eqproto.NewZoneEvent.suspend_buffs)
}

inline const NewZoneEvent* NewZoneEvent::internal_default_instance() {
  return &NewZoneEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void WearChangeEvent::_slow_mutable_color() {
  color_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
      GetArenaNoVirtual());
}
::eqproto::Tint* WearChangeEvent::_slow_release_color() {
  if (color_ == NULL) {
    return NULL;
  } else {
    ::eqproto::Tint* temp = new ::eqproto::Tint(*color_);
    color_ = NULL;
    return temp;
  }
}
::eqproto::Tint* WearChangeEvent::unsafe_arena_release_color() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.WearChangeEvent.color)
  
  ::eqproto::Tint* temp = color_;
  color_ = NULL;
  return temp;
}
void WearChangeEvent::_slow_set_allocated_color(
    ::google::protobuf::Arena* message_arena, ::eqproto::Tint** color) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*color) == NULL) {
      message_arena->Own(*color);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*color)) {
      ::eqproto::Tint* new_color = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::Tint >(
            message_arena);
      new_color->CopyFrom(**color);
      *color = new_color;
    }
}
void WearChangeEvent::unsafe_arena_set_allocated_color(
    ::eqproto::Tint* color) {
  if (GetArenaNoVirtual() == NULL) {
    delete color_;
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.WearChangeEvent.color)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WearChangeEvent::kSpawnIdFieldNumber;
const int WearChangeEvent::kMaterialFieldNumber;
const int WearChangeEvent::kUnknown06FieldNumber;
const int WearChangeEvent::kEliteMaterialFieldNumber;
const int WearChangeEvent::kHeroForgeModelFieldNumber;
const int WearChangeEvent::kUnknown18FieldNumber;
const int WearChangeEvent::kColorFieldNumber;
const int WearChangeEvent::kWearSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WearChangeEvent::WearChangeEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.WearChangeEvent)
}
WearChangeEvent::WearChangeEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.WearChangeEvent)
}

void WearChangeEvent::InitAsDefaultInstance() {
  color_ = const_cast< ::eqproto::Tint*>(
      ::eqproto::Tint::internal_default_instance());
}

WearChangeEvent::WearChangeEvent(const WearChangeEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.WearChangeEvent)
}

void WearChangeEvent::SharedCtor() {
  color_ = NULL;
  ::memset(&spawn_id_, 0, reinterpret_cast<char*>(&wear_slot_id_) -
    reinterpret_cast<char*>(&spawn_id_) + sizeof(wear_slot_id_));
  _cached_size_ = 0;
}

WearChangeEvent::~WearChangeEvent() {
  // @@protoc_insertion_point(destructor:eqproto.WearChangeEvent)
  SharedDtor();
}

void WearChangeEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != &WearChangeEvent_default_instance_.get()) {
    delete color_;
  }
}

void WearChangeEvent::ArenaDtor(void* object) {
  WearChangeEvent* _this = reinterpret_cast< WearChangeEvent* >(object);
  (void)_this;
}
void WearChangeEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WearChangeEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WearChangeEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WearChangeEvent_descriptor_;
}

const WearChangeEvent& WearChangeEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WearChangeEvent> WearChangeEvent_default_instance_;

WearChangeEvent* WearChangeEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WearChangeEvent>(arena);
}

void WearChangeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.WearChangeEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WearChangeEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WearChangeEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawn_id_, wear_slot_id_);
  if (GetArenaNoVirtual() == NULL && color_ != NULL) delete color_;
  color_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool WearChangeEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.WearChangeEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawn_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_material;
        break;
      }

      // optional uint32 material = 2;
      case 2: {
        if (tag == 16) {
         parse_material:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &material_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unknown06;
        break;
      }

      // optional uint32 unknown06 = 3;
      case 3: {
        if (tag == 24) {
         parse_unknown06:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown06_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_elite_material;
        break;
      }

      // optional uint32 elite_material = 4;
      case 4: {
        if (tag == 32) {
         parse_elite_material:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elite_material_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_hero_forge_model;
        break;
      }

      // optional uint32 hero_forge_model = 5;
      case 5: {
        if (tag == 40) {
         parse_hero_forge_model:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hero_forge_model_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_unknown18;
        break;
      }

      // optional uint32 unknown18 = 6;
      case 6: {
        if (tag == 48) {
         parse_unknown18:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown18_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_color;
        break;
      }

      // optional .eqproto.Tint color = 7;
      case 7: {
        if (tag == 58) {
         parse_color:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_color()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_wear_slot_id;
        break;
      }

      // optional uint32 wear_slot_id = 8;
      case 8: {
        if (tag == 64) {
         parse_wear_slot_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wear_slot_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.WearChangeEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.WearChangeEvent)
  return false;
#undef DO_
}

void WearChangeEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.WearChangeEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // optional uint32 material = 2;
  if (this->material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->material(), output);
  }

  // optional uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown06(), output);
  }

  // optional uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->elite_material(), output);
  }

  // optional uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hero_forge_model(), output);
  }

  // optional uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->unknown18(), output);
  }

  // optional .eqproto.Tint color = 7;
  if (this->has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->color_, output);
  }

  // optional uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->wear_slot_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.WearChangeEvent)
}

::google::protobuf::uint8* WearChangeEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.WearChangeEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // optional uint32 material = 2;
  if (this->material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->material(), target);
  }

  // optional uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown06(), target);
  }

  // optional uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->elite_material(), target);
  }

  // optional uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hero_forge_model(), target);
  }

  // optional uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->unknown18(), target);
  }

  // optional .eqproto.Tint color = 7;
  if (this->has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->color_, false, target);
  }

  // optional uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->wear_slot_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.WearChangeEvent)
  return target;
}

size_t WearChangeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.WearChangeEvent)
  size_t total_size = 0;

  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // optional uint32 material = 2;
  if (this->material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->material());
  }

  // optional uint32 unknown06 = 3;
  if (this->unknown06() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown06());
  }

  // optional uint32 elite_material = 4;
  if (this->elite_material() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elite_material());
  }

  // optional uint32 hero_forge_model = 5;
  if (this->hero_forge_model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hero_forge_model());
  }

  // optional uint32 unknown18 = 6;
  if (this->unknown18() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown18());
  }

  // optional .eqproto.Tint color = 7;
  if (this->has_color()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->color_);
  }

  // optional uint32 wear_slot_id = 8;
  if (this->wear_slot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wear_slot_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WearChangeEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.WearChangeEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WearChangeEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WearChangeEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.WearChangeEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.WearChangeEvent)
    UnsafeMergeFrom(*source);
  }
}

void WearChangeEvent::MergeFrom(const WearChangeEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.WearChangeEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WearChangeEvent::UnsafeMergeFrom(const WearChangeEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.material() != 0) {
    set_material(from.material());
  }
  if (from.unknown06() != 0) {
    set_unknown06(from.unknown06());
  }
  if (from.elite_material() != 0) {
    set_elite_material(from.elite_material());
  }
  if (from.hero_forge_model() != 0) {
    set_hero_forge_model(from.hero_forge_model());
  }
  if (from.unknown18() != 0) {
    set_unknown18(from.unknown18());
  }
  if (from.has_color()) {
    mutable_color()->::eqproto::Tint::MergeFrom(from.color());
  }
  if (from.wear_slot_id() != 0) {
    set_wear_slot_id(from.wear_slot_id());
  }
}

void WearChangeEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.WearChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WearChangeEvent::CopyFrom(const WearChangeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.WearChangeEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WearChangeEvent::IsInitialized() const {

  return true;
}

void WearChangeEvent::Swap(WearChangeEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WearChangeEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void WearChangeEvent::UnsafeArenaSwap(WearChangeEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WearChangeEvent::InternalSwap(WearChangeEvent* other) {
  std::swap(spawn_id_, other->spawn_id_);
  std::swap(material_, other->material_);
  std::swap(unknown06_, other->unknown06_);
  std::swap(elite_material_, other->elite_material_);
  std::swap(hero_forge_model_, other->hero_forge_model_);
  std::swap(unknown18_, other->unknown18_);
  std::swap(color_, other->color_);
  std::swap(wear_slot_id_, other->wear_slot_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WearChangeEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WearChangeEvent_descriptor_;
  metadata.reflection = WearChangeEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WearChangeEvent

// optional uint32 spawn_id = 1;
void WearChangeEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.spawn_id)
  return spawn_id_;
}
void WearChangeEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.spawn_id)
}

// optional uint32 material = 2;
void WearChangeEvent::clear_material() {
  material_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::material() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.material)
  return material_;
}
void WearChangeEvent::set_material(::google::protobuf::uint32 value) {
  
  material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.material)
}

// optional uint32 unknown06 = 3;
void WearChangeEvent::clear_unknown06() {
  unknown06_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::unknown06() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.unknown06)
  return unknown06_;
}
void WearChangeEvent::set_unknown06(::google::protobuf::uint32 value) {
  
  unknown06_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.unknown06)
}

// optional uint32 elite_material = 4;
void WearChangeEvent::clear_elite_material() {
  elite_material_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::elite_material() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.elite_material)
  return elite_material_;
}
void WearChangeEvent::set_elite_material(::google::protobuf::uint32 value) {
  
  elite_material_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.elite_material)
}

// optional uint32 hero_forge_model = 5;
void WearChangeEvent::clear_hero_forge_model() {
  hero_forge_model_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::hero_forge_model() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.hero_forge_model)
  return hero_forge_model_;
}
void WearChangeEvent::set_hero_forge_model(::google::protobuf::uint32 value) {
  
  hero_forge_model_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.hero_forge_model)
}

// optional uint32 unknown18 = 6;
void WearChangeEvent::clear_unknown18() {
  unknown18_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::unknown18() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.unknown18)
  return unknown18_;
}
void WearChangeEvent::set_unknown18(::google::protobuf::uint32 value) {
  
  unknown18_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.unknown18)
}

// optional .eqproto.Tint color = 7;
bool WearChangeEvent::has_color() const {
  return this != internal_default_instance() && color_ != NULL;
}
void WearChangeEvent::clear_color() {
  if (GetArenaNoVirtual() == NULL && color_ != NULL) delete color_;
  color_ = NULL;
}
const ::eqproto::Tint& WearChangeEvent::color() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.color)
  return color_ != NULL ? *color_
                         : *::eqproto::Tint::internal_default_instance();
}
::eqproto::Tint* WearChangeEvent::mutable_color() {
  
  if (color_ == NULL) {
    _slow_mutable_color();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.WearChangeEvent.color)
  return color_;
}
::eqproto::Tint* WearChangeEvent::release_color() {
  // @@protoc_insertion_point(field_release:eqproto.WearChangeEvent.color)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_color();
  } else {
    ::eqproto::Tint* temp = color_;
    color_ = NULL;
    return temp;
  }
}
 void WearChangeEvent::set_allocated_color(::eqproto::Tint* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete color_;
  }
  if (color != NULL) {
    _slow_set_allocated_color(message_arena, &color);
  }
  color_ = color;
  if (color) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.WearChangeEvent.color)
}

// optional uint32 wear_slot_id = 8;
void WearChangeEvent::clear_wear_slot_id() {
  wear_slot_id_ = 0u;
}
::google::protobuf::uint32 WearChangeEvent::wear_slot_id() const {
  // @@protoc_insertion_point(field_get:eqproto.WearChangeEvent.wear_slot_id)
  return wear_slot_id_;
}
void WearChangeEvent::set_wear_slot_id(::google::protobuf::uint32 value) {
  
  wear_slot_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.WearChangeEvent.wear_slot_id)
}

inline const WearChangeEvent* WearChangeEvent::internal_default_instance() {
  return &WearChangeEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSpawnEvent::kSpawnIdFieldNumber;
const int DeleteSpawnEvent::kDecayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSpawnEvent::DeleteSpawnEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.DeleteSpawnEvent)
}
DeleteSpawnEvent::DeleteSpawnEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.DeleteSpawnEvent)
}

void DeleteSpawnEvent::InitAsDefaultInstance() {
}

DeleteSpawnEvent::DeleteSpawnEvent(const DeleteSpawnEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.DeleteSpawnEvent)
}

void DeleteSpawnEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, reinterpret_cast<char*>(&decay_) -
    reinterpret_cast<char*>(&spawn_id_) + sizeof(decay_));
  _cached_size_ = 0;
}

DeleteSpawnEvent::~DeleteSpawnEvent() {
  // @@protoc_insertion_point(destructor:eqproto.DeleteSpawnEvent)
  SharedDtor();
}

void DeleteSpawnEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void DeleteSpawnEvent::ArenaDtor(void* object) {
  DeleteSpawnEvent* _this = reinterpret_cast< DeleteSpawnEvent* >(object);
  (void)_this;
}
void DeleteSpawnEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeleteSpawnEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSpawnEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSpawnEvent_descriptor_;
}

const DeleteSpawnEvent& DeleteSpawnEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DeleteSpawnEvent> DeleteSpawnEvent_default_instance_;

DeleteSpawnEvent* DeleteSpawnEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<DeleteSpawnEvent>(arena);
}

void DeleteSpawnEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.DeleteSpawnEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DeleteSpawnEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DeleteSpawnEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawn_id_, decay_);

#undef ZR_HELPER_
#undef ZR_

}

bool DeleteSpawnEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.DeleteSpawnEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawn_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_decay;
        break;
      }

      // optional uint32 decay = 2;
      case 2: {
        if (tag == 16) {
         parse_decay:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &decay_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.DeleteSpawnEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.DeleteSpawnEvent)
  return false;
#undef DO_
}

void DeleteSpawnEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.DeleteSpawnEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // optional uint32 decay = 2;
  if (this->decay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->decay(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.DeleteSpawnEvent)
}

::google::protobuf::uint8* DeleteSpawnEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.DeleteSpawnEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // optional uint32 decay = 2;
  if (this->decay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->decay(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.DeleteSpawnEvent)
  return target;
}

size_t DeleteSpawnEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.DeleteSpawnEvent)
  size_t total_size = 0;

  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // optional uint32 decay = 2;
  if (this->decay() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->decay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSpawnEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.DeleteSpawnEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DeleteSpawnEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteSpawnEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.DeleteSpawnEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.DeleteSpawnEvent)
    UnsafeMergeFrom(*source);
  }
}

void DeleteSpawnEvent::MergeFrom(const DeleteSpawnEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.DeleteSpawnEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DeleteSpawnEvent::UnsafeMergeFrom(const DeleteSpawnEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.decay() != 0) {
    set_decay(from.decay());
  }
}

void DeleteSpawnEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.DeleteSpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSpawnEvent::CopyFrom(const DeleteSpawnEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.DeleteSpawnEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DeleteSpawnEvent::IsInitialized() const {

  return true;
}

void DeleteSpawnEvent::Swap(DeleteSpawnEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeleteSpawnEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void DeleteSpawnEvent::UnsafeArenaSwap(DeleteSpawnEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeleteSpawnEvent::InternalSwap(DeleteSpawnEvent* other) {
  std::swap(spawn_id_, other->spawn_id_);
  std::swap(decay_, other->decay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteSpawnEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSpawnEvent_descriptor_;
  metadata.reflection = DeleteSpawnEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteSpawnEvent

// optional uint32 spawn_id = 1;
void DeleteSpawnEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
::google::protobuf::uint32 DeleteSpawnEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.DeleteSpawnEvent.spawn_id)
  return spawn_id_;
}
void DeleteSpawnEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeleteSpawnEvent.spawn_id)
}

// optional uint32 decay = 2;
void DeleteSpawnEvent::clear_decay() {
  decay_ = 0u;
}
::google::protobuf::uint32 DeleteSpawnEvent::decay() const {
  // @@protoc_insertion_point(field_get:eqproto.DeleteSpawnEvent.decay)
  return decay_;
}
void DeleteSpawnEvent::set_decay(::google::protobuf::uint32 value) {
  
  decay_ = value;
  // @@protoc_insertion_point(field_set:eqproto.DeleteSpawnEvent.decay)
}

inline const DeleteSpawnEvent* DeleteSpawnEvent::internal_default_instance() {
  return &DeleteSpawnEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HPEvent::kSpawnIdFieldNumber;
const int HPEvent::kCurHpFieldNumber;
const int HPEvent::kMaxHpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HPEvent::HPEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.HPEvent)
}
HPEvent::HPEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.HPEvent)
}

void HPEvent::InitAsDefaultInstance() {
}

HPEvent::HPEvent(const HPEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.HPEvent)
}

void HPEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, reinterpret_cast<char*>(&max_hp_) -
    reinterpret_cast<char*>(&spawn_id_) + sizeof(max_hp_));
  _cached_size_ = 0;
}

HPEvent::~HPEvent() {
  // @@protoc_insertion_point(destructor:eqproto.HPEvent)
  SharedDtor();
}

void HPEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void HPEvent::ArenaDtor(void* object) {
  HPEvent* _this = reinterpret_cast< HPEvent* >(object);
  (void)_this;
}
void HPEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HPEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HPEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HPEvent_descriptor_;
}

const HPEvent& HPEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HPEvent> HPEvent_default_instance_;

HPEvent* HPEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<HPEvent>(arena);
}

void HPEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.HPEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HPEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HPEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawn_id_, max_hp_);

#undef ZR_HELPER_
#undef ZR_

}

bool HPEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.HPEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawn_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cur_hp;
        break;
      }

      // optional uint32 cur_hp = 2;
      case 2: {
        if (tag == 16) {
         parse_cur_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max_hp;
        break;
      }

      // optional uint32 max_hp = 3;
      case 3: {
        if (tag == 24) {
         parse_max_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.HPEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.HPEvent)
  return false;
#undef DO_
}

void HPEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.HPEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // optional uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cur_hp(), output);
  }

  // optional uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_hp(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.HPEvent)
}

::google::protobuf::uint8* HPEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.HPEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // optional uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cur_hp(), target);
  }

  // optional uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_hp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.HPEvent)
  return target;
}

size_t HPEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.HPEvent)
  size_t total_size = 0;

  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // optional uint32 cur_hp = 2;
  if (this->cur_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_hp());
  }

  // optional uint32 max_hp = 3;
  if (this->max_hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_hp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HPEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.HPEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HPEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HPEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.HPEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.HPEvent)
    UnsafeMergeFrom(*source);
  }
}

void HPEvent::MergeFrom(const HPEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.HPEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HPEvent::UnsafeMergeFrom(const HPEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.cur_hp() != 0) {
    set_cur_hp(from.cur_hp());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
}

void HPEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.HPEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HPEvent::CopyFrom(const HPEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.HPEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HPEvent::IsInitialized() const {

  return true;
}

void HPEvent::Swap(HPEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HPEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void HPEvent::UnsafeArenaSwap(HPEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HPEvent::InternalSwap(HPEvent* other) {
  std::swap(spawn_id_, other->spawn_id_);
  std::swap(cur_hp_, other->cur_hp_);
  std::swap(max_hp_, other->max_hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HPEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HPEvent_descriptor_;
  metadata.reflection = HPEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HPEvent

// optional uint32 spawn_id = 1;
void HPEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
::google::protobuf::uint32 HPEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.spawn_id)
  return spawn_id_;
}
void HPEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.spawn_id)
}

// optional uint32 cur_hp = 2;
void HPEvent::clear_cur_hp() {
  cur_hp_ = 0u;
}
::google::protobuf::uint32 HPEvent::cur_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.cur_hp)
  return cur_hp_;
}
void HPEvent::set_cur_hp(::google::protobuf::uint32 value) {
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.cur_hp)
}

// optional uint32 max_hp = 3;
void HPEvent::clear_max_hp() {
  max_hp_ = 0u;
}
::google::protobuf::uint32 HPEvent::max_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.HPEvent.max_hp)
  return max_hp_;
}
void HPEvent::set_max_hp(::google::protobuf::uint32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.HPEvent.max_hp)
}

inline const HPEvent* HPEvent::internal_default_instance() {
  return &HPEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPositionUpdateEvent::kSpawnIdFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaHeadingFieldNumber;
const int PlayerPositionUpdateEvent::kXPosFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0002FieldNumber;
const int PlayerPositionUpdateEvent::kYPosFieldNumber;
const int PlayerPositionUpdateEvent::kAnimationFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0006FieldNumber;
const int PlayerPositionUpdateEvent::kZPosFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaYFieldNumber;
const int PlayerPositionUpdateEvent::kDeltaXFieldNumber;
const int PlayerPositionUpdateEvent::kHeadingFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0014FieldNumber;
const int PlayerPositionUpdateEvent::kDeltaZFieldNumber;
const int PlayerPositionUpdateEvent::kPadding0018FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPositionUpdateEvent::PlayerPositionUpdateEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.PlayerPositionUpdateEvent)
}
PlayerPositionUpdateEvent::PlayerPositionUpdateEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.PlayerPositionUpdateEvent)
}

void PlayerPositionUpdateEvent::InitAsDefaultInstance() {
}

PlayerPositionUpdateEvent::PlayerPositionUpdateEvent(const PlayerPositionUpdateEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.PlayerPositionUpdateEvent)
}

void PlayerPositionUpdateEvent::SharedCtor() {
  ::memset(&spawn_id_, 0, reinterpret_cast<char*>(&padding0018_) -
    reinterpret_cast<char*>(&spawn_id_) + sizeof(padding0018_));
  _cached_size_ = 0;
}

PlayerPositionUpdateEvent::~PlayerPositionUpdateEvent() {
  // @@protoc_insertion_point(destructor:eqproto.PlayerPositionUpdateEvent)
  SharedDtor();
}

void PlayerPositionUpdateEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void PlayerPositionUpdateEvent::ArenaDtor(void* object) {
  PlayerPositionUpdateEvent* _this = reinterpret_cast< PlayerPositionUpdateEvent* >(object);
  (void)_this;
}
void PlayerPositionUpdateEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void PlayerPositionUpdateEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPositionUpdateEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerPositionUpdateEvent_descriptor_;
}

const PlayerPositionUpdateEvent& PlayerPositionUpdateEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerPositionUpdateEvent> PlayerPositionUpdateEvent_default_instance_;

PlayerPositionUpdateEvent* PlayerPositionUpdateEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<PlayerPositionUpdateEvent>(arena);
}

void PlayerPositionUpdateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.PlayerPositionUpdateEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerPositionUpdateEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerPositionUpdateEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawn_id_, z_pos_);
  ZR_(delta_y_, padding0018_);

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerPositionUpdateEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.PlayerPositionUpdateEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawn_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawn_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_delta_heading;
        break;
      }

      // optional int32 delta_heading = 2;
      case 2: {
        if (tag == 16) {
         parse_delta_heading:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_heading_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_x_pos;
        break;
      }

      // optional int32 x_pos = 3;
      case 3: {
        if (tag == 24) {
         parse_x_pos:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_pos_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_padding0002;
        break;
      }

      // optional int32 padding0002 = 4;
      case 4: {
        if (tag == 32) {
         parse_padding0002:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0002_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_y_pos;
        break;
      }

      // optional int32 y_pos = 5;
      case 5: {
        if (tag == 40) {
         parse_y_pos:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_pos_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_animation;
        break;
      }

      // optional int32 animation = 6;
      case 6: {
        if (tag == 48) {
         parse_animation:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animation_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_padding0006;
        break;
      }

      // optional int32 padding0006 = 7;
      case 7: {
        if (tag == 56) {
         parse_padding0006:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0006_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_z_pos;
        break;
      }

      // optional int32 z_pos = 8;
      case 8: {
        if (tag == 64) {
         parse_z_pos:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_pos_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_delta_y;
        break;
      }

      // optional int32 delta_y = 9;
      case 9: {
        if (tag == 72) {
         parse_delta_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_delta_x;
        break;
      }

      // optional int32 delta_x = 10;
      case 10: {
        if (tag == 80) {
         parse_delta_x:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_heading;
        break;
      }

      // optional int32 heading = 11;
      case 11: {
        if (tag == 88) {
         parse_heading:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_padding0014;
        break;
      }

      // optional int32 padding0014 = 12;
      case 12: {
        if (tag == 96) {
         parse_padding0014:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0014_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_delta_z;
        break;
      }

      // optional int32 delta_z = 13;
      case 13: {
        if (tag == 104) {
         parse_delta_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delta_z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_padding0018;
        break;
      }

      // optional int32 padding0018 = 14;
      case 14: {
        if (tag == 112) {
         parse_padding0018:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0018_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.PlayerPositionUpdateEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.PlayerPositionUpdateEvent)
  return false;
#undef DO_
}

void PlayerPositionUpdateEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.PlayerPositionUpdateEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawn_id(), output);
  }

  // optional int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->delta_heading(), output);
  }

  // optional int32 x_pos = 3;
  if (this->x_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x_pos(), output);
  }

  // optional int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->padding0002(), output);
  }

  // optional int32 y_pos = 5;
  if (this->y_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y_pos(), output);
  }

  // optional int32 animation = 6;
  if (this->animation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->animation(), output);
  }

  // optional int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->padding0006(), output);
  }

  // optional int32 z_pos = 8;
  if (this->z_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->z_pos(), output);
  }

  // optional int32 delta_y = 9;
  if (this->delta_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->delta_y(), output);
  }

  // optional int32 delta_x = 10;
  if (this->delta_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->delta_x(), output);
  }

  // optional int32 heading = 11;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->heading(), output);
  }

  // optional int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->padding0014(), output);
  }

  // optional int32 delta_z = 13;
  if (this->delta_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->delta_z(), output);
  }

  // optional int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->padding0018(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.PlayerPositionUpdateEvent)
}

::google::protobuf::uint8* PlayerPositionUpdateEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.PlayerPositionUpdateEvent)
  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawn_id(), target);
  }

  // optional int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->delta_heading(), target);
  }

  // optional int32 x_pos = 3;
  if (this->x_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x_pos(), target);
  }

  // optional int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->padding0002(), target);
  }

  // optional int32 y_pos = 5;
  if (this->y_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y_pos(), target);
  }

  // optional int32 animation = 6;
  if (this->animation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->animation(), target);
  }

  // optional int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->padding0006(), target);
  }

  // optional int32 z_pos = 8;
  if (this->z_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->z_pos(), target);
  }

  // optional int32 delta_y = 9;
  if (this->delta_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->delta_y(), target);
  }

  // optional int32 delta_x = 10;
  if (this->delta_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->delta_x(), target);
  }

  // optional int32 heading = 11;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->heading(), target);
  }

  // optional int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->padding0014(), target);
  }

  // optional int32 delta_z = 13;
  if (this->delta_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->delta_z(), target);
  }

  // optional int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->padding0018(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.PlayerPositionUpdateEvent)
  return target;
}

size_t PlayerPositionUpdateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.PlayerPositionUpdateEvent)
  size_t total_size = 0;

  // optional uint32 spawn_id = 1;
  if (this->spawn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawn_id());
  }

  // optional int32 delta_heading = 2;
  if (this->delta_heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_heading());
  }

  // optional int32 x_pos = 3;
  if (this->x_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_pos());
  }

  // optional int32 padding0002 = 4;
  if (this->padding0002() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0002());
  }

  // optional int32 y_pos = 5;
  if (this->y_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_pos());
  }

  // optional int32 animation = 6;
  if (this->animation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animation());
  }

  // optional int32 padding0006 = 7;
  if (this->padding0006() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0006());
  }

  // optional int32 z_pos = 8;
  if (this->z_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z_pos());
  }

  // optional int32 delta_y = 9;
  if (this->delta_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_y());
  }

  // optional int32 delta_x = 10;
  if (this->delta_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_x());
  }

  // optional int32 heading = 11;
  if (this->heading() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heading());
  }

  // optional int32 padding0014 = 12;
  if (this->padding0014() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0014());
  }

  // optional int32 delta_z = 13;
  if (this->delta_z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delta_z());
  }

  // optional int32 padding0018 = 14;
  if (this->padding0018() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0018());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPositionUpdateEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.PlayerPositionUpdateEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerPositionUpdateEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPositionUpdateEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.PlayerPositionUpdateEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.PlayerPositionUpdateEvent)
    UnsafeMergeFrom(*source);
  }
}

void PlayerPositionUpdateEvent::MergeFrom(const PlayerPositionUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.PlayerPositionUpdateEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerPositionUpdateEvent::UnsafeMergeFrom(const PlayerPositionUpdateEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawn_id() != 0) {
    set_spawn_id(from.spawn_id());
  }
  if (from.delta_heading() != 0) {
    set_delta_heading(from.delta_heading());
  }
  if (from.x_pos() != 0) {
    set_x_pos(from.x_pos());
  }
  if (from.padding0002() != 0) {
    set_padding0002(from.padding0002());
  }
  if (from.y_pos() != 0) {
    set_y_pos(from.y_pos());
  }
  if (from.animation() != 0) {
    set_animation(from.animation());
  }
  if (from.padding0006() != 0) {
    set_padding0006(from.padding0006());
  }
  if (from.z_pos() != 0) {
    set_z_pos(from.z_pos());
  }
  if (from.delta_y() != 0) {
    set_delta_y(from.delta_y());
  }
  if (from.delta_x() != 0) {
    set_delta_x(from.delta_x());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.padding0014() != 0) {
    set_padding0014(from.padding0014());
  }
  if (from.delta_z() != 0) {
    set_delta_z(from.delta_z());
  }
  if (from.padding0018() != 0) {
    set_padding0018(from.padding0018());
  }
}

void PlayerPositionUpdateEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.PlayerPositionUpdateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPositionUpdateEvent::CopyFrom(const PlayerPositionUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.PlayerPositionUpdateEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerPositionUpdateEvent::IsInitialized() const {

  return true;
}

void PlayerPositionUpdateEvent::Swap(PlayerPositionUpdateEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    PlayerPositionUpdateEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void PlayerPositionUpdateEvent::UnsafeArenaSwap(PlayerPositionUpdateEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void PlayerPositionUpdateEvent::InternalSwap(PlayerPositionUpdateEvent* other) {
  std::swap(spawn_id_, other->spawn_id_);
  std::swap(delta_heading_, other->delta_heading_);
  std::swap(x_pos_, other->x_pos_);
  std::swap(padding0002_, other->padding0002_);
  std::swap(y_pos_, other->y_pos_);
  std::swap(animation_, other->animation_);
  std::swap(padding0006_, other->padding0006_);
  std::swap(z_pos_, other->z_pos_);
  std::swap(delta_y_, other->delta_y_);
  std::swap(delta_x_, other->delta_x_);
  std::swap(heading_, other->heading_);
  std::swap(padding0014_, other->padding0014_);
  std::swap(delta_z_, other->delta_z_);
  std::swap(padding0018_, other->padding0018_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPositionUpdateEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerPositionUpdateEvent_descriptor_;
  metadata.reflection = PlayerPositionUpdateEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPositionUpdateEvent

// optional uint32 spawn_id = 1;
void PlayerPositionUpdateEvent::clear_spawn_id() {
  spawn_id_ = 0u;
}
::google::protobuf::uint32 PlayerPositionUpdateEvent::spawn_id() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.spawn_id)
  return spawn_id_;
}
void PlayerPositionUpdateEvent::set_spawn_id(::google::protobuf::uint32 value) {
  
  spawn_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.spawn_id)
}

// optional int32 delta_heading = 2;
void PlayerPositionUpdateEvent::clear_delta_heading() {
  delta_heading_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::delta_heading() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_heading)
  return delta_heading_;
}
void PlayerPositionUpdateEvent::set_delta_heading(::google::protobuf::int32 value) {
  
  delta_heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_heading)
}

// optional int32 x_pos = 3;
void PlayerPositionUpdateEvent::clear_x_pos() {
  x_pos_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::x_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.x_pos)
  return x_pos_;
}
void PlayerPositionUpdateEvent::set_x_pos(::google::protobuf::int32 value) {
  
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.x_pos)
}

// optional int32 padding0002 = 4;
void PlayerPositionUpdateEvent::clear_padding0002() {
  padding0002_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::padding0002() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0002)
  return padding0002_;
}
void PlayerPositionUpdateEvent::set_padding0002(::google::protobuf::int32 value) {
  
  padding0002_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0002)
}

// optional int32 y_pos = 5;
void PlayerPositionUpdateEvent::clear_y_pos() {
  y_pos_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::y_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.y_pos)
  return y_pos_;
}
void PlayerPositionUpdateEvent::set_y_pos(::google::protobuf::int32 value) {
  
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.y_pos)
}

// optional int32 animation = 6;
void PlayerPositionUpdateEvent::clear_animation() {
  animation_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::animation() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.animation)
  return animation_;
}
void PlayerPositionUpdateEvent::set_animation(::google::protobuf::int32 value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.animation)
}

// optional int32 padding0006 = 7;
void PlayerPositionUpdateEvent::clear_padding0006() {
  padding0006_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::padding0006() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0006)
  return padding0006_;
}
void PlayerPositionUpdateEvent::set_padding0006(::google::protobuf::int32 value) {
  
  padding0006_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0006)
}

// optional int32 z_pos = 8;
void PlayerPositionUpdateEvent::clear_z_pos() {
  z_pos_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::z_pos() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.z_pos)
  return z_pos_;
}
void PlayerPositionUpdateEvent::set_z_pos(::google::protobuf::int32 value) {
  
  z_pos_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.z_pos)
}

// optional int32 delta_y = 9;
void PlayerPositionUpdateEvent::clear_delta_y() {
  delta_y_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::delta_y() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_y)
  return delta_y_;
}
void PlayerPositionUpdateEvent::set_delta_y(::google::protobuf::int32 value) {
  
  delta_y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_y)
}

// optional int32 delta_x = 10;
void PlayerPositionUpdateEvent::clear_delta_x() {
  delta_x_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::delta_x() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_x)
  return delta_x_;
}
void PlayerPositionUpdateEvent::set_delta_x(::google::protobuf::int32 value) {
  
  delta_x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_x)
}

// optional int32 heading = 11;
void PlayerPositionUpdateEvent::clear_heading() {
  heading_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::heading() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.heading)
  return heading_;
}
void PlayerPositionUpdateEvent::set_heading(::google::protobuf::int32 value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.heading)
}

// optional int32 padding0014 = 12;
void PlayerPositionUpdateEvent::clear_padding0014() {
  padding0014_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::padding0014() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0014)
  return padding0014_;
}
void PlayerPositionUpdateEvent::set_padding0014(::google::protobuf::int32 value) {
  
  padding0014_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0014)
}

// optional int32 delta_z = 13;
void PlayerPositionUpdateEvent::clear_delta_z() {
  delta_z_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::delta_z() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.delta_z)
  return delta_z_;
}
void PlayerPositionUpdateEvent::set_delta_z(::google::protobuf::int32 value) {
  
  delta_z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.delta_z)
}

// optional int32 padding0018 = 14;
void PlayerPositionUpdateEvent::clear_padding0018() {
  padding0018_ = 0;
}
::google::protobuf::int32 PlayerPositionUpdateEvent::padding0018() const {
  // @@protoc_insertion_point(field_get:eqproto.PlayerPositionUpdateEvent.padding0018)
  return padding0018_;
}
void PlayerPositionUpdateEvent::set_padding0018(::google::protobuf::int32 value) {
  
  padding0018_ = value;
  // @@protoc_insertion_point(field_set:eqproto.PlayerPositionUpdateEvent.padding0018)
}

inline const PlayerPositionUpdateEvent* PlayerPositionUpdateEvent::internal_default_instance() {
  return &PlayerPositionUpdateEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnimationEvent::kSpawnidFieldNumber;
const int AnimationEvent::kSpeedFieldNumber;
const int AnimationEvent::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnimationEvent::AnimationEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.AnimationEvent)
}
AnimationEvent::AnimationEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.AnimationEvent)
}

void AnimationEvent::InitAsDefaultInstance() {
}

AnimationEvent::AnimationEvent(const AnimationEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.AnimationEvent)
}

void AnimationEvent::SharedCtor() {
  ::memset(&spawnid_, 0, reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&spawnid_) + sizeof(action_));
  _cached_size_ = 0;
}

AnimationEvent::~AnimationEvent() {
  // @@protoc_insertion_point(destructor:eqproto.AnimationEvent)
  SharedDtor();
}

void AnimationEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void AnimationEvent::ArenaDtor(void* object) {
  AnimationEvent* _this = reinterpret_cast< AnimationEvent* >(object);
  (void)_this;
}
void AnimationEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AnimationEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnimationEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnimationEvent_descriptor_;
}

const AnimationEvent& AnimationEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AnimationEvent> AnimationEvent_default_instance_;

AnimationEvent* AnimationEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AnimationEvent>(arena);
}

void AnimationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.AnimationEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AnimationEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AnimationEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spawnid_, action_);

#undef ZR_HELPER_
#undef ZR_

}

bool AnimationEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.AnimationEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 spawnid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawnid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_speed;
        break;
      }

      // optional uint32 speed = 2;
      case 2: {
        if (tag == 16) {
         parse_speed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_action;
        break;
      }

      // optional uint32 action = 3;
      case 3: {
        if (tag == 24) {
         parse_action:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.AnimationEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.AnimationEvent)
  return false;
#undef DO_
}

void AnimationEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.AnimationEvent)
  // optional uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->spawnid(), output);
  }

  // optional uint32 speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->speed(), output);
  }

  // optional uint32 action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.AnimationEvent)
}

::google::protobuf::uint8* AnimationEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.AnimationEvent)
  // optional uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->spawnid(), target);
  }

  // optional uint32 speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->speed(), target);
  }

  // optional uint32 action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.AnimationEvent)
  return target;
}

size_t AnimationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.AnimationEvent)
  size_t total_size = 0;

  // optional uint32 spawnid = 1;
  if (this->spawnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawnid());
  }

  // optional uint32 speed = 2;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());
  }

  // optional uint32 action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnimationEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.AnimationEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AnimationEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnimationEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.AnimationEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.AnimationEvent)
    UnsafeMergeFrom(*source);
  }
}

void AnimationEvent::MergeFrom(const AnimationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.AnimationEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AnimationEvent::UnsafeMergeFrom(const AnimationEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spawnid() != 0) {
    set_spawnid(from.spawnid());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void AnimationEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.AnimationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimationEvent::CopyFrom(const AnimationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.AnimationEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AnimationEvent::IsInitialized() const {

  return true;
}

void AnimationEvent::Swap(AnimationEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AnimationEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AnimationEvent::UnsafeArenaSwap(AnimationEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AnimationEvent::InternalSwap(AnimationEvent* other) {
  std::swap(spawnid_, other->spawnid_);
  std::swap(speed_, other->speed_);
  std::swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnimationEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnimationEvent_descriptor_;
  metadata.reflection = AnimationEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnimationEvent

// optional uint32 spawnid = 1;
void AnimationEvent::clear_spawnid() {
  spawnid_ = 0u;
}
::google::protobuf::uint32 AnimationEvent::spawnid() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.spawnid)
  return spawnid_;
}
void AnimationEvent::set_spawnid(::google::protobuf::uint32 value) {
  
  spawnid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.spawnid)
}

// optional uint32 speed = 2;
void AnimationEvent::clear_speed() {
  speed_ = 0u;
}
::google::protobuf::uint32 AnimationEvent::speed() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.speed)
  return speed_;
}
void AnimationEvent::set_speed(::google::protobuf::uint32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.speed)
}

// optional uint32 action = 3;
void AnimationEvent::clear_action() {
  action_ = 0u;
}
::google::protobuf::uint32 AnimationEvent::action() const {
  // @@protoc_insertion_point(field_get:eqproto.AnimationEvent.action)
  return action_;
}
void AnimationEvent::set_action(::google::protobuf::uint32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AnimationEvent.action)
}

inline const AnimationEvent* AnimationEvent::internal_default_instance() {
  return &AnimationEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void SpawnEvent::_slow_mutable_equipment() {
  equipment_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::TextureProfile >(
      GetArenaNoVirtual());
}
::eqproto::TextureProfile* SpawnEvent::_slow_release_equipment() {
  if (equipment_ == NULL) {
    return NULL;
  } else {
    ::eqproto::TextureProfile* temp = new ::eqproto::TextureProfile(*equipment_);
    equipment_ = NULL;
    return temp;
  }
}
::eqproto::TextureProfile* SpawnEvent::unsafe_arena_release_equipment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.equipment)
  
  ::eqproto::TextureProfile* temp = equipment_;
  equipment_ = NULL;
  return temp;
}
void SpawnEvent::_slow_set_allocated_equipment(
    ::google::protobuf::Arena* message_arena, ::eqproto::TextureProfile** equipment) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*equipment) == NULL) {
      message_arena->Own(*equipment);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*equipment)) {
      ::eqproto::TextureProfile* new_equipment = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::TextureProfile >(
            message_arena);
      new_equipment->CopyFrom(**equipment);
      *equipment = new_equipment;
    }
}
void SpawnEvent::unsafe_arena_set_allocated_equipment(
    ::eqproto::TextureProfile* equipment) {
  if (GetArenaNoVirtual() == NULL) {
    delete equipment_;
  }
  equipment_ = equipment;
  if (equipment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.equipment)
}
void SpawnEvent::_slow_mutable_equipment_tint() {
  equipment_tint_ = ::google::protobuf::Arena::CreateMessage< ::eqproto::TintProfile >(
      GetArenaNoVirtual());
}
::eqproto::TintProfile* SpawnEvent::_slow_release_equipment_tint() {
  if (equipment_tint_ == NULL) {
    return NULL;
  } else {
    ::eqproto::TintProfile* temp = new ::eqproto::TintProfile(*equipment_tint_);
    equipment_tint_ = NULL;
    return temp;
  }
}
::eqproto::TintProfile* SpawnEvent::unsafe_arena_release_equipment_tint() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.equipment_tint)
  
  ::eqproto::TintProfile* temp = equipment_tint_;
  equipment_tint_ = NULL;
  return temp;
}
void SpawnEvent::_slow_set_allocated_equipment_tint(
    ::google::protobuf::Arena* message_arena, ::eqproto::TintProfile** equipment_tint) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*equipment_tint) == NULL) {
      message_arena->Own(*equipment_tint);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*equipment_tint)) {
      ::eqproto::TintProfile* new_equipment_tint = 
            ::google::protobuf::Arena::CreateMessage< ::eqproto::TintProfile >(
            message_arena);
      new_equipment_tint->CopyFrom(**equipment_tint);
      *equipment_tint = new_equipment_tint;
    }
}
void SpawnEvent::unsafe_arena_set_allocated_equipment_tint(
    ::eqproto::TintProfile* equipment_tint) {
  if (GetArenaNoVirtual() == NULL) {
    delete equipment_tint_;
  }
  equipment_tint_ = equipment_tint;
  if (equipment_tint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.equipment_tint)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnEvent::kUnknown0000FieldNumber;
const int SpawnEvent::kGmFieldNumber;
const int SpawnEvent::kUnknown0003FieldNumber;
const int SpawnEvent::kAaitleFieldNumber;
const int SpawnEvent::kUnknown0004FieldNumber;
const int SpawnEvent::kAnonFieldNumber;
const int SpawnEvent::kFaceFieldNumber;
const int SpawnEvent::kNameFieldNumber;
const int SpawnEvent::kDeityFieldNumber;
const int SpawnEvent::kUnknown0073FieldNumber;
const int SpawnEvent::kSizeFieldNumber;
const int SpawnEvent::kUnknown0079FieldNumber;
const int SpawnEvent::kNPCFieldNumber;
const int SpawnEvent::kInvisFieldNumber;
const int SpawnEvent::kHaircolorFieldNumber;
const int SpawnEvent::kCurHpFieldNumber;
const int SpawnEvent::kMaxHpFieldNumber;
const int SpawnEvent::kFindableFieldNumber;
const int SpawnEvent::kUnknown0089FieldNumber;
const int SpawnEvent::kDeltaHeadingFieldNumber;
const int SpawnEvent::kXFieldNumber;
const int SpawnEvent::kPadding0054FieldNumber;
const int SpawnEvent::kYFieldNumber;
const int SpawnEvent::kAnimationFieldNumber;
const int SpawnEvent::kPadding0058FieldNumber;
const int SpawnEvent::kZFieldNumber;
const int SpawnEvent::kDeltaYFieldNumber;
const int SpawnEvent::kDeltaXFieldNumber;
const int SpawnEvent::kHeadingFieldNumber;
const int SpawnEvent::kPadding0066FieldNumber;
const int SpawnEvent::kDeltaZFieldNumber;
const int SpawnEvent::kPadding0070FieldNumber;
const int SpawnEvent::kEyecolor1FieldNumber;
const int SpawnEvent::kUnknown0115FieldNumber;
const int SpawnEvent::kStandStateFieldNumber;
const int SpawnEvent::kDrakkinHeritageFieldNumber;
const int SpawnEvent::kDrakkinTattooFieldNumber;
const int SpawnEvent::kDrakkinDetailsFieldNumber;
const int SpawnEvent::kShowhelmFieldNumber;
const int SpawnEvent::kUnknown0140FieldNumber;
const int SpawnEvent::kIsNpcFieldNumber;
const int SpawnEvent::kHairstyleFieldNumber;
const int SpawnEvent::kBeardFieldNumber;
const int SpawnEvent::kUnknown0147FieldNumber;
const int SpawnEvent::kLevelFieldNumber;
const int SpawnEvent::kPlayerStateFieldNumber;
const int SpawnEvent::kBeardcolorFieldNumber;
const int SpawnEvent::kSuffixFieldNumber;
const int SpawnEvent::kPetOwnerIdFieldNumber;
const int SpawnEvent::kGuildrankFieldNumber;
const int SpawnEvent::kUnknown0194FieldNumber;
const int SpawnEvent::kEquipmentFieldNumber;
const int SpawnEvent::kRunspeedFieldNumber;
const int SpawnEvent::kAfkFieldNumber;
const int SpawnEvent::kGuildIDFieldNumber;
const int SpawnEvent::kTitleFieldNumber;
const int SpawnEvent::kUnknown0274FieldNumber;
const int SpawnEvent::kSetTo0XFFFieldNumber;
const int SpawnEvent::kHelmFieldNumber;
const int SpawnEvent::kRaceFieldNumber;
const int SpawnEvent::kUnknown0288FieldNumber;
const int SpawnEvent::kLastNameFieldNumber;
const int SpawnEvent::kWalkspeedFieldNumber;
const int SpawnEvent::kUnknown0328FieldNumber;
const int SpawnEvent::kIsPetFieldNumber;
const int SpawnEvent::kLightFieldNumber;
const int SpawnEvent::kClassFieldNumber;
const int SpawnEvent::kEyecolor2FieldNumber;
const int SpawnEvent::kFlymodeFieldNumber;
const int SpawnEvent::kGenderFieldNumber;
const int SpawnEvent::kBodytypeFieldNumber;
const int SpawnEvent::kUnknown0336FieldNumber;
const int SpawnEvent::kEquipChest2FieldNumber;
const int SpawnEvent::kMountColorFieldNumber;
const int SpawnEvent::kSpawnIdFieldNumber;
const int SpawnEvent::kUnknown0344FieldNumber;
const int SpawnEvent::kIsMercenaryFieldNumber;
const int SpawnEvent::kEquipmentTintFieldNumber;
const int SpawnEvent::kLfgFieldNumber;
const int SpawnEvent::kDestructibleObjectFieldNumber;
const int SpawnEvent::kDestructibleModelFieldNumber;
const int SpawnEvent::kDestructibleName2FieldNumber;
const int SpawnEvent::kDestructibleStringFieldNumber;
const int SpawnEvent::kDestructibleAppearanceFieldNumber;
const int SpawnEvent::kDestructibleUnk1FieldNumber;
const int SpawnEvent::kDestructibleID1FieldNumber;
const int SpawnEvent::kDestructibleID2FieldNumber;
const int SpawnEvent::kDestructibleID3FieldNumber;
const int SpawnEvent::kDestructibleID4FieldNumber;
const int SpawnEvent::kDestructibleUnk2FieldNumber;
const int SpawnEvent::kDestructibleUnk3FieldNumber;
const int SpawnEvent::kDestructibleUnk4FieldNumber;
const int SpawnEvent::kDestructibleUnk5FieldNumber;
const int SpawnEvent::kDestructibleUnk6FieldNumber;
const int SpawnEvent::kDestructibleUnk7FieldNumber;
const int SpawnEvent::kDestructibleUnk8FieldNumber;
const int SpawnEvent::kDestructibleUnk9FieldNumber;
const int SpawnEvent::kTargetableWithHotkeyFieldNumber;
const int SpawnEvent::kShowNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnEvent::SpawnEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.SpawnEvent)
}
SpawnEvent::SpawnEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.SpawnEvent)
}

void SpawnEvent::InitAsDefaultInstance() {
  equipment_ = const_cast< ::eqproto::TextureProfile*>(
      ::eqproto::TextureProfile::internal_default_instance());
  equipment_tint_ = const_cast< ::eqproto::TintProfile*>(
      ::eqproto::TintProfile::internal_default_instance());
}

SpawnEvent::SpawnEvent(const SpawnEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.SpawnEvent)
}

void SpawnEvent::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  suffix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblemodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblename2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destructiblestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  equipment_ = NULL;
  equipment_tint_ = NULL;
  ::memset(&unknown0000_, 0, reinterpret_cast<char*>(&destructibleunk9_) -
    reinterpret_cast<char*>(&unknown0000_) + sizeof(destructibleunk9_));
  _cached_size_ = 0;
}

SpawnEvent::~SpawnEvent() {
  // @@protoc_insertion_point(destructor:eqproto.SpawnEvent)
  SharedDtor();
}

void SpawnEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  suffix_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  title_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  lastname_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  destructiblemodel_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  destructiblename2_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  destructiblestring_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != &SpawnEvent_default_instance_.get()) {
    delete equipment_;
    delete equipment_tint_;
  }
}

void SpawnEvent::ArenaDtor(void* object) {
  SpawnEvent* _this = reinterpret_cast< SpawnEvent* >(object);
  (void)_this;
}
void SpawnEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SpawnEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpawnEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpawnEvent_descriptor_;
}

const SpawnEvent& SpawnEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SpawnEvent> SpawnEvent_default_instance_;

SpawnEvent* SpawnEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SpawnEvent>(arena);
}

void SpawnEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.SpawnEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SpawnEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpawnEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(unknown0000_, face_);
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(deity_, curhp_);
  ZR_(max_hp_, animation_);
  ZR_(padding0058_, padding0070_);
  ZR_(eyecolor1_, unknown0140_);
  ZR_(is_npc_, beardcolor_);
  suffix_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(petownerid_, guildid_);
  if (GetArenaNoVirtual() == NULL && equipment_ != NULL) delete equipment_;
  equipment_ = NULL;
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(unknown0274_, unknown0328_);
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(is_pet_, unknown0336_);
  ZR_(equip_chest2_, lfg_);
  if (GetArenaNoVirtual() == NULL && equipment_tint_ != NULL) delete equipment_tint_;
  equipment_tint_ = NULL;
  destructibleobject_ = false;
  ZR_(destructibleappearance_, destructibleid3_);
  destructiblemodel_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destructiblename2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  destructiblestring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ZR_(destructibleid4_, destructibleunk4_);
  ZR_(destructibleunk5_, destructibleunk8_);
  ZR_(targetable_with_hotkey_, show_name_);
  destructibleunk9_ = 0u;

#undef ZR_HELPER_
#undef ZR_

}

bool SpawnEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.SpawnEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 unknown0000 = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0000_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gm;
        break;
      }

      // optional uint32 gm = 2;
      case 2: {
        if (tag == 16) {
         parse_gm:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unknown0003;
        break;
      }

      // optional uint32 unknown0003 = 3;
      case 3: {
        if (tag == 24) {
         parse_unknown0003:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0003_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_aaitle;
        break;
      }

      // optional uint32 aaitle = 4;
      case 4: {
        if (tag == 32) {
         parse_aaitle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &aaitle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unknown0004;
        break;
      }

      // optional uint32 unknown0004 = 5;
      case 5: {
        if (tag == 40) {
         parse_unknown0004:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0004_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_anon;
        break;
      }

      // optional uint32 anon = 6;
      case 6: {
        if (tag == 48) {
         parse_anon:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anon_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_face;
        break;
      }

      // optional uint32 face = 7;
      case 7: {
        if (tag == 56) {
         parse_face:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_name;
        break;
      }

      // optional string name = 8;
      case 8: {
        if (tag == 66) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_deity;
        break;
      }

      // optional uint32 deity = 9;
      case 9: {
        if (tag == 72) {
         parse_deity:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_unknown0073;
        break;
      }

      // optional uint32 unknown0073 = 10;
      case 10: {
        if (tag == 80) {
         parse_unknown0073:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0073_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_size;
        break;
      }

      // optional float size = 11;
      case 11: {
        if (tag == 93) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_unknown0079;
        break;
      }

      // optional uint32 unknown0079 = 12;
      case 12: {
        if (tag == 96) {
         parse_unknown0079:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0079_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_NPC;
        break;
      }

      // optional uint32 NPC = 13;
      case 13: {
        if (tag == 104) {
         parse_NPC:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_invis;
        break;
      }

      // optional uint32 invis = 14;
      case 14: {
        if (tag == 112) {
         parse_invis:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &invis_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_haircolor;
        break;
      }

      // optional uint32 haircolor = 15;
      case 15: {
        if (tag == 120) {
         parse_haircolor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &haircolor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_curHp;
        break;
      }

      // optional uint32 curHp = 16;
      case 16: {
        if (tag == 128) {
         parse_curHp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curhp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_max_hp;
        break;
      }

      // optional uint32 max_hp = 17;
      case 17: {
        if (tag == 136) {
         parse_max_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_findable;
        break;
      }

      // optional uint32 findable = 18;
      case 18: {
        if (tag == 144) {
         parse_findable:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &findable_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_unknown0089;
        break;
      }

      // optional uint32 unknown0089 = 19;
      case 19: {
        if (tag == 152) {
         parse_unknown0089:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0089_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_deltaHeading;
        break;
      }

      // optional int32 deltaHeading = 20;
      case 20: {
        if (tag == 160) {
         parse_deltaHeading:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltaheading_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_x;
        break;
      }

      // optional int32 x = 21;
      case 21: {
        if (tag == 168) {
         parse_x:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_padding0054;
        break;
      }

      // optional int32 padding0054 = 22;
      case 22: {
        if (tag == 176) {
         parse_padding0054:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0054_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_y;
        break;
      }

      // optional int32 y = 23;
      case 23: {
        if (tag == 184) {
         parse_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_animation;
        break;
      }

      // optional int32 animation = 24;
      case 24: {
        if (tag == 192) {
         parse_animation:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animation_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_padding0058;
        break;
      }

      // optional int32 padding0058 = 25;
      case 25: {
        if (tag == 200) {
         parse_padding0058:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0058_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_z;
        break;
      }

      // optional int32 z = 26;
      case 26: {
        if (tag == 208) {
         parse_z:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_deltaY;
        break;
      }

      // optional int32 deltaY = 27;
      case 27: {
        if (tag == 216) {
         parse_deltaY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltay_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_deltaX;
        break;
      }

      // optional int32 deltaX = 28;
      case 28: {
        if (tag == 224) {
         parse_deltaX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltax_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_heading;
        break;
      }

      // optional uint32 heading = 29;
      case 29: {
        if (tag == 232) {
         parse_heading:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_padding0066;
        break;
      }

      // optional int32 padding0066 = 30;
      case 30: {
        if (tag == 240) {
         parse_padding0066:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0066_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_deltaZ;
        break;
      }

      // optional int32 deltaZ = 31;
      case 31: {
        if (tag == 248) {
         parse_deltaZ:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltaz_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_padding0070;
        break;
      }

      // optional int32 padding0070 = 32;
      case 32: {
        if (tag == 256) {
         parse_padding0070:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &padding0070_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(264)) goto parse_eyecolor1;
        break;
      }

      // optional uint32 eyecolor1 = 33;
      case 33: {
        if (tag == 264) {
         parse_eyecolor1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eyecolor1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_unknown0115;
        break;
      }

      // optional uint32 unknown0115 = 34;
      case 34: {
        if (tag == 272) {
         parse_unknown0115:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0115_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(280)) goto parse_StandState;
        break;
      }

      // optional uint32 StandState = 35;
      case 35: {
        if (tag == 280) {
         parse_StandState:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &standstate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_drakkin_heritage;
        break;
      }

      // optional uint32 drakkin_heritage = 36;
      case 36: {
        if (tag == 288) {
         parse_drakkin_heritage:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_heritage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_drakkin_tattoo;
        break;
      }

      // optional uint32 drakkin_tattoo = 37;
      case 37: {
        if (tag == 296) {
         parse_drakkin_tattoo:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_tattoo_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_drakkin_details;
        break;
      }

      // optional uint32 drakkin_details = 38;
      case 38: {
        if (tag == 304) {
         parse_drakkin_details:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drakkin_details_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_showhelm;
        break;
      }

      // optional uint32 showhelm = 39;
      case 39: {
        if (tag == 312) {
         parse_showhelm:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &showhelm_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_unknown0140;
        break;
      }

      // optional uint32 unknown0140 = 40;
      case 40: {
        if (tag == 320) {
         parse_unknown0140:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0140_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_is_npc;
        break;
      }

      // optional uint32 is_npc = 41;
      case 41: {
        if (tag == 328) {
         parse_is_npc:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_npc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_hairstyle;
        break;
      }

      // optional uint32 hairstyle = 42;
      case 42: {
        if (tag == 336) {
         parse_hairstyle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hairstyle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_beard;
        break;
      }

      // optional uint32 beard = 43;
      case 43: {
        if (tag == 344) {
         parse_beard:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beard_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(352)) goto parse_unknown0147;
        break;
      }

      // optional uint32 unknown0147 = 44;
      case 44: {
        if (tag == 352) {
         parse_unknown0147:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0147_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(360)) goto parse_level;
        break;
      }

      // optional uint32 level = 45;
      case 45: {
        if (tag == 360) {
         parse_level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(368)) goto parse_PlayerState;
        break;
      }

      // optional uint32 PlayerState = 46;
      case 46: {
        if (tag == 368) {
         parse_PlayerState:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerstate_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(376)) goto parse_beardcolor;
        break;
      }

      // optional uint32 beardcolor = 47;
      case 47: {
        if (tag == 376) {
         parse_beardcolor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &beardcolor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_suffix;
        break;
      }

      // optional string suffix = 48;
      case 48: {
        if (tag == 386) {
         parse_suffix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suffix().data(), this->suffix().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.suffix"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(392)) goto parse_petOwnerId;
        break;
      }

      // optional uint32 petOwnerId = 49;
      case 49: {
        if (tag == 392) {
         parse_petOwnerId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &petownerid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_guildrank;
        break;
      }

      // optional uint32 guildrank = 50;
      case 50: {
        if (tag == 400) {
         parse_guildrank:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guildrank_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_unknown0194;
        break;
      }

      // optional uint32 unknown0194 = 51;
      case 51: {
        if (tag == 408) {
         parse_unknown0194:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0194_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_equipment;
        break;
      }

      // optional .eqproto.TextureProfile equipment = 52;
      case 52: {
        if (tag == 418) {
         parse_equipment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(429)) goto parse_runspeed;
        break;
      }

      // optional float runspeed = 53;
      case 53: {
        if (tag == 429) {
         parse_runspeed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &runspeed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(432)) goto parse_afk;
        break;
      }

      // optional uint32 afk = 54;
      case 54: {
        if (tag == 432) {
         parse_afk:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &afk_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(440)) goto parse_guildID;
        break;
      }

      // optional uint32 guildID = 55;
      case 55: {
        if (tag == 440) {
         parse_guildID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_title;
        break;
      }

      // optional string title = 56;
      case 56: {
        if (tag == 450) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(456)) goto parse_unknown0274;
        break;
      }

      // optional uint32 unknown0274 = 57;
      case 57: {
        if (tag == 456) {
         parse_unknown0274:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0274_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(464)) goto parse_set_to_0xFF;
        break;
      }

      // optional uint32 set_to_0xFF = 58;
      case 58: {
        if (tag == 464) {
         parse_set_to_0xFF:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_0xff_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(472)) goto parse_helm;
        break;
      }

      // optional uint32 helm = 59;
      case 59: {
        if (tag == 472) {
         parse_helm:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &helm_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(480)) goto parse_race;
        break;
      }

      // optional uint32 race = 60;
      case 60: {
        if (tag == 480) {
         parse_race:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &race_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(488)) goto parse_unknown0288;
        break;
      }

      // optional uint32 unknown0288 = 61;
      case 61: {
        if (tag == 488) {
         parse_unknown0288:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0288_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(498)) goto parse_lastName;
        break;
      }

      // optional string lastName = 62;
      case 62: {
        if (tag == 498) {
         parse_lastName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastname().data(), this->lastname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.lastName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(509)) goto parse_walkspeed;
        break;
      }

      // optional float walkspeed = 63;
      case 63: {
        if (tag == 509) {
         parse_walkspeed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &walkspeed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(512)) goto parse_unknown0328;
        break;
      }

      // optional uint32 unknown0328 = 64;
      case 64: {
        if (tag == 512) {
         parse_unknown0328:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0328_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_is_pet;
        break;
      }

      // optional uint32 is_pet = 65;
      case 65: {
        if (tag == 520) {
         parse_is_pet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_pet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(528)) goto parse_light;
        break;
      }

      // optional uint32 light = 66;
      case 66: {
        if (tag == 528) {
         parse_light:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &light_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(536)) goto parse_class_;
        break;
      }

      // optional uint32 class_ = 67;
      case 67: {
        if (tag == 536) {
         parse_class_:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(544)) goto parse_eyecolor2;
        break;
      }

      // optional uint32 eyecolor2 = 68;
      case 68: {
        if (tag == 544) {
         parse_eyecolor2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eyecolor2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(552)) goto parse_flymode;
        break;
      }

      // optional uint32 flymode = 69;
      case 69: {
        if (tag == 552) {
         parse_flymode:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flymode_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(560)) goto parse_gender;
        break;
      }

      // optional uint32 gender = 70;
      case 70: {
        if (tag == 560) {
         parse_gender:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(568)) goto parse_bodytype;
        break;
      }

      // optional uint32 bodytype = 71;
      case 71: {
        if (tag == 568) {
         parse_bodytype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bodytype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(576)) goto parse_unknown0336;
        break;
      }

      // optional uint32 unknown0336 = 72;
      case 72: {
        if (tag == 576) {
         parse_unknown0336:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0336_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(584)) goto parse_equip_chest2;
        break;
      }

      // optional uint32 equip_chest2 = 73;
      case 73: {
        if (tag == 584) {
         parse_equip_chest2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equip_chest2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(592)) goto parse_mount_color;
        break;
      }

      // optional uint32 mount_color = 74;
      case 74: {
        if (tag == 592) {
         parse_mount_color:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mount_color_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(600)) goto parse_spawnId;
        break;
      }

      // optional uint32 spawnId = 75;
      case 75: {
        if (tag == 600) {
         parse_spawnId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spawnid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(608)) goto parse_unknown0344;
        break;
      }

      // optional uint32 unknown0344 = 76;
      case 76: {
        if (tag == 608) {
         parse_unknown0344:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown0344_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(616)) goto parse_IsMercenary;
        break;
      }

      // optional uint32 IsMercenary = 77;
      case 77: {
        if (tag == 616) {
         parse_IsMercenary:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ismercenary_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(626)) goto parse_equipment_tint;
        break;
      }

      // optional .eqproto.TintProfile equipment_tint = 78;
      case 78: {
        if (tag == 626) {
         parse_equipment_tint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipment_tint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(632)) goto parse_lfg;
        break;
      }

      // optional uint32 lfg = 79;
      case 79: {
        if (tag == 632) {
         parse_lfg:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lfg_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(640)) goto parse_DestructibleObject;
        break;
      }

      // optional bool DestructibleObject = 80;
      case 80: {
        if (tag == 640) {
         parse_DestructibleObject:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destructibleobject_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(658)) goto parse_DestructibleModel;
        break;
      }

      // optional string DestructibleModel = 82;
      case 82: {
        if (tag == 658) {
         parse_DestructibleModel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblemodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblemodel().data(), this->destructiblemodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.DestructibleModel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(666)) goto parse_DestructibleName2;
        break;
      }

      // optional string DestructibleName2 = 83;
      case 83: {
        if (tag == 666) {
         parse_DestructibleName2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblename2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblename2().data(), this->destructiblename2().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.DestructibleName2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(674)) goto parse_DestructibleString;
        break;
      }

      // optional string DestructibleString = 84;
      case 84: {
        if (tag == 674) {
         parse_DestructibleString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destructiblestring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destructiblestring().data(), this->destructiblestring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eqproto.SpawnEvent.DestructibleString"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(680)) goto parse_DestructibleAppearance;
        break;
      }

      // optional uint32 DestructibleAppearance = 85;
      case 85: {
        if (tag == 680) {
         parse_DestructibleAppearance:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleappearance_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(688)) goto parse_DestructibleUnk1;
        break;
      }

      // optional uint32 DestructibleUnk1 = 86;
      case 86: {
        if (tag == 688) {
         parse_DestructibleUnk1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(696)) goto parse_DestructibleID1;
        break;
      }

      // optional uint32 DestructibleID1 = 87;
      case 87: {
        if (tag == 696) {
         parse_DestructibleID1:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(704)) goto parse_DestructibleID2;
        break;
      }

      // optional uint32 DestructibleID2 = 88;
      case 88: {
        if (tag == 704) {
         parse_DestructibleID2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(712)) goto parse_DestructibleID3;
        break;
      }

      // optional uint32 DestructibleID3 = 89;
      case 89: {
        if (tag == 712) {
         parse_DestructibleID3:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid3_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(720)) goto parse_DestructibleID4;
        break;
      }

      // optional uint32 DestructibleID4 = 90;
      case 90: {
        if (tag == 720) {
         parse_DestructibleID4:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleid4_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(728)) goto parse_DestructibleUnk2;
        break;
      }

      // optional uint32 DestructibleUnk2 = 91;
      case 91: {
        if (tag == 728) {
         parse_DestructibleUnk2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(736)) goto parse_DestructibleUnk3;
        break;
      }

      // optional uint32 DestructibleUnk3 = 92;
      case 92: {
        if (tag == 736) {
         parse_DestructibleUnk3:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk3_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(744)) goto parse_DestructibleUnk4;
        break;
      }

      // optional uint32 DestructibleUnk4 = 93;
      case 93: {
        if (tag == 744) {
         parse_DestructibleUnk4:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk4_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(752)) goto parse_DestructibleUnk5;
        break;
      }

      // optional uint32 DestructibleUnk5 = 94;
      case 94: {
        if (tag == 752) {
         parse_DestructibleUnk5:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk5_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(760)) goto parse_DestructibleUnk6;
        break;
      }

      // optional uint32 DestructibleUnk6 = 95;
      case 95: {
        if (tag == 760) {
         parse_DestructibleUnk6:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk6_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(768)) goto parse_DestructibleUnk7;
        break;
      }

      // optional uint32 DestructibleUnk7 = 96;
      case 96: {
        if (tag == 768) {
         parse_DestructibleUnk7:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk7_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(776)) goto parse_DestructibleUnk8;
        break;
      }

      // optional uint32 DestructibleUnk8 = 97;
      case 97: {
        if (tag == 776) {
         parse_DestructibleUnk8:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk8_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(784)) goto parse_DestructibleUnk9;
        break;
      }

      // optional uint32 DestructibleUnk9 = 98;
      case 98: {
        if (tag == 784) {
         parse_DestructibleUnk9:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destructibleunk9_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(792)) goto parse_targetable_with_hotkey;
        break;
      }

      // optional bool targetable_with_hotkey = 99;
      case 99: {
        if (tag == 792) {
         parse_targetable_with_hotkey:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &targetable_with_hotkey_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_show_name;
        break;
      }

      // optional bool show_name = 100;
      case 100: {
        if (tag == 800) {
         parse_show_name:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_name_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.SpawnEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.SpawnEvent)
  return false;
#undef DO_
}

void SpawnEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.SpawnEvent)
  // optional uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->unknown0000(), output);
  }

  // optional uint32 gm = 2;
  if (this->gm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gm(), output);
  }

  // optional uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown0003(), output);
  }

  // optional uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->aaitle(), output);
  }

  // optional uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown0004(), output);
  }

  // optional uint32 anon = 6;
  if (this->anon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->anon(), output);
  }

  // optional uint32 face = 7;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->face(), output);
  }

  // optional string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // optional uint32 deity = 9;
  if (this->deity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->deity(), output);
  }

  // optional uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->unknown0073(), output);
  }

  // optional float size = 11;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->size(), output);
  }

  // optional uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->unknown0079(), output);
  }

  // optional uint32 NPC = 13;
  if (this->npc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->npc(), output);
  }

  // optional uint32 invis = 14;
  if (this->invis() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->invis(), output);
  }

  // optional uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->haircolor(), output);
  }

  // optional uint32 curHp = 16;
  if (this->curhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->curhp(), output);
  }

  // optional uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->max_hp(), output);
  }

  // optional uint32 findable = 18;
  if (this->findable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->findable(), output);
  }

  // optional uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->unknown0089(), output);
  }

  // optional int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->deltaheading(), output);
  }

  // optional int32 x = 21;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->x(), output);
  }

  // optional int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->padding0054(), output);
  }

  // optional int32 y = 23;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->y(), output);
  }

  // optional int32 animation = 24;
  if (this->animation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->animation(), output);
  }

  // optional int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->padding0058(), output);
  }

  // optional int32 z = 26;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->z(), output);
  }

  // optional int32 deltaY = 27;
  if (this->deltay() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->deltay(), output);
  }

  // optional int32 deltaX = 28;
  if (this->deltax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->deltax(), output);
  }

  // optional uint32 heading = 29;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->heading(), output);
  }

  // optional int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->padding0066(), output);
  }

  // optional int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->deltaz(), output);
  }

  // optional int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->padding0070(), output);
  }

  // optional uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->eyecolor1(), output);
  }

  // optional uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->unknown0115(), output);
  }

  // optional uint32 StandState = 35;
  if (this->standstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->standstate(), output);
  }

  // optional uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->drakkin_heritage(), output);
  }

  // optional uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->drakkin_tattoo(), output);
  }

  // optional uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->drakkin_details(), output);
  }

  // optional uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(39, this->showhelm(), output);
  }

  // optional uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->unknown0140(), output);
  }

  // optional uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(41, this->is_npc(), output);
  }

  // optional uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->hairstyle(), output);
  }

  // optional uint32 beard = 43;
  if (this->beard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->beard(), output);
  }

  // optional uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->unknown0147(), output);
  }

  // optional uint32 level = 45;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->level(), output);
  }

  // optional uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->playerstate(), output);
  }

  // optional uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->beardcolor(), output);
  }

  // optional string suffix = 48;
  if (this->suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), this->suffix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      48, this->suffix(), output);
  }

  // optional uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->petownerid(), output);
  }

  // optional uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->guildrank(), output);
  }

  // optional uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->unknown0194(), output);
  }

  // optional .eqproto.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, *this->equipment_, output);
  }

  // optional float runspeed = 53;
  if (this->runspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(53, this->runspeed(), output);
  }

  // optional uint32 afk = 54;
  if (this->afk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->afk(), output);
  }

  // optional uint32 guildID = 55;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->guildid(), output);
  }

  // optional string title = 56;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      56, this->title(), output);
  }

  // optional uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->unknown0274(), output);
  }

  // optional uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(58, this->set_to_0xff(), output);
  }

  // optional uint32 helm = 59;
  if (this->helm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(59, this->helm(), output);
  }

  // optional uint32 race = 60;
  if (this->race() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->race(), output);
  }

  // optional uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(61, this->unknown0288(), output);
  }

  // optional string lastName = 62;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.lastName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      62, this->lastname(), output);
  }

  // optional float walkspeed = 63;
  if (this->walkspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(63, this->walkspeed(), output);
  }

  // optional uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(64, this->unknown0328(), output);
  }

  // optional uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(65, this->is_pet(), output);
  }

  // optional uint32 light = 66;
  if (this->light() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(66, this->light(), output);
  }

  // optional uint32 class_ = 67;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(67, this->class_(), output);
  }

  // optional uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(68, this->eyecolor2(), output);
  }

  // optional uint32 flymode = 69;
  if (this->flymode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(69, this->flymode(), output);
  }

  // optional uint32 gender = 70;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(70, this->gender(), output);
  }

  // optional uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(71, this->bodytype(), output);
  }

  // optional uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(72, this->unknown0336(), output);
  }

  // optional uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(73, this->equip_chest2(), output);
  }

  // optional uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(74, this->mount_color(), output);
  }

  // optional uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(75, this->spawnid(), output);
  }

  // optional uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(76, this->unknown0344(), output);
  }

  // optional uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(77, this->ismercenary(), output);
  }

  // optional .eqproto.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78, *this->equipment_tint_, output);
  }

  // optional uint32 lfg = 79;
  if (this->lfg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(79, this->lfg(), output);
  }

  // optional bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(80, this->destructibleobject(), output);
  }

  // optional string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblemodel().data(), this->destructiblemodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleModel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      82, this->destructiblemodel(), output);
  }

  // optional string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblename2().data(), this->destructiblename2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleName2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      83, this->destructiblename2(), output);
  }

  // optional string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblestring().data(), this->destructiblestring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      84, this->destructiblestring(), output);
  }

  // optional uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(85, this->destructibleappearance(), output);
  }

  // optional uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(86, this->destructibleunk1(), output);
  }

  // optional uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(87, this->destructibleid1(), output);
  }

  // optional uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(88, this->destructibleid2(), output);
  }

  // optional uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(89, this->destructibleid3(), output);
  }

  // optional uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(90, this->destructibleid4(), output);
  }

  // optional uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(91, this->destructibleunk2(), output);
  }

  // optional uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(92, this->destructibleunk3(), output);
  }

  // optional uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(93, this->destructibleunk4(), output);
  }

  // optional uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(94, this->destructibleunk5(), output);
  }

  // optional uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(95, this->destructibleunk6(), output);
  }

  // optional uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(96, this->destructibleunk7(), output);
  }

  // optional uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(97, this->destructibleunk8(), output);
  }

  // optional uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(98, this->destructibleunk9(), output);
  }

  // optional bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(99, this->targetable_with_hotkey(), output);
  }

  // optional bool show_name = 100;
  if (this->show_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(100, this->show_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.SpawnEvent)
}

::google::protobuf::uint8* SpawnEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.SpawnEvent)
  // optional uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->unknown0000(), target);
  }

  // optional uint32 gm = 2;
  if (this->gm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gm(), target);
  }

  // optional uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown0003(), target);
  }

  // optional uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->aaitle(), target);
  }

  // optional uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown0004(), target);
  }

  // optional uint32 anon = 6;
  if (this->anon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->anon(), target);
  }

  // optional uint32 face = 7;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->face(), target);
  }

  // optional string name = 8;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // optional uint32 deity = 9;
  if (this->deity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->deity(), target);
  }

  // optional uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->unknown0073(), target);
  }

  // optional float size = 11;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->size(), target);
  }

  // optional uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->unknown0079(), target);
  }

  // optional uint32 NPC = 13;
  if (this->npc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->npc(), target);
  }

  // optional uint32 invis = 14;
  if (this->invis() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->invis(), target);
  }

  // optional uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->haircolor(), target);
  }

  // optional uint32 curHp = 16;
  if (this->curhp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->curhp(), target);
  }

  // optional uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->max_hp(), target);
  }

  // optional uint32 findable = 18;
  if (this->findable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->findable(), target);
  }

  // optional uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->unknown0089(), target);
  }

  // optional int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->deltaheading(), target);
  }

  // optional int32 x = 21;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->x(), target);
  }

  // optional int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->padding0054(), target);
  }

  // optional int32 y = 23;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->y(), target);
  }

  // optional int32 animation = 24;
  if (this->animation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->animation(), target);
  }

  // optional int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->padding0058(), target);
  }

  // optional int32 z = 26;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->z(), target);
  }

  // optional int32 deltaY = 27;
  if (this->deltay() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->deltay(), target);
  }

  // optional int32 deltaX = 28;
  if (this->deltax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->deltax(), target);
  }

  // optional uint32 heading = 29;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->heading(), target);
  }

  // optional int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->padding0066(), target);
  }

  // optional int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->deltaz(), target);
  }

  // optional int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->padding0070(), target);
  }

  // optional uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->eyecolor1(), target);
  }

  // optional uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->unknown0115(), target);
  }

  // optional uint32 StandState = 35;
  if (this->standstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->standstate(), target);
  }

  // optional uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->drakkin_heritage(), target);
  }

  // optional uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->drakkin_tattoo(), target);
  }

  // optional uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->drakkin_details(), target);
  }

  // optional uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(39, this->showhelm(), target);
  }

  // optional uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->unknown0140(), target);
  }

  // optional uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(41, this->is_npc(), target);
  }

  // optional uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->hairstyle(), target);
  }

  // optional uint32 beard = 43;
  if (this->beard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->beard(), target);
  }

  // optional uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(44, this->unknown0147(), target);
  }

  // optional uint32 level = 45;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(45, this->level(), target);
  }

  // optional uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(46, this->playerstate(), target);
  }

  // optional uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(47, this->beardcolor(), target);
  }

  // optional string suffix = 48;
  if (this->suffix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), this->suffix().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        48, this->suffix(), target);
  }

  // optional uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(49, this->petownerid(), target);
  }

  // optional uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->guildrank(), target);
  }

  // optional uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->unknown0194(), target);
  }

  // optional .eqproto.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, *this->equipment_, false, target);
  }

  // optional float runspeed = 53;
  if (this->runspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(53, this->runspeed(), target);
  }

  // optional uint32 afk = 54;
  if (this->afk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(54, this->afk(), target);
  }

  // optional uint32 guildID = 55;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->guildid(), target);
  }

  // optional string title = 56;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        56, this->title(), target);
  }

  // optional uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(57, this->unknown0274(), target);
  }

  // optional uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(58, this->set_to_0xff(), target);
  }

  // optional uint32 helm = 59;
  if (this->helm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(59, this->helm(), target);
  }

  // optional uint32 race = 60;
  if (this->race() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->race(), target);
  }

  // optional uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(61, this->unknown0288(), target);
  }

  // optional string lastName = 62;
  if (this->lastname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastname().data(), this->lastname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.lastName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        62, this->lastname(), target);
  }

  // optional float walkspeed = 63;
  if (this->walkspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(63, this->walkspeed(), target);
  }

  // optional uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(64, this->unknown0328(), target);
  }

  // optional uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(65, this->is_pet(), target);
  }

  // optional uint32 light = 66;
  if (this->light() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(66, this->light(), target);
  }

  // optional uint32 class_ = 67;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(67, this->class_(), target);
  }

  // optional uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(68, this->eyecolor2(), target);
  }

  // optional uint32 flymode = 69;
  if (this->flymode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(69, this->flymode(), target);
  }

  // optional uint32 gender = 70;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(70, this->gender(), target);
  }

  // optional uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(71, this->bodytype(), target);
  }

  // optional uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(72, this->unknown0336(), target);
  }

  // optional uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(73, this->equip_chest2(), target);
  }

  // optional uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(74, this->mount_color(), target);
  }

  // optional uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(75, this->spawnid(), target);
  }

  // optional uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(76, this->unknown0344(), target);
  }

  // optional uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(77, this->ismercenary(), target);
  }

  // optional .eqproto.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        78, *this->equipment_tint_, false, target);
  }

  // optional uint32 lfg = 79;
  if (this->lfg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(79, this->lfg(), target);
  }

  // optional bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(80, this->destructibleobject(), target);
  }

  // optional string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblemodel().data(), this->destructiblemodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleModel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        82, this->destructiblemodel(), target);
  }

  // optional string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblename2().data(), this->destructiblename2().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleName2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        83, this->destructiblename2(), target);
  }

  // optional string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destructiblestring().data(), this->destructiblestring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eqproto.SpawnEvent.DestructibleString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        84, this->destructiblestring(), target);
  }

  // optional uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(85, this->destructibleappearance(), target);
  }

  // optional uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(86, this->destructibleunk1(), target);
  }

  // optional uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(87, this->destructibleid1(), target);
  }

  // optional uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(88, this->destructibleid2(), target);
  }

  // optional uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(89, this->destructibleid3(), target);
  }

  // optional uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(90, this->destructibleid4(), target);
  }

  // optional uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(91, this->destructibleunk2(), target);
  }

  // optional uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(92, this->destructibleunk3(), target);
  }

  // optional uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(93, this->destructibleunk4(), target);
  }

  // optional uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(94, this->destructibleunk5(), target);
  }

  // optional uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(95, this->destructibleunk6(), target);
  }

  // optional uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(96, this->destructibleunk7(), target);
  }

  // optional uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(97, this->destructibleunk8(), target);
  }

  // optional uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(98, this->destructibleunk9(), target);
  }

  // optional bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(99, this->targetable_with_hotkey(), target);
  }

  // optional bool show_name = 100;
  if (this->show_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(100, this->show_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.SpawnEvent)
  return target;
}

size_t SpawnEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.SpawnEvent)
  size_t total_size = 0;

  // optional uint32 unknown0000 = 1;
  if (this->unknown0000() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0000());
  }

  // optional uint32 gm = 2;
  if (this->gm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm());
  }

  // optional uint32 unknown0003 = 3;
  if (this->unknown0003() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0003());
  }

  // optional uint32 aaitle = 4;
  if (this->aaitle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->aaitle());
  }

  // optional uint32 unknown0004 = 5;
  if (this->unknown0004() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0004());
  }

  // optional uint32 anon = 6;
  if (this->anon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->anon());
  }

  // optional uint32 face = 7;
  if (this->face() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->face());
  }

  // optional string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 deity = 9;
  if (this->deity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deity());
  }

  // optional uint32 unknown0073 = 10;
  if (this->unknown0073() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0073());
  }

  // optional float size = 11;
  if (this->size() != 0) {
    total_size += 1 + 4;
  }

  // optional uint32 unknown0079 = 12;
  if (this->unknown0079() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0079());
  }

  // optional uint32 NPC = 13;
  if (this->npc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc());
  }

  // optional uint32 invis = 14;
  if (this->invis() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->invis());
  }

  // optional uint32 haircolor = 15;
  if (this->haircolor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->haircolor());
  }

  // optional uint32 curHp = 16;
  if (this->curhp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curhp());
  }

  // optional uint32 max_hp = 17;
  if (this->max_hp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_hp());
  }

  // optional uint32 findable = 18;
  if (this->findable() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->findable());
  }

  // optional uint32 unknown0089 = 19;
  if (this->unknown0089() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0089());
  }

  // optional int32 deltaHeading = 20;
  if (this->deltaheading() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaheading());
  }

  // optional int32 x = 21;
  if (this->x() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // optional int32 padding0054 = 22;
  if (this->padding0054() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0054());
  }

  // optional int32 y = 23;
  if (this->y() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // optional int32 animation = 24;
  if (this->animation() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animation());
  }

  // optional int32 padding0058 = 25;
  if (this->padding0058() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0058());
  }

  // optional int32 z = 26;
  if (this->z() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  // optional int32 deltaY = 27;
  if (this->deltay() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltay());
  }

  // optional int32 deltaX = 28;
  if (this->deltax() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltax());
  }

  // optional uint32 heading = 29;
  if (this->heading() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heading());
  }

  // optional int32 padding0066 = 30;
  if (this->padding0066() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0066());
  }

  // optional int32 deltaZ = 31;
  if (this->deltaz() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltaz());
  }

  // optional int32 padding0070 = 32;
  if (this->padding0070() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->padding0070());
  }

  // optional uint32 eyecolor1 = 33;
  if (this->eyecolor1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eyecolor1());
  }

  // optional uint32 unknown0115 = 34;
  if (this->unknown0115() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0115());
  }

  // optional uint32 StandState = 35;
  if (this->standstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->standstate());
  }

  // optional uint32 drakkin_heritage = 36;
  if (this->drakkin_heritage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_heritage());
  }

  // optional uint32 drakkin_tattoo = 37;
  if (this->drakkin_tattoo() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_tattoo());
  }

  // optional uint32 drakkin_details = 38;
  if (this->drakkin_details() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drakkin_details());
  }

  // optional uint32 showhelm = 39;
  if (this->showhelm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->showhelm());
  }

  // optional uint32 unknown0140 = 40;
  if (this->unknown0140() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0140());
  }

  // optional uint32 is_npc = 41;
  if (this->is_npc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_npc());
  }

  // optional uint32 hairstyle = 42;
  if (this->hairstyle() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hairstyle());
  }

  // optional uint32 beard = 43;
  if (this->beard() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beard());
  }

  // optional uint32 unknown0147 = 44;
  if (this->unknown0147() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0147());
  }

  // optional uint32 level = 45;
  if (this->level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 PlayerState = 46;
  if (this->playerstate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerstate());
  }

  // optional uint32 beardcolor = 47;
  if (this->beardcolor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->beardcolor());
  }

  // optional string suffix = 48;
  if (this->suffix().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->suffix());
  }

  // optional uint32 petOwnerId = 49;
  if (this->petownerid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->petownerid());
  }

  // optional uint32 guildrank = 50;
  if (this->guildrank() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guildrank());
  }

  // optional uint32 unknown0194 = 51;
  if (this->unknown0194() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0194());
  }

  // optional .eqproto.TextureProfile equipment = 52;
  if (this->has_equipment()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equipment_);
  }

  // optional float runspeed = 53;
  if (this->runspeed() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 afk = 54;
  if (this->afk() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->afk());
  }

  // optional uint32 guildID = 55;
  if (this->guildid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guildid());
  }

  // optional string title = 56;
  if (this->title().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional uint32 unknown0274 = 57;
  if (this->unknown0274() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0274());
  }

  // optional uint32 set_to_0xFF = 58;
  if (this->set_to_0xff() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->set_to_0xff());
  }

  // optional uint32 helm = 59;
  if (this->helm() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->helm());
  }

  // optional uint32 race = 60;
  if (this->race() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->race());
  }

  // optional uint32 unknown0288 = 61;
  if (this->unknown0288() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0288());
  }

  // optional string lastName = 62;
  if (this->lastname().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastname());
  }

  // optional float walkspeed = 63;
  if (this->walkspeed() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 unknown0328 = 64;
  if (this->unknown0328() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0328());
  }

  // optional uint32 is_pet = 65;
  if (this->is_pet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_pet());
  }

  // optional uint32 light = 66;
  if (this->light() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->light());
  }

  // optional uint32 class_ = 67;
  if (this->class_() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_());
  }

  // optional uint32 eyecolor2 = 68;
  if (this->eyecolor2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eyecolor2());
  }

  // optional uint32 flymode = 69;
  if (this->flymode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flymode());
  }

  // optional uint32 gender = 70;
  if (this->gender() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender());
  }

  // optional uint32 bodytype = 71;
  if (this->bodytype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bodytype());
  }

  // optional uint32 unknown0336 = 72;
  if (this->unknown0336() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0336());
  }

  // optional uint32 equip_chest2 = 73;
  if (this->equip_chest2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equip_chest2());
  }

  // optional uint32 mount_color = 74;
  if (this->mount_color() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mount_color());
  }

  // optional uint32 spawnId = 75;
  if (this->spawnid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spawnid());
  }

  // optional uint32 unknown0344 = 76;
  if (this->unknown0344() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown0344());
  }

  // optional uint32 IsMercenary = 77;
  if (this->ismercenary() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ismercenary());
  }

  // optional .eqproto.TintProfile equipment_tint = 78;
  if (this->has_equipment_tint()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equipment_tint_);
  }

  // optional uint32 lfg = 79;
  if (this->lfg() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lfg());
  }

  // optional bool DestructibleObject = 80;
  if (this->destructibleobject() != 0) {
    total_size += 2 + 1;
  }

  // optional string DestructibleModel = 82;
  if (this->destructiblemodel().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblemodel());
  }

  // optional string DestructibleName2 = 83;
  if (this->destructiblename2().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblename2());
  }

  // optional string DestructibleString = 84;
  if (this->destructiblestring().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destructiblestring());
  }

  // optional uint32 DestructibleAppearance = 85;
  if (this->destructibleappearance() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleappearance());
  }

  // optional uint32 DestructibleUnk1 = 86;
  if (this->destructibleunk1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk1());
  }

  // optional uint32 DestructibleID1 = 87;
  if (this->destructibleid1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid1());
  }

  // optional uint32 DestructibleID2 = 88;
  if (this->destructibleid2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid2());
  }

  // optional uint32 DestructibleID3 = 89;
  if (this->destructibleid3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid3());
  }

  // optional uint32 DestructibleID4 = 90;
  if (this->destructibleid4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleid4());
  }

  // optional uint32 DestructibleUnk2 = 91;
  if (this->destructibleunk2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk2());
  }

  // optional uint32 DestructibleUnk3 = 92;
  if (this->destructibleunk3() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk3());
  }

  // optional uint32 DestructibleUnk4 = 93;
  if (this->destructibleunk4() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk4());
  }

  // optional uint32 DestructibleUnk5 = 94;
  if (this->destructibleunk5() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk5());
  }

  // optional uint32 DestructibleUnk6 = 95;
  if (this->destructibleunk6() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk6());
  }

  // optional uint32 DestructibleUnk7 = 96;
  if (this->destructibleunk7() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk7());
  }

  // optional uint32 DestructibleUnk8 = 97;
  if (this->destructibleunk8() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk8());
  }

  // optional uint32 DestructibleUnk9 = 98;
  if (this->destructibleunk9() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destructibleunk9());
  }

  // optional bool targetable_with_hotkey = 99;
  if (this->targetable_with_hotkey() != 0) {
    total_size += 2 + 1;
  }

  // optional bool show_name = 100;
  if (this->show_name() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpawnEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.SpawnEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpawnEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.SpawnEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.SpawnEvent)
    UnsafeMergeFrom(*source);
  }
}

void SpawnEvent::MergeFrom(const SpawnEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.SpawnEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SpawnEvent::UnsafeMergeFrom(const SpawnEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.unknown0000() != 0) {
    set_unknown0000(from.unknown0000());
  }
  if (from.gm() != 0) {
    set_gm(from.gm());
  }
  if (from.unknown0003() != 0) {
    set_unknown0003(from.unknown0003());
  }
  if (from.aaitle() != 0) {
    set_aaitle(from.aaitle());
  }
  if (from.unknown0004() != 0) {
    set_unknown0004(from.unknown0004());
  }
  if (from.anon() != 0) {
    set_anon(from.anon());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.deity() != 0) {
    set_deity(from.deity());
  }
  if (from.unknown0073() != 0) {
    set_unknown0073(from.unknown0073());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.unknown0079() != 0) {
    set_unknown0079(from.unknown0079());
  }
  if (from.npc() != 0) {
    set_npc(from.npc());
  }
  if (from.invis() != 0) {
    set_invis(from.invis());
  }
  if (from.haircolor() != 0) {
    set_haircolor(from.haircolor());
  }
  if (from.curhp() != 0) {
    set_curhp(from.curhp());
  }
  if (from.max_hp() != 0) {
    set_max_hp(from.max_hp());
  }
  if (from.findable() != 0) {
    set_findable(from.findable());
  }
  if (from.unknown0089() != 0) {
    set_unknown0089(from.unknown0089());
  }
  if (from.deltaheading() != 0) {
    set_deltaheading(from.deltaheading());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.padding0054() != 0) {
    set_padding0054(from.padding0054());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.animation() != 0) {
    set_animation(from.animation());
  }
  if (from.padding0058() != 0) {
    set_padding0058(from.padding0058());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.deltay() != 0) {
    set_deltay(from.deltay());
  }
  if (from.deltax() != 0) {
    set_deltax(from.deltax());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.padding0066() != 0) {
    set_padding0066(from.padding0066());
  }
  if (from.deltaz() != 0) {
    set_deltaz(from.deltaz());
  }
  if (from.padding0070() != 0) {
    set_padding0070(from.padding0070());
  }
  if (from.eyecolor1() != 0) {
    set_eyecolor1(from.eyecolor1());
  }
  if (from.unknown0115() != 0) {
    set_unknown0115(from.unknown0115());
  }
  if (from.standstate() != 0) {
    set_standstate(from.standstate());
  }
  if (from.drakkin_heritage() != 0) {
    set_drakkin_heritage(from.drakkin_heritage());
  }
  if (from.drakkin_tattoo() != 0) {
    set_drakkin_tattoo(from.drakkin_tattoo());
  }
  if (from.drakkin_details() != 0) {
    set_drakkin_details(from.drakkin_details());
  }
  if (from.showhelm() != 0) {
    set_showhelm(from.showhelm());
  }
  if (from.unknown0140() != 0) {
    set_unknown0140(from.unknown0140());
  }
  if (from.is_npc() != 0) {
    set_is_npc(from.is_npc());
  }
  if (from.hairstyle() != 0) {
    set_hairstyle(from.hairstyle());
  }
  if (from.beard() != 0) {
    set_beard(from.beard());
  }
  if (from.unknown0147() != 0) {
    set_unknown0147(from.unknown0147());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.playerstate() != 0) {
    set_playerstate(from.playerstate());
  }
  if (from.beardcolor() != 0) {
    set_beardcolor(from.beardcolor());
  }
  if (from.suffix().size() > 0) {
    set_suffix(from.suffix());
  }
  if (from.petownerid() != 0) {
    set_petownerid(from.petownerid());
  }
  if (from.guildrank() != 0) {
    set_guildrank(from.guildrank());
  }
  if (from.unknown0194() != 0) {
    set_unknown0194(from.unknown0194());
  }
  if (from.has_equipment()) {
    mutable_equipment()->::eqproto::TextureProfile::MergeFrom(from.equipment());
  }
  if (from.runspeed() != 0) {
    set_runspeed(from.runspeed());
  }
  if (from.afk() != 0) {
    set_afk(from.afk());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.title().size() > 0) {
    set_title(from.title());
  }
  if (from.unknown0274() != 0) {
    set_unknown0274(from.unknown0274());
  }
  if (from.set_to_0xff() != 0) {
    set_set_to_0xff(from.set_to_0xff());
  }
  if (from.helm() != 0) {
    set_helm(from.helm());
  }
  if (from.race() != 0) {
    set_race(from.race());
  }
  if (from.unknown0288() != 0) {
    set_unknown0288(from.unknown0288());
  }
  if (from.lastname().size() > 0) {
    set_lastname(from.lastname());
  }
  if (from.walkspeed() != 0) {
    set_walkspeed(from.walkspeed());
  }
  if (from.unknown0328() != 0) {
    set_unknown0328(from.unknown0328());
  }
  if (from.is_pet() != 0) {
    set_is_pet(from.is_pet());
  }
  if (from.light() != 0) {
    set_light(from.light());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.eyecolor2() != 0) {
    set_eyecolor2(from.eyecolor2());
  }
  if (from.flymode() != 0) {
    set_flymode(from.flymode());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
  if (from.bodytype() != 0) {
    set_bodytype(from.bodytype());
  }
  if (from.unknown0336() != 0) {
    set_unknown0336(from.unknown0336());
  }
  if (from.equip_chest2() != 0) {
    set_equip_chest2(from.equip_chest2());
  }
  if (from.mount_color() != 0) {
    set_mount_color(from.mount_color());
  }
  if (from.spawnid() != 0) {
    set_spawnid(from.spawnid());
  }
  if (from.unknown0344() != 0) {
    set_unknown0344(from.unknown0344());
  }
  if (from.ismercenary() != 0) {
    set_ismercenary(from.ismercenary());
  }
  if (from.has_equipment_tint()) {
    mutable_equipment_tint()->::eqproto::TintProfile::MergeFrom(from.equipment_tint());
  }
  if (from.lfg() != 0) {
    set_lfg(from.lfg());
  }
  if (from.destructibleobject() != 0) {
    set_destructibleobject(from.destructibleobject());
  }
  if (from.destructiblemodel().size() > 0) {
    set_destructiblemodel(from.destructiblemodel());
  }
  if (from.destructiblename2().size() > 0) {
    set_destructiblename2(from.destructiblename2());
  }
  if (from.destructiblestring().size() > 0) {
    set_destructiblestring(from.destructiblestring());
  }
  if (from.destructibleappearance() != 0) {
    set_destructibleappearance(from.destructibleappearance());
  }
  if (from.destructibleunk1() != 0) {
    set_destructibleunk1(from.destructibleunk1());
  }
  if (from.destructibleid1() != 0) {
    set_destructibleid1(from.destructibleid1());
  }
  if (from.destructibleid2() != 0) {
    set_destructibleid2(from.destructibleid2());
  }
  if (from.destructibleid3() != 0) {
    set_destructibleid3(from.destructibleid3());
  }
  if (from.destructibleid4() != 0) {
    set_destructibleid4(from.destructibleid4());
  }
  if (from.destructibleunk2() != 0) {
    set_destructibleunk2(from.destructibleunk2());
  }
  if (from.destructibleunk3() != 0) {
    set_destructibleunk3(from.destructibleunk3());
  }
  if (from.destructibleunk4() != 0) {
    set_destructibleunk4(from.destructibleunk4());
  }
  if (from.destructibleunk5() != 0) {
    set_destructibleunk5(from.destructibleunk5());
  }
  if (from.destructibleunk6() != 0) {
    set_destructibleunk6(from.destructibleunk6());
  }
  if (from.destructibleunk7() != 0) {
    set_destructibleunk7(from.destructibleunk7());
  }
  if (from.destructibleunk8() != 0) {
    set_destructibleunk8(from.destructibleunk8());
  }
  if (from.destructibleunk9() != 0) {
    set_destructibleunk9(from.destructibleunk9());
  }
  if (from.targetable_with_hotkey() != 0) {
    set_targetable_with_hotkey(from.targetable_with_hotkey());
  }
  if (from.show_name() != 0) {
    set_show_name(from.show_name());
  }
}

void SpawnEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.SpawnEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnEvent::CopyFrom(const SpawnEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.SpawnEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SpawnEvent::IsInitialized() const {

  return true;
}

void SpawnEvent::Swap(SpawnEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SpawnEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void SpawnEvent::UnsafeArenaSwap(SpawnEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SpawnEvent::InternalSwap(SpawnEvent* other) {
  std::swap(unknown0000_, other->unknown0000_);
  std::swap(gm_, other->gm_);
  std::swap(unknown0003_, other->unknown0003_);
  std::swap(aaitle_, other->aaitle_);
  std::swap(unknown0004_, other->unknown0004_);
  std::swap(anon_, other->anon_);
  std::swap(face_, other->face_);
  name_.Swap(&other->name_);
  std::swap(deity_, other->deity_);
  std::swap(unknown0073_, other->unknown0073_);
  std::swap(size_, other->size_);
  std::swap(unknown0079_, other->unknown0079_);
  std::swap(npc_, other->npc_);
  std::swap(invis_, other->invis_);
  std::swap(haircolor_, other->haircolor_);
  std::swap(curhp_, other->curhp_);
  std::swap(max_hp_, other->max_hp_);
  std::swap(findable_, other->findable_);
  std::swap(unknown0089_, other->unknown0089_);
  std::swap(deltaheading_, other->deltaheading_);
  std::swap(x_, other->x_);
  std::swap(padding0054_, other->padding0054_);
  std::swap(y_, other->y_);
  std::swap(animation_, other->animation_);
  std::swap(padding0058_, other->padding0058_);
  std::swap(z_, other->z_);
  std::swap(deltay_, other->deltay_);
  std::swap(deltax_, other->deltax_);
  std::swap(heading_, other->heading_);
  std::swap(padding0066_, other->padding0066_);
  std::swap(deltaz_, other->deltaz_);
  std::swap(padding0070_, other->padding0070_);
  std::swap(eyecolor1_, other->eyecolor1_);
  std::swap(unknown0115_, other->unknown0115_);
  std::swap(standstate_, other->standstate_);
  std::swap(drakkin_heritage_, other->drakkin_heritage_);
  std::swap(drakkin_tattoo_, other->drakkin_tattoo_);
  std::swap(drakkin_details_, other->drakkin_details_);
  std::swap(showhelm_, other->showhelm_);
  std::swap(unknown0140_, other->unknown0140_);
  std::swap(is_npc_, other->is_npc_);
  std::swap(hairstyle_, other->hairstyle_);
  std::swap(beard_, other->beard_);
  std::swap(unknown0147_, other->unknown0147_);
  std::swap(level_, other->level_);
  std::swap(playerstate_, other->playerstate_);
  std::swap(beardcolor_, other->beardcolor_);
  suffix_.Swap(&other->suffix_);
  std::swap(petownerid_, other->petownerid_);
  std::swap(guildrank_, other->guildrank_);
  std::swap(unknown0194_, other->unknown0194_);
  std::swap(equipment_, other->equipment_);
  std::swap(runspeed_, other->runspeed_);
  std::swap(afk_, other->afk_);
  std::swap(guildid_, other->guildid_);
  title_.Swap(&other->title_);
  std::swap(unknown0274_, other->unknown0274_);
  std::swap(set_to_0xff_, other->set_to_0xff_);
  std::swap(helm_, other->helm_);
  std::swap(race_, other->race_);
  std::swap(unknown0288_, other->unknown0288_);
  lastname_.Swap(&other->lastname_);
  std::swap(walkspeed_, other->walkspeed_);
  std::swap(unknown0328_, other->unknown0328_);
  std::swap(is_pet_, other->is_pet_);
  std::swap(light_, other->light_);
  std::swap(class__, other->class__);
  std::swap(eyecolor2_, other->eyecolor2_);
  std::swap(flymode_, other->flymode_);
  std::swap(gender_, other->gender_);
  std::swap(bodytype_, other->bodytype_);
  std::swap(unknown0336_, other->unknown0336_);
  std::swap(equip_chest2_, other->equip_chest2_);
  std::swap(mount_color_, other->mount_color_);
  std::swap(spawnid_, other->spawnid_);
  std::swap(unknown0344_, other->unknown0344_);
  std::swap(ismercenary_, other->ismercenary_);
  std::swap(equipment_tint_, other->equipment_tint_);
  std::swap(lfg_, other->lfg_);
  std::swap(destructibleobject_, other->destructibleobject_);
  destructiblemodel_.Swap(&other->destructiblemodel_);
  destructiblename2_.Swap(&other->destructiblename2_);
  destructiblestring_.Swap(&other->destructiblestring_);
  std::swap(destructibleappearance_, other->destructibleappearance_);
  std::swap(destructibleunk1_, other->destructibleunk1_);
  std::swap(destructibleid1_, other->destructibleid1_);
  std::swap(destructibleid2_, other->destructibleid2_);
  std::swap(destructibleid3_, other->destructibleid3_);
  std::swap(destructibleid4_, other->destructibleid4_);
  std::swap(destructibleunk2_, other->destructibleunk2_);
  std::swap(destructibleunk3_, other->destructibleunk3_);
  std::swap(destructibleunk4_, other->destructibleunk4_);
  std::swap(destructibleunk5_, other->destructibleunk5_);
  std::swap(destructibleunk6_, other->destructibleunk6_);
  std::swap(destructibleunk7_, other->destructibleunk7_);
  std::swap(destructibleunk8_, other->destructibleunk8_);
  std::swap(destructibleunk9_, other->destructibleunk9_);
  std::swap(targetable_with_hotkey_, other->targetable_with_hotkey_);
  std::swap(show_name_, other->show_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpawnEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpawnEvent_descriptor_;
  metadata.reflection = SpawnEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpawnEvent

// optional uint32 unknown0000 = 1;
void SpawnEvent::clear_unknown0000() {
  unknown0000_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0000() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0000)
  return unknown0000_;
}
void SpawnEvent::set_unknown0000(::google::protobuf::uint32 value) {
  
  unknown0000_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0000)
}

// optional uint32 gm = 2;
void SpawnEvent::clear_gm() {
  gm_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::gm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.gm)
  return gm_;
}
void SpawnEvent::set_gm(::google::protobuf::uint32 value) {
  
  gm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.gm)
}

// optional uint32 unknown0003 = 3;
void SpawnEvent::clear_unknown0003() {
  unknown0003_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0003() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0003)
  return unknown0003_;
}
void SpawnEvent::set_unknown0003(::google::protobuf::uint32 value) {
  
  unknown0003_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0003)
}

// optional uint32 aaitle = 4;
void SpawnEvent::clear_aaitle() {
  aaitle_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::aaitle() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.aaitle)
  return aaitle_;
}
void SpawnEvent::set_aaitle(::google::protobuf::uint32 value) {
  
  aaitle_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.aaitle)
}

// optional uint32 unknown0004 = 5;
void SpawnEvent::clear_unknown0004() {
  unknown0004_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0004() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0004)
  return unknown0004_;
}
void SpawnEvent::set_unknown0004(::google::protobuf::uint32 value) {
  
  unknown0004_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0004)
}

// optional uint32 anon = 6;
void SpawnEvent::clear_anon() {
  anon_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::anon() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.anon)
  return anon_;
}
void SpawnEvent::set_anon(::google::protobuf::uint32 value) {
  
  anon_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.anon)
}

// optional uint32 face = 7;
void SpawnEvent::clear_face() {
  face_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::face() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.face)
  return face_;
}
void SpawnEvent::set_face(::google::protobuf::uint32 value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.face)
}

// optional string name = 8;
void SpawnEvent::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::name() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.name)
}
void SpawnEvent::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.name)
}
void SpawnEvent::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.name)
}
::std::string* SpawnEvent::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_name() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.name)
}
void SpawnEvent::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.name)
}

// optional uint32 deity = 9;
void SpawnEvent::clear_deity() {
  deity_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::deity() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deity)
  return deity_;
}
void SpawnEvent::set_deity(::google::protobuf::uint32 value) {
  
  deity_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deity)
}

// optional uint32 unknown0073 = 10;
void SpawnEvent::clear_unknown0073() {
  unknown0073_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0073() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0073)
  return unknown0073_;
}
void SpawnEvent::set_unknown0073(::google::protobuf::uint32 value) {
  
  unknown0073_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0073)
}

// optional float size = 11;
void SpawnEvent::clear_size() {
  size_ = 0;
}
float SpawnEvent::size() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.size)
  return size_;
}
void SpawnEvent::set_size(float value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.size)
}

// optional uint32 unknown0079 = 12;
void SpawnEvent::clear_unknown0079() {
  unknown0079_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0079() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0079)
  return unknown0079_;
}
void SpawnEvent::set_unknown0079(::google::protobuf::uint32 value) {
  
  unknown0079_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0079)
}

// optional uint32 NPC = 13;
void SpawnEvent::clear_npc() {
  npc_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::npc() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.NPC)
  return npc_;
}
void SpawnEvent::set_npc(::google::protobuf::uint32 value) {
  
  npc_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.NPC)
}

// optional uint32 invis = 14;
void SpawnEvent::clear_invis() {
  invis_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::invis() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.invis)
  return invis_;
}
void SpawnEvent::set_invis(::google::protobuf::uint32 value) {
  
  invis_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.invis)
}

// optional uint32 haircolor = 15;
void SpawnEvent::clear_haircolor() {
  haircolor_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::haircolor() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.haircolor)
  return haircolor_;
}
void SpawnEvent::set_haircolor(::google::protobuf::uint32 value) {
  
  haircolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.haircolor)
}

// optional uint32 curHp = 16;
void SpawnEvent::clear_curhp() {
  curhp_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::curhp() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.curHp)
  return curhp_;
}
void SpawnEvent::set_curhp(::google::protobuf::uint32 value) {
  
  curhp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.curHp)
}

// optional uint32 max_hp = 17;
void SpawnEvent::clear_max_hp() {
  max_hp_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::max_hp() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.max_hp)
  return max_hp_;
}
void SpawnEvent::set_max_hp(::google::protobuf::uint32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.max_hp)
}

// optional uint32 findable = 18;
void SpawnEvent::clear_findable() {
  findable_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::findable() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.findable)
  return findable_;
}
void SpawnEvent::set_findable(::google::protobuf::uint32 value) {
  
  findable_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.findable)
}

// optional uint32 unknown0089 = 19;
void SpawnEvent::clear_unknown0089() {
  unknown0089_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0089() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0089)
  return unknown0089_;
}
void SpawnEvent::set_unknown0089(::google::protobuf::uint32 value) {
  
  unknown0089_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0089)
}

// optional int32 deltaHeading = 20;
void SpawnEvent::clear_deltaheading() {
  deltaheading_ = 0;
}
::google::protobuf::int32 SpawnEvent::deltaheading() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaHeading)
  return deltaheading_;
}
void SpawnEvent::set_deltaheading(::google::protobuf::int32 value) {
  
  deltaheading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaHeading)
}

// optional int32 x = 21;
void SpawnEvent::clear_x() {
  x_ = 0;
}
::google::protobuf::int32 SpawnEvent::x() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.x)
  return x_;
}
void SpawnEvent::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.x)
}

// optional int32 padding0054 = 22;
void SpawnEvent::clear_padding0054() {
  padding0054_ = 0;
}
::google::protobuf::int32 SpawnEvent::padding0054() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0054)
  return padding0054_;
}
void SpawnEvent::set_padding0054(::google::protobuf::int32 value) {
  
  padding0054_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0054)
}

// optional int32 y = 23;
void SpawnEvent::clear_y() {
  y_ = 0;
}
::google::protobuf::int32 SpawnEvent::y() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.y)
  return y_;
}
void SpawnEvent::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.y)
}

// optional int32 animation = 24;
void SpawnEvent::clear_animation() {
  animation_ = 0;
}
::google::protobuf::int32 SpawnEvent::animation() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.animation)
  return animation_;
}
void SpawnEvent::set_animation(::google::protobuf::int32 value) {
  
  animation_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.animation)
}

// optional int32 padding0058 = 25;
void SpawnEvent::clear_padding0058() {
  padding0058_ = 0;
}
::google::protobuf::int32 SpawnEvent::padding0058() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0058)
  return padding0058_;
}
void SpawnEvent::set_padding0058(::google::protobuf::int32 value) {
  
  padding0058_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0058)
}

// optional int32 z = 26;
void SpawnEvent::clear_z() {
  z_ = 0;
}
::google::protobuf::int32 SpawnEvent::z() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.z)
  return z_;
}
void SpawnEvent::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.z)
}

// optional int32 deltaY = 27;
void SpawnEvent::clear_deltay() {
  deltay_ = 0;
}
::google::protobuf::int32 SpawnEvent::deltay() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaY)
  return deltay_;
}
void SpawnEvent::set_deltay(::google::protobuf::int32 value) {
  
  deltay_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaY)
}

// optional int32 deltaX = 28;
void SpawnEvent::clear_deltax() {
  deltax_ = 0;
}
::google::protobuf::int32 SpawnEvent::deltax() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaX)
  return deltax_;
}
void SpawnEvent::set_deltax(::google::protobuf::int32 value) {
  
  deltax_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaX)
}

// optional uint32 heading = 29;
void SpawnEvent::clear_heading() {
  heading_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::heading() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.heading)
  return heading_;
}
void SpawnEvent::set_heading(::google::protobuf::uint32 value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.heading)
}

// optional int32 padding0066 = 30;
void SpawnEvent::clear_padding0066() {
  padding0066_ = 0;
}
::google::protobuf::int32 SpawnEvent::padding0066() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0066)
  return padding0066_;
}
void SpawnEvent::set_padding0066(::google::protobuf::int32 value) {
  
  padding0066_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0066)
}

// optional int32 deltaZ = 31;
void SpawnEvent::clear_deltaz() {
  deltaz_ = 0;
}
::google::protobuf::int32 SpawnEvent::deltaz() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.deltaZ)
  return deltaz_;
}
void SpawnEvent::set_deltaz(::google::protobuf::int32 value) {
  
  deltaz_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.deltaZ)
}

// optional int32 padding0070 = 32;
void SpawnEvent::clear_padding0070() {
  padding0070_ = 0;
}
::google::protobuf::int32 SpawnEvent::padding0070() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.padding0070)
  return padding0070_;
}
void SpawnEvent::set_padding0070(::google::protobuf::int32 value) {
  
  padding0070_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.padding0070)
}

// optional uint32 eyecolor1 = 33;
void SpawnEvent::clear_eyecolor1() {
  eyecolor1_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::eyecolor1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.eyecolor1)
  return eyecolor1_;
}
void SpawnEvent::set_eyecolor1(::google::protobuf::uint32 value) {
  
  eyecolor1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.eyecolor1)
}

// optional uint32 unknown0115 = 34;
void SpawnEvent::clear_unknown0115() {
  unknown0115_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0115() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0115)
  return unknown0115_;
}
void SpawnEvent::set_unknown0115(::google::protobuf::uint32 value) {
  
  unknown0115_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0115)
}

// optional uint32 StandState = 35;
void SpawnEvent::clear_standstate() {
  standstate_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::standstate() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.StandState)
  return standstate_;
}
void SpawnEvent::set_standstate(::google::protobuf::uint32 value) {
  
  standstate_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.StandState)
}

// optional uint32 drakkin_heritage = 36;
void SpawnEvent::clear_drakkin_heritage() {
  drakkin_heritage_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::drakkin_heritage() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_heritage)
  return drakkin_heritage_;
}
void SpawnEvent::set_drakkin_heritage(::google::protobuf::uint32 value) {
  
  drakkin_heritage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_heritage)
}

// optional uint32 drakkin_tattoo = 37;
void SpawnEvent::clear_drakkin_tattoo() {
  drakkin_tattoo_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::drakkin_tattoo() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_tattoo)
  return drakkin_tattoo_;
}
void SpawnEvent::set_drakkin_tattoo(::google::protobuf::uint32 value) {
  
  drakkin_tattoo_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_tattoo)
}

// optional uint32 drakkin_details = 38;
void SpawnEvent::clear_drakkin_details() {
  drakkin_details_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::drakkin_details() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.drakkin_details)
  return drakkin_details_;
}
void SpawnEvent::set_drakkin_details(::google::protobuf::uint32 value) {
  
  drakkin_details_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.drakkin_details)
}

// optional uint32 showhelm = 39;
void SpawnEvent::clear_showhelm() {
  showhelm_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::showhelm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.showhelm)
  return showhelm_;
}
void SpawnEvent::set_showhelm(::google::protobuf::uint32 value) {
  
  showhelm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.showhelm)
}

// optional uint32 unknown0140 = 40;
void SpawnEvent::clear_unknown0140() {
  unknown0140_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0140() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0140)
  return unknown0140_;
}
void SpawnEvent::set_unknown0140(::google::protobuf::uint32 value) {
  
  unknown0140_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0140)
}

// optional uint32 is_npc = 41;
void SpawnEvent::clear_is_npc() {
  is_npc_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::is_npc() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.is_npc)
  return is_npc_;
}
void SpawnEvent::set_is_npc(::google::protobuf::uint32 value) {
  
  is_npc_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.is_npc)
}

// optional uint32 hairstyle = 42;
void SpawnEvent::clear_hairstyle() {
  hairstyle_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::hairstyle() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.hairstyle)
  return hairstyle_;
}
void SpawnEvent::set_hairstyle(::google::protobuf::uint32 value) {
  
  hairstyle_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.hairstyle)
}

// optional uint32 beard = 43;
void SpawnEvent::clear_beard() {
  beard_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::beard() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.beard)
  return beard_;
}
void SpawnEvent::set_beard(::google::protobuf::uint32 value) {
  
  beard_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.beard)
}

// optional uint32 unknown0147 = 44;
void SpawnEvent::clear_unknown0147() {
  unknown0147_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0147() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0147)
  return unknown0147_;
}
void SpawnEvent::set_unknown0147(::google::protobuf::uint32 value) {
  
  unknown0147_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0147)
}

// optional uint32 level = 45;
void SpawnEvent::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::level() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.level)
  return level_;
}
void SpawnEvent::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.level)
}

// optional uint32 PlayerState = 46;
void SpawnEvent::clear_playerstate() {
  playerstate_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::playerstate() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.PlayerState)
  return playerstate_;
}
void SpawnEvent::set_playerstate(::google::protobuf::uint32 value) {
  
  playerstate_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.PlayerState)
}

// optional uint32 beardcolor = 47;
void SpawnEvent::clear_beardcolor() {
  beardcolor_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::beardcolor() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.beardcolor)
  return beardcolor_;
}
void SpawnEvent::set_beardcolor(::google::protobuf::uint32 value) {
  
  beardcolor_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.beardcolor)
}

// optional string suffix = 48;
void SpawnEvent::clear_suffix() {
  suffix_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::suffix() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.suffix)
  return suffix_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_suffix(const ::std::string& value) {
  
  suffix_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.suffix)
}
void SpawnEvent::set_suffix(const char* value) {
  
  suffix_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.suffix)
}
void SpawnEvent::set_suffix(const char* value,
    size_t size) {
  
  suffix_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.suffix)
}
::std::string* SpawnEvent::mutable_suffix() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.suffix)
  return suffix_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_suffix() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.suffix)
  
  return suffix_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_suffix() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.suffix)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return suffix_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_suffix(::std::string* suffix) {
  if (suffix != NULL) {
    
  } else {
    
  }
  suffix_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), suffix,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.suffix)
}
void SpawnEvent::unsafe_arena_set_allocated_suffix(
    ::std::string* suffix) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (suffix != NULL) {
    
  } else {
    
  }
  suffix_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      suffix, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.suffix)
}

// optional uint32 petOwnerId = 49;
void SpawnEvent::clear_petownerid() {
  petownerid_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::petownerid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.petOwnerId)
  return petownerid_;
}
void SpawnEvent::set_petownerid(::google::protobuf::uint32 value) {
  
  petownerid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.petOwnerId)
}

// optional uint32 guildrank = 50;
void SpawnEvent::clear_guildrank() {
  guildrank_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::guildrank() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.guildrank)
  return guildrank_;
}
void SpawnEvent::set_guildrank(::google::protobuf::uint32 value) {
  
  guildrank_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.guildrank)
}

// optional uint32 unknown0194 = 51;
void SpawnEvent::clear_unknown0194() {
  unknown0194_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0194() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0194)
  return unknown0194_;
}
void SpawnEvent::set_unknown0194(::google::protobuf::uint32 value) {
  
  unknown0194_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0194)
}

// optional .eqproto.TextureProfile equipment = 52;
bool SpawnEvent::has_equipment() const {
  return this != internal_default_instance() && equipment_ != NULL;
}
void SpawnEvent::clear_equipment() {
  if (GetArenaNoVirtual() == NULL && equipment_ != NULL) delete equipment_;
  equipment_ = NULL;
}
const ::eqproto::TextureProfile& SpawnEvent::equipment() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equipment)
  return equipment_ != NULL ? *equipment_
                         : *::eqproto::TextureProfile::internal_default_instance();
}
::eqproto::TextureProfile* SpawnEvent::mutable_equipment() {
  
  if (equipment_ == NULL) {
    _slow_mutable_equipment();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.equipment)
  return equipment_;
}
::eqproto::TextureProfile* SpawnEvent::release_equipment() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.equipment)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_equipment();
  } else {
    ::eqproto::TextureProfile* temp = equipment_;
    equipment_ = NULL;
    return temp;
  }
}
 void SpawnEvent::set_allocated_equipment(::eqproto::TextureProfile* equipment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete equipment_;
  }
  if (equipment != NULL) {
    _slow_set_allocated_equipment(message_arena, &equipment);
  }
  equipment_ = equipment;
  if (equipment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.equipment)
}

// optional float runspeed = 53;
void SpawnEvent::clear_runspeed() {
  runspeed_ = 0;
}
float SpawnEvent::runspeed() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.runspeed)
  return runspeed_;
}
void SpawnEvent::set_runspeed(float value) {
  
  runspeed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.runspeed)
}

// optional uint32 afk = 54;
void SpawnEvent::clear_afk() {
  afk_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::afk() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.afk)
  return afk_;
}
void SpawnEvent::set_afk(::google::protobuf::uint32 value) {
  
  afk_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.afk)
}

// optional uint32 guildID = 55;
void SpawnEvent::clear_guildid() {
  guildid_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::guildid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.guildID)
  return guildid_;
}
void SpawnEvent::set_guildid(::google::protobuf::uint32 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.guildID)
}

// optional string title = 56;
void SpawnEvent::clear_title() {
  title_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::title() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.title)
  return title_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_title(const ::std::string& value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.title)
}
void SpawnEvent::set_title(const char* value) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.title)
}
void SpawnEvent::set_title(const char* value,
    size_t size) {
  
  title_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.title)
}
::std::string* SpawnEvent::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.title)
  return title_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_title() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.title)
  
  return title_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_title() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.title)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return title_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.title)
}
void SpawnEvent::unsafe_arena_set_allocated_title(
    ::std::string* title) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (title != NULL) {
    
  } else {
    
  }
  title_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      title, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.title)
}

// optional uint32 unknown0274 = 57;
void SpawnEvent::clear_unknown0274() {
  unknown0274_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0274() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0274)
  return unknown0274_;
}
void SpawnEvent::set_unknown0274(::google::protobuf::uint32 value) {
  
  unknown0274_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0274)
}

// optional uint32 set_to_0xFF = 58;
void SpawnEvent::clear_set_to_0xff() {
  set_to_0xff_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::set_to_0xff() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.set_to_0xFF)
  return set_to_0xff_;
}
void SpawnEvent::set_set_to_0xff(::google::protobuf::uint32 value) {
  
  set_to_0xff_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.set_to_0xFF)
}

// optional uint32 helm = 59;
void SpawnEvent::clear_helm() {
  helm_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::helm() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.helm)
  return helm_;
}
void SpawnEvent::set_helm(::google::protobuf::uint32 value) {
  
  helm_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.helm)
}

// optional uint32 race = 60;
void SpawnEvent::clear_race() {
  race_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::race() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.race)
  return race_;
}
void SpawnEvent::set_race(::google::protobuf::uint32 value) {
  
  race_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.race)
}

// optional uint32 unknown0288 = 61;
void SpawnEvent::clear_unknown0288() {
  unknown0288_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0288() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0288)
  return unknown0288_;
}
void SpawnEvent::set_unknown0288(::google::protobuf::uint32 value) {
  
  unknown0288_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0288)
}

// optional string lastName = 62;
void SpawnEvent::clear_lastname() {
  lastname_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::lastname() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.lastName)
  return lastname_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_lastname(const ::std::string& value) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.lastName)
}
void SpawnEvent::set_lastname(const char* value) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.lastName)
}
void SpawnEvent::set_lastname(const char* value,
    size_t size) {
  
  lastname_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.lastName)
}
::std::string* SpawnEvent::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.lastName)
  return lastname_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_lastname() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.lastName)
  
  return lastname_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_lastname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.lastName)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return lastname_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.lastName)
}
void SpawnEvent::unsafe_arena_set_allocated_lastname(
    ::std::string* lastname) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      lastname, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.lastName)
}

// optional float walkspeed = 63;
void SpawnEvent::clear_walkspeed() {
  walkspeed_ = 0;
}
float SpawnEvent::walkspeed() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.walkspeed)
  return walkspeed_;
}
void SpawnEvent::set_walkspeed(float value) {
  
  walkspeed_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.walkspeed)
}

// optional uint32 unknown0328 = 64;
void SpawnEvent::clear_unknown0328() {
  unknown0328_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0328() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0328)
  return unknown0328_;
}
void SpawnEvent::set_unknown0328(::google::protobuf::uint32 value) {
  
  unknown0328_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0328)
}

// optional uint32 is_pet = 65;
void SpawnEvent::clear_is_pet() {
  is_pet_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::is_pet() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.is_pet)
  return is_pet_;
}
void SpawnEvent::set_is_pet(::google::protobuf::uint32 value) {
  
  is_pet_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.is_pet)
}

// optional uint32 light = 66;
void SpawnEvent::clear_light() {
  light_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::light() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.light)
  return light_;
}
void SpawnEvent::set_light(::google::protobuf::uint32 value) {
  
  light_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.light)
}

// optional uint32 class_ = 67;
void SpawnEvent::clear_class_() {
  class__ = 0u;
}
::google::protobuf::uint32 SpawnEvent::class_() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.class_)
  return class__;
}
void SpawnEvent::set_class_(::google::protobuf::uint32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.class_)
}

// optional uint32 eyecolor2 = 68;
void SpawnEvent::clear_eyecolor2() {
  eyecolor2_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::eyecolor2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.eyecolor2)
  return eyecolor2_;
}
void SpawnEvent::set_eyecolor2(::google::protobuf::uint32 value) {
  
  eyecolor2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.eyecolor2)
}

// optional uint32 flymode = 69;
void SpawnEvent::clear_flymode() {
  flymode_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::flymode() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.flymode)
  return flymode_;
}
void SpawnEvent::set_flymode(::google::protobuf::uint32 value) {
  
  flymode_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.flymode)
}

// optional uint32 gender = 70;
void SpawnEvent::clear_gender() {
  gender_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::gender() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.gender)
  return gender_;
}
void SpawnEvent::set_gender(::google::protobuf::uint32 value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.gender)
}

// optional uint32 bodytype = 71;
void SpawnEvent::clear_bodytype() {
  bodytype_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::bodytype() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.bodytype)
  return bodytype_;
}
void SpawnEvent::set_bodytype(::google::protobuf::uint32 value) {
  
  bodytype_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.bodytype)
}

// optional uint32 unknown0336 = 72;
void SpawnEvent::clear_unknown0336() {
  unknown0336_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0336() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0336)
  return unknown0336_;
}
void SpawnEvent::set_unknown0336(::google::protobuf::uint32 value) {
  
  unknown0336_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0336)
}

// optional uint32 equip_chest2 = 73;
void SpawnEvent::clear_equip_chest2() {
  equip_chest2_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::equip_chest2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equip_chest2)
  return equip_chest2_;
}
void SpawnEvent::set_equip_chest2(::google::protobuf::uint32 value) {
  
  equip_chest2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.equip_chest2)
}

// optional uint32 mount_color = 74;
void SpawnEvent::clear_mount_color() {
  mount_color_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::mount_color() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.mount_color)
  return mount_color_;
}
void SpawnEvent::set_mount_color(::google::protobuf::uint32 value) {
  
  mount_color_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.mount_color)
}

// optional uint32 spawnId = 75;
void SpawnEvent::clear_spawnid() {
  spawnid_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::spawnid() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.spawnId)
  return spawnid_;
}
void SpawnEvent::set_spawnid(::google::protobuf::uint32 value) {
  
  spawnid_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.spawnId)
}

// optional uint32 unknown0344 = 76;
void SpawnEvent::clear_unknown0344() {
  unknown0344_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::unknown0344() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.unknown0344)
  return unknown0344_;
}
void SpawnEvent::set_unknown0344(::google::protobuf::uint32 value) {
  
  unknown0344_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.unknown0344)
}

// optional uint32 IsMercenary = 77;
void SpawnEvent::clear_ismercenary() {
  ismercenary_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::ismercenary() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.IsMercenary)
  return ismercenary_;
}
void SpawnEvent::set_ismercenary(::google::protobuf::uint32 value) {
  
  ismercenary_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.IsMercenary)
}

// optional .eqproto.TintProfile equipment_tint = 78;
bool SpawnEvent::has_equipment_tint() const {
  return this != internal_default_instance() && equipment_tint_ != NULL;
}
void SpawnEvent::clear_equipment_tint() {
  if (GetArenaNoVirtual() == NULL && equipment_tint_ != NULL) delete equipment_tint_;
  equipment_tint_ = NULL;
}
const ::eqproto::TintProfile& SpawnEvent::equipment_tint() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.equipment_tint)
  return equipment_tint_ != NULL ? *equipment_tint_
                         : *::eqproto::TintProfile::internal_default_instance();
}
::eqproto::TintProfile* SpawnEvent::mutable_equipment_tint() {
  
  if (equipment_tint_ == NULL) {
    _slow_mutable_equipment_tint();
  }
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.equipment_tint)
  return equipment_tint_;
}
::eqproto::TintProfile* SpawnEvent::release_equipment_tint() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.equipment_tint)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_equipment_tint();
  } else {
    ::eqproto::TintProfile* temp = equipment_tint_;
    equipment_tint_ = NULL;
    return temp;
  }
}
 void SpawnEvent::set_allocated_equipment_tint(::eqproto::TintProfile* equipment_tint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete equipment_tint_;
  }
  if (equipment_tint != NULL) {
    _slow_set_allocated_equipment_tint(message_arena, &equipment_tint);
  }
  equipment_tint_ = equipment_tint;
  if (equipment_tint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.equipment_tint)
}

// optional uint32 lfg = 79;
void SpawnEvent::clear_lfg() {
  lfg_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::lfg() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.lfg)
  return lfg_;
}
void SpawnEvent::set_lfg(::google::protobuf::uint32 value) {
  
  lfg_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.lfg)
}

// optional bool DestructibleObject = 80;
void SpawnEvent::clear_destructibleobject() {
  destructibleobject_ = false;
}
bool SpawnEvent::destructibleobject() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleObject)
  return destructibleobject_;
}
void SpawnEvent::set_destructibleobject(bool value) {
  
  destructibleobject_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleObject)
}

// optional string DestructibleModel = 82;
void SpawnEvent::clear_destructiblemodel() {
  destructiblemodel_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::destructiblemodel() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleModel)
  return destructiblemodel_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_destructiblemodel(const ::std::string& value) {
  
  destructiblemodel_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleModel)
}
void SpawnEvent::set_destructiblemodel(const char* value) {
  
  destructiblemodel_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleModel)
}
void SpawnEvent::set_destructiblemodel(const char* value,
    size_t size) {
  
  destructiblemodel_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleModel)
}
::std::string* SpawnEvent::mutable_destructiblemodel() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleModel)
  return destructiblemodel_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_destructiblemodel() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleModel)
  
  return destructiblemodel_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_destructiblemodel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.DestructibleModel)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return destructiblemodel_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_destructiblemodel(::std::string* destructiblemodel) {
  if (destructiblemodel != NULL) {
    
  } else {
    
  }
  destructiblemodel_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblemodel,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleModel)
}
void SpawnEvent::unsafe_arena_set_allocated_destructiblemodel(
    ::std::string* destructiblemodel) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (destructiblemodel != NULL) {
    
  } else {
    
  }
  destructiblemodel_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      destructiblemodel, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.DestructibleModel)
}

// optional string DestructibleName2 = 83;
void SpawnEvent::clear_destructiblename2() {
  destructiblename2_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::destructiblename2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleName2)
  return destructiblename2_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_destructiblename2(const ::std::string& value) {
  
  destructiblename2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleName2)
}
void SpawnEvent::set_destructiblename2(const char* value) {
  
  destructiblename2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleName2)
}
void SpawnEvent::set_destructiblename2(const char* value,
    size_t size) {
  
  destructiblename2_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleName2)
}
::std::string* SpawnEvent::mutable_destructiblename2() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleName2)
  return destructiblename2_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_destructiblename2() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleName2)
  
  return destructiblename2_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_destructiblename2() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.DestructibleName2)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return destructiblename2_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_destructiblename2(::std::string* destructiblename2) {
  if (destructiblename2 != NULL) {
    
  } else {
    
  }
  destructiblename2_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblename2,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleName2)
}
void SpawnEvent::unsafe_arena_set_allocated_destructiblename2(
    ::std::string* destructiblename2) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (destructiblename2 != NULL) {
    
  } else {
    
  }
  destructiblename2_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      destructiblename2, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.DestructibleName2)
}

// optional string DestructibleString = 84;
void SpawnEvent::clear_destructiblestring() {
  destructiblestring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& SpawnEvent::destructiblestring() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleString)
  return destructiblestring_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpawnEvent::set_destructiblestring(const ::std::string& value) {
  
  destructiblestring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleString)
}
void SpawnEvent::set_destructiblestring(const char* value) {
  
  destructiblestring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:eqproto.SpawnEvent.DestructibleString)
}
void SpawnEvent::set_destructiblestring(const char* value,
    size_t size) {
  
  destructiblestring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:eqproto.SpawnEvent.DestructibleString)
}
::std::string* SpawnEvent::mutable_destructiblestring() {
  
  // @@protoc_insertion_point(field_mutable:eqproto.SpawnEvent.DestructibleString)
  return destructiblestring_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::release_destructiblestring() {
  // @@protoc_insertion_point(field_release:eqproto.SpawnEvent.DestructibleString)
  
  return destructiblestring_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* SpawnEvent::unsafe_arena_release_destructiblestring() {
  // @@protoc_insertion_point(field_unsafe_arena_release:eqproto.SpawnEvent.DestructibleString)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return destructiblestring_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void SpawnEvent::set_allocated_destructiblestring(::std::string* destructiblestring) {
  if (destructiblestring != NULL) {
    
  } else {
    
  }
  destructiblestring_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destructiblestring,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:eqproto.SpawnEvent.DestructibleString)
}
void SpawnEvent::unsafe_arena_set_allocated_destructiblestring(
    ::std::string* destructiblestring) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (destructiblestring != NULL) {
    
  } else {
    
  }
  destructiblestring_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      destructiblestring, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:eqproto.SpawnEvent.DestructibleString)
}

// optional uint32 DestructibleAppearance = 85;
void SpawnEvent::clear_destructibleappearance() {
  destructibleappearance_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleappearance() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleAppearance)
  return destructibleappearance_;
}
void SpawnEvent::set_destructibleappearance(::google::protobuf::uint32 value) {
  
  destructibleappearance_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleAppearance)
}

// optional uint32 DestructibleUnk1 = 86;
void SpawnEvent::clear_destructibleunk1() {
  destructibleunk1_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk1)
  return destructibleunk1_;
}
void SpawnEvent::set_destructibleunk1(::google::protobuf::uint32 value) {
  
  destructibleunk1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk1)
}

// optional uint32 DestructibleID1 = 87;
void SpawnEvent::clear_destructibleid1() {
  destructibleid1_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleid1() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID1)
  return destructibleid1_;
}
void SpawnEvent::set_destructibleid1(::google::protobuf::uint32 value) {
  
  destructibleid1_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID1)
}

// optional uint32 DestructibleID2 = 88;
void SpawnEvent::clear_destructibleid2() {
  destructibleid2_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleid2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID2)
  return destructibleid2_;
}
void SpawnEvent::set_destructibleid2(::google::protobuf::uint32 value) {
  
  destructibleid2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID2)
}

// optional uint32 DestructibleID3 = 89;
void SpawnEvent::clear_destructibleid3() {
  destructibleid3_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleid3() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID3)
  return destructibleid3_;
}
void SpawnEvent::set_destructibleid3(::google::protobuf::uint32 value) {
  
  destructibleid3_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID3)
}

// optional uint32 DestructibleID4 = 90;
void SpawnEvent::clear_destructibleid4() {
  destructibleid4_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleid4() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleID4)
  return destructibleid4_;
}
void SpawnEvent::set_destructibleid4(::google::protobuf::uint32 value) {
  
  destructibleid4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleID4)
}

// optional uint32 DestructibleUnk2 = 91;
void SpawnEvent::clear_destructibleunk2() {
  destructibleunk2_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk2() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk2)
  return destructibleunk2_;
}
void SpawnEvent::set_destructibleunk2(::google::protobuf::uint32 value) {
  
  destructibleunk2_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk2)
}

// optional uint32 DestructibleUnk3 = 92;
void SpawnEvent::clear_destructibleunk3() {
  destructibleunk3_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk3() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk3)
  return destructibleunk3_;
}
void SpawnEvent::set_destructibleunk3(::google::protobuf::uint32 value) {
  
  destructibleunk3_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk3)
}

// optional uint32 DestructibleUnk4 = 93;
void SpawnEvent::clear_destructibleunk4() {
  destructibleunk4_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk4() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk4)
  return destructibleunk4_;
}
void SpawnEvent::set_destructibleunk4(::google::protobuf::uint32 value) {
  
  destructibleunk4_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk4)
}

// optional uint32 DestructibleUnk5 = 94;
void SpawnEvent::clear_destructibleunk5() {
  destructibleunk5_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk5() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk5)
  return destructibleunk5_;
}
void SpawnEvent::set_destructibleunk5(::google::protobuf::uint32 value) {
  
  destructibleunk5_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk5)
}

// optional uint32 DestructibleUnk6 = 95;
void SpawnEvent::clear_destructibleunk6() {
  destructibleunk6_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk6() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk6)
  return destructibleunk6_;
}
void SpawnEvent::set_destructibleunk6(::google::protobuf::uint32 value) {
  
  destructibleunk6_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk6)
}

// optional uint32 DestructibleUnk7 = 96;
void SpawnEvent::clear_destructibleunk7() {
  destructibleunk7_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk7() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk7)
  return destructibleunk7_;
}
void SpawnEvent::set_destructibleunk7(::google::protobuf::uint32 value) {
  
  destructibleunk7_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk7)
}

// optional uint32 DestructibleUnk8 = 97;
void SpawnEvent::clear_destructibleunk8() {
  destructibleunk8_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk8() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk8)
  return destructibleunk8_;
}
void SpawnEvent::set_destructibleunk8(::google::protobuf::uint32 value) {
  
  destructibleunk8_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk8)
}

// optional uint32 DestructibleUnk9 = 98;
void SpawnEvent::clear_destructibleunk9() {
  destructibleunk9_ = 0u;
}
::google::protobuf::uint32 SpawnEvent::destructibleunk9() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.DestructibleUnk9)
  return destructibleunk9_;
}
void SpawnEvent::set_destructibleunk9(::google::protobuf::uint32 value) {
  
  destructibleunk9_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.DestructibleUnk9)
}

// optional bool targetable_with_hotkey = 99;
void SpawnEvent::clear_targetable_with_hotkey() {
  targetable_with_hotkey_ = false;
}
bool SpawnEvent::targetable_with_hotkey() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.targetable_with_hotkey)
  return targetable_with_hotkey_;
}
void SpawnEvent::set_targetable_with_hotkey(bool value) {
  
  targetable_with_hotkey_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.targetable_with_hotkey)
}

// optional bool show_name = 100;
void SpawnEvent::clear_show_name() {
  show_name_ = false;
}
bool SpawnEvent::show_name() const {
  // @@protoc_insertion_point(field_get:eqproto.SpawnEvent.show_name)
  return show_name_;
}
void SpawnEvent::set_show_name(bool value) {
  
  show_name_ = value;
  // @@protoc_insertion_point(field_set:eqproto.SpawnEvent.show_name)
}

inline const SpawnEvent* SpawnEvent::internal_default_instance() {
  return &SpawnEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlternateAdvancementStatsEvent::kExperienceFieldNumber;
const int AlternateAdvancementStatsEvent::kUnspentFieldNumber;
const int AlternateAdvancementStatsEvent::kUnknown006FieldNumber;
const int AlternateAdvancementStatsEvent::kPercentageFieldNumber;
const int AlternateAdvancementStatsEvent::kUnknown009FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.AlternateAdvancementStatsEvent)
}
AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.AlternateAdvancementStatsEvent)
}

void AlternateAdvancementStatsEvent::InitAsDefaultInstance() {
}

AlternateAdvancementStatsEvent::AlternateAdvancementStatsEvent(const AlternateAdvancementStatsEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.AlternateAdvancementStatsEvent)
}

void AlternateAdvancementStatsEvent::SharedCtor() {
  ::memset(&experience_, 0, reinterpret_cast<char*>(&unknown009_) -
    reinterpret_cast<char*>(&experience_) + sizeof(unknown009_));
  _cached_size_ = 0;
}

AlternateAdvancementStatsEvent::~AlternateAdvancementStatsEvent() {
  // @@protoc_insertion_point(destructor:eqproto.AlternateAdvancementStatsEvent)
  SharedDtor();
}

void AlternateAdvancementStatsEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void AlternateAdvancementStatsEvent::ArenaDtor(void* object) {
  AlternateAdvancementStatsEvent* _this = reinterpret_cast< AlternateAdvancementStatsEvent* >(object);
  (void)_this;
}
void AlternateAdvancementStatsEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AlternateAdvancementStatsEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlternateAdvancementStatsEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlternateAdvancementStatsEvent_descriptor_;
}

const AlternateAdvancementStatsEvent& AlternateAdvancementStatsEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AlternateAdvancementStatsEvent> AlternateAdvancementStatsEvent_default_instance_;

AlternateAdvancementStatsEvent* AlternateAdvancementStatsEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AlternateAdvancementStatsEvent>(arena);
}

void AlternateAdvancementStatsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.AlternateAdvancementStatsEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AlternateAdvancementStatsEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AlternateAdvancementStatsEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(experience_, unknown009_);

#undef ZR_HELPER_
#undef ZR_

}

bool AlternateAdvancementStatsEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.AlternateAdvancementStatsEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 experience = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &experience_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unspent;
        break;
      }

      // optional uint32 unspent = 2;
      case 2: {
        if (tag == 16) {
         parse_unspent:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unspent_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_unknown006;
        break;
      }

      // optional uint32 unknown006 = 3;
      case 3: {
        if (tag == 24) {
         parse_unknown006:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown006_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_percentage;
        break;
      }

      // optional uint32 percentage = 4;
      case 4: {
        if (tag == 32) {
         parse_percentage:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &percentage_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_unknown009;
        break;
      }

      // optional uint32 unknown009 = 5;
      case 5: {
        if (tag == 40) {
         parse_unknown009:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unknown009_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.AlternateAdvancementStatsEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.AlternateAdvancementStatsEvent)
  return false;
#undef DO_
}

void AlternateAdvancementStatsEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.AlternateAdvancementStatsEvent)
  // optional uint32 experience = 1;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->experience(), output);
  }

  // optional uint32 unspent = 2;
  if (this->unspent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unspent(), output);
  }

  // optional uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unknown006(), output);
  }

  // optional uint32 percentage = 4;
  if (this->percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->percentage(), output);
  }

  // optional uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->unknown009(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.AlternateAdvancementStatsEvent)
}

::google::protobuf::uint8* AlternateAdvancementStatsEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.AlternateAdvancementStatsEvent)
  // optional uint32 experience = 1;
  if (this->experience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->experience(), target);
  }

  // optional uint32 unspent = 2;
  if (this->unspent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unspent(), target);
  }

  // optional uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unknown006(), target);
  }

  // optional uint32 percentage = 4;
  if (this->percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->percentage(), target);
  }

  // optional uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->unknown009(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.AlternateAdvancementStatsEvent)
  return target;
}

size_t AlternateAdvancementStatsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.AlternateAdvancementStatsEvent)
  size_t total_size = 0;

  // optional uint32 experience = 1;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->experience());
  }

  // optional uint32 unspent = 2;
  if (this->unspent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unspent());
  }

  // optional uint32 unknown006 = 3;
  if (this->unknown006() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown006());
  }

  // optional uint32 percentage = 4;
  if (this->percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->percentage());
  }

  // optional uint32 unknown009 = 5;
  if (this->unknown009() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unknown009());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlternateAdvancementStatsEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.AlternateAdvancementStatsEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AlternateAdvancementStatsEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlternateAdvancementStatsEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.AlternateAdvancementStatsEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.AlternateAdvancementStatsEvent)
    UnsafeMergeFrom(*source);
  }
}

void AlternateAdvancementStatsEvent::MergeFrom(const AlternateAdvancementStatsEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.AlternateAdvancementStatsEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AlternateAdvancementStatsEvent::UnsafeMergeFrom(const AlternateAdvancementStatsEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.unspent() != 0) {
    set_unspent(from.unspent());
  }
  if (from.unknown006() != 0) {
    set_unknown006(from.unknown006());
  }
  if (from.percentage() != 0) {
    set_percentage(from.percentage());
  }
  if (from.unknown009() != 0) {
    set_unknown009(from.unknown009());
  }
}

void AlternateAdvancementStatsEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.AlternateAdvancementStatsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlternateAdvancementStatsEvent::CopyFrom(const AlternateAdvancementStatsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.AlternateAdvancementStatsEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AlternateAdvancementStatsEvent::IsInitialized() const {

  return true;
}

void AlternateAdvancementStatsEvent::Swap(AlternateAdvancementStatsEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AlternateAdvancementStatsEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void AlternateAdvancementStatsEvent::UnsafeArenaSwap(AlternateAdvancementStatsEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AlternateAdvancementStatsEvent::InternalSwap(AlternateAdvancementStatsEvent* other) {
  std::swap(experience_, other->experience_);
  std::swap(unspent_, other->unspent_);
  std::swap(unknown006_, other->unknown006_);
  std::swap(percentage_, other->percentage_);
  std::swap(unknown009_, other->unknown009_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlternateAdvancementStatsEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AlternateAdvancementStatsEvent_descriptor_;
  metadata.reflection = AlternateAdvancementStatsEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlternateAdvancementStatsEvent

// optional uint32 experience = 1;
void AlternateAdvancementStatsEvent::clear_experience() {
  experience_ = 0u;
}
::google::protobuf::uint32 AlternateAdvancementStatsEvent::experience() const {
  // @@protoc_insertion_point(field_get:eqproto.AlternateAdvancementStatsEvent.experience)
  return experience_;
}
void AlternateAdvancementStatsEvent::set_experience(::google::protobuf::uint32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AlternateAdvancementStatsEvent.experience)
}

// optional uint32 unspent = 2;
void AlternateAdvancementStatsEvent::clear_unspent() {
  unspent_ = 0u;
}
::google::protobuf::uint32 AlternateAdvancementStatsEvent::unspent() const {
  // @@protoc_insertion_point(field_get:eqproto.AlternateAdvancementStatsEvent.unspent)
  return unspent_;
}
void AlternateAdvancementStatsEvent::set_unspent(::google::protobuf::uint32 value) {
  
  unspent_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AlternateAdvancementStatsEvent.unspent)
}

// optional uint32 unknown006 = 3;
void AlternateAdvancementStatsEvent::clear_unknown006() {
  unknown006_ = 0u;
}
::google::protobuf::uint32 AlternateAdvancementStatsEvent::unknown006() const {
  // @@protoc_insertion_point(field_get:eqproto.AlternateAdvancementStatsEvent.unknown006)
  return unknown006_;
}
void AlternateAdvancementStatsEvent::set_unknown006(::google::protobuf::uint32 value) {
  
  unknown006_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AlternateAdvancementStatsEvent.unknown006)
}

// optional uint32 percentage = 4;
void AlternateAdvancementStatsEvent::clear_percentage() {
  percentage_ = 0u;
}
::google::protobuf::uint32 AlternateAdvancementStatsEvent::percentage() const {
  // @@protoc_insertion_point(field_get:eqproto.AlternateAdvancementStatsEvent.percentage)
  return percentage_;
}
void AlternateAdvancementStatsEvent::set_percentage(::google::protobuf::uint32 value) {
  
  percentage_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AlternateAdvancementStatsEvent.percentage)
}

// optional uint32 unknown009 = 5;
void AlternateAdvancementStatsEvent::clear_unknown009() {
  unknown009_ = 0u;
}
::google::protobuf::uint32 AlternateAdvancementStatsEvent::unknown009() const {
  // @@protoc_insertion_point(field_get:eqproto.AlternateAdvancementStatsEvent.unknown009)
  return unknown009_;
}
void AlternateAdvancementStatsEvent::set_unknown009(::google::protobuf::uint32 value) {
  
  unknown009_ = value;
  // @@protoc_insertion_point(field_set:eqproto.AlternateAdvancementStatsEvent.unknown009)
}

inline const AlternateAdvancementStatsEvent* AlternateAdvancementStatsEvent::internal_default_instance() {
  return &AlternateAdvancementStatsEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneCompleteEvent::ZoneCompleteEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.ZoneCompleteEvent)
}
ZoneCompleteEvent::ZoneCompleteEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.ZoneCompleteEvent)
}

void ZoneCompleteEvent::InitAsDefaultInstance() {
}

ZoneCompleteEvent::ZoneCompleteEvent(const ZoneCompleteEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.ZoneCompleteEvent)
}

void ZoneCompleteEvent::SharedCtor() {
  _cached_size_ = 0;
}

ZoneCompleteEvent::~ZoneCompleteEvent() {
  // @@protoc_insertion_point(destructor:eqproto.ZoneCompleteEvent)
  SharedDtor();
}

void ZoneCompleteEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void ZoneCompleteEvent::ArenaDtor(void* object) {
  ZoneCompleteEvent* _this = reinterpret_cast< ZoneCompleteEvent* >(object);
  (void)_this;
}
void ZoneCompleteEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ZoneCompleteEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneCompleteEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZoneCompleteEvent_descriptor_;
}

const ZoneCompleteEvent& ZoneCompleteEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ZoneCompleteEvent> ZoneCompleteEvent_default_instance_;

ZoneCompleteEvent* ZoneCompleteEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ZoneCompleteEvent>(arena);
}

void ZoneCompleteEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.ZoneCompleteEvent)
}

bool ZoneCompleteEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.ZoneCompleteEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.ZoneCompleteEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.ZoneCompleteEvent)
  return false;
#undef DO_
}

void ZoneCompleteEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.ZoneCompleteEvent)
  // @@protoc_insertion_point(serialize_end:eqproto.ZoneCompleteEvent)
}

::google::protobuf::uint8* ZoneCompleteEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.ZoneCompleteEvent)
  // @@protoc_insertion_point(serialize_to_array_end:eqproto.ZoneCompleteEvent)
  return target;
}

size_t ZoneCompleteEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.ZoneCompleteEvent)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneCompleteEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.ZoneCompleteEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ZoneCompleteEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneCompleteEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.ZoneCompleteEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.ZoneCompleteEvent)
    UnsafeMergeFrom(*source);
  }
}

void ZoneCompleteEvent::MergeFrom(const ZoneCompleteEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.ZoneCompleteEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ZoneCompleteEvent::UnsafeMergeFrom(const ZoneCompleteEvent& from) {
  GOOGLE_DCHECK(&from != this);
}

void ZoneCompleteEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.ZoneCompleteEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneCompleteEvent::CopyFrom(const ZoneCompleteEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.ZoneCompleteEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ZoneCompleteEvent::IsInitialized() const {

  return true;
}

void ZoneCompleteEvent::Swap(ZoneCompleteEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ZoneCompleteEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void ZoneCompleteEvent::UnsafeArenaSwap(ZoneCompleteEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ZoneCompleteEvent::InternalSwap(ZoneCompleteEvent* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneCompleteEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZoneCompleteEvent_descriptor_;
  metadata.reflection = ZoneCompleteEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneCompleteEvent

inline const ZoneCompleteEvent* ZoneCompleteEvent::internal_default_instance() {
  return &ZoneCompleteEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseAAEvent::kBeginFieldNumber;
const int UseAAEvent::kAbilityFieldNumber;
const int UseAAEvent::kEndFieldNumber;
const int UseAAEvent::kActionFieldNumber;
const int UseAAEvent::kTargetIdFieldNumber;
const int UseAAEvent::kExpValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseAAEvent::UseAAEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:eqproto.UseAAEvent)
}
UseAAEvent::UseAAEvent(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_InitDefaults_message_2eproto();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:eqproto.UseAAEvent)
}

void UseAAEvent::InitAsDefaultInstance() {
}

UseAAEvent::UseAAEvent(const UseAAEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eqproto.UseAAEvent)
}

void UseAAEvent::SharedCtor() {
  ::memset(&begin_, 0, reinterpret_cast<char*>(&exp_value_) -
    reinterpret_cast<char*>(&begin_) + sizeof(exp_value_));
  _cached_size_ = 0;
}

UseAAEvent::~UseAAEvent() {
  // @@protoc_insertion_point(destructor:eqproto.UseAAEvent)
  SharedDtor();
}

void UseAAEvent::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void UseAAEvent::ArenaDtor(void* object) {
  UseAAEvent* _this = reinterpret_cast< UseAAEvent* >(object);
  (void)_this;
}
void UseAAEvent::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void UseAAEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseAAEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseAAEvent_descriptor_;
}

const UseAAEvent& UseAAEvent::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UseAAEvent> UseAAEvent_default_instance_;

UseAAEvent* UseAAEvent::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<UseAAEvent>(arena);
}

void UseAAEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:eqproto.UseAAEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UseAAEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UseAAEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(begin_, exp_value_);

#undef ZR_HELPER_
#undef ZR_

}

bool UseAAEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eqproto.UseAAEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 begin = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ability;
        break;
      }

      // optional uint32 ability = 2;
      case 2: {
        if (tag == 16) {
         parse_ability:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_end;
        break;
      }

      // optional uint32 end = 3;
      case 3: {
        if (tag == 24) {
         parse_end:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_action;
        break;
      }

      // optional uint32 action = 4;
      case 4: {
        if (tag == 32) {
         parse_action:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_target_id;
        break;
      }

      // optional uint32 target_id = 5;
      case 5: {
        if (tag == 40) {
         parse_target_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_exp_value;
        break;
      }

      // optional uint32 exp_value = 6;
      case 6: {
        if (tag == 48) {
         parse_exp_value:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_value_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eqproto.UseAAEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eqproto.UseAAEvent)
  return false;
#undef DO_
}

void UseAAEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eqproto.UseAAEvent)
  // optional uint32 begin = 1;
  if (this->begin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->begin(), output);
  }

  // optional uint32 ability = 2;
  if (this->ability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability(), output);
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end(), output);
  }

  // optional uint32 action = 4;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->action(), output);
  }

  // optional uint32 target_id = 5;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_id(), output);
  }

  // optional uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->exp_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:eqproto.UseAAEvent)
}

::google::protobuf::uint8* UseAAEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eqproto.UseAAEvent)
  // optional uint32 begin = 1;
  if (this->begin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->begin(), target);
  }

  // optional uint32 ability = 2;
  if (this->ability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability(), target);
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end(), target);
  }

  // optional uint32 action = 4;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->action(), target);
  }

  // optional uint32 target_id = 5;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_id(), target);
  }

  // optional uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->exp_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eqproto.UseAAEvent)
  return target;
}

size_t UseAAEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eqproto.UseAAEvent)
  size_t total_size = 0;

  // optional uint32 begin = 1;
  if (this->begin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin());
  }

  // optional uint32 ability = 2;
  if (this->ability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ability());
  }

  // optional uint32 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end());
  }

  // optional uint32 action = 4;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action());
  }

  // optional uint32 target_id = 5;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_id());
  }

  // optional uint32 exp_value = 6;
  if (this->exp_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseAAEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eqproto.UseAAEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UseAAEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseAAEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eqproto.UseAAEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eqproto.UseAAEvent)
    UnsafeMergeFrom(*source);
  }
}

void UseAAEvent::MergeFrom(const UseAAEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eqproto.UseAAEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UseAAEvent::UnsafeMergeFrom(const UseAAEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.begin() != 0) {
    set_begin(from.begin());
  }
  if (from.ability() != 0) {
    set_ability(from.ability());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.exp_value() != 0) {
    set_exp_value(from.exp_value());
  }
}

void UseAAEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eqproto.UseAAEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseAAEvent::CopyFrom(const UseAAEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eqproto.UseAAEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UseAAEvent::IsInitialized() const {

  return true;
}

void UseAAEvent::Swap(UseAAEvent* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    UseAAEvent temp;
    temp.UnsafeMergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void UseAAEvent::UnsafeArenaSwap(UseAAEvent* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void UseAAEvent::InternalSwap(UseAAEvent* other) {
  std::swap(begin_, other->begin_);
  std::swap(ability_, other->ability_);
  std::swap(end_, other->end_);
  std::swap(action_, other->action_);
  std::swap(target_id_, other->target_id_);
  std::swap(exp_value_, other->exp_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseAAEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseAAEvent_descriptor_;
  metadata.reflection = UseAAEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseAAEvent

// optional uint32 begin = 1;
void UseAAEvent::clear_begin() {
  begin_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::begin() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.begin)
  return begin_;
}
void UseAAEvent::set_begin(::google::protobuf::uint32 value) {
  
  begin_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.begin)
}

// optional uint32 ability = 2;
void UseAAEvent::clear_ability() {
  ability_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::ability() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.ability)
  return ability_;
}
void UseAAEvent::set_ability(::google::protobuf::uint32 value) {
  
  ability_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.ability)
}

// optional uint32 end = 3;
void UseAAEvent::clear_end() {
  end_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::end() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.end)
  return end_;
}
void UseAAEvent::set_end(::google::protobuf::uint32 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.end)
}

// optional uint32 action = 4;
void UseAAEvent::clear_action() {
  action_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::action() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.action)
  return action_;
}
void UseAAEvent::set_action(::google::protobuf::uint32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.action)
}

// optional uint32 target_id = 5;
void UseAAEvent::clear_target_id() {
  target_id_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::target_id() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.target_id)
  return target_id_;
}
void UseAAEvent::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.target_id)
}

// optional uint32 exp_value = 6;
void UseAAEvent::clear_exp_value() {
  exp_value_ = 0u;
}
::google::protobuf::uint32 UseAAEvent::exp_value() const {
  // @@protoc_insertion_point(field_get:eqproto.UseAAEvent.exp_value)
  return exp_value_;
}
void UseAAEvent::set_exp_value(::google::protobuf::uint32 value) {
  
  exp_value_ = value;
  // @@protoc_insertion_point(field_set:eqproto.UseAAEvent.exp_value)
}

inline const UseAAEvent* UseAAEvent::internal_default_instance() {
  return &UseAAEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace eqproto

// @@protoc_insertion_point(global_scope)
